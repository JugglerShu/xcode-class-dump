/*
 *     Generated by class-dump 3.3.3 (64 bit) (Debug version compiled Aug 11 2011 13:55:57).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark -

/*
 * File: /Developer/Library/Xcode/PrivatePlugIns/IDERTFEditor.ideplugin/Contents/MacOS/IDERTFEditor
 * UUID: 1BB5CE6C-CFA0-3922-855A-F0A88115980A
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 503.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 */

@protocol DVTDiffTextFilter <NSObject>
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

@optional
+ (id)pathToTextFileFromInputFilePath:(id)arg1 error:(id *)arg2;
+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
@end

@protocol DVTTextFindable <NSObject>
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
@end

@protocol DVTTextReplacable <NSObject>
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;

@optional
- (BOOL)replaceTextWithContentsOfURL:(id)arg1 error:(id *)arg2;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (void)layoutManagerDidInvalidateLayout:(id)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorageDidProcessEditing:(id)arg1;
- (void)textStorageWillProcessEditing:(id)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (id)undoManagerForTextView:(id)arg1;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (id)textView:(id)arg1 URLForContentsOfTextAttachment:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@interface IDERichTextDocument : IDEEditorDocument <DVTTextFindable, DVTTextReplacable, NSTextStorageDelegate>
{
    BOOL setUpPrintInfoDefaults;
    NSTextStorage *textStorage;
    double scaleFactor;
    BOOL isReadOnly;
    NSColor *backgroundColor;
    double hyphenationFactor;
    struct CGSize viewSize;
    BOOL hasMultiplePages;
    NSString *author;
    NSString *copyright;
    NSString *company;
    NSString *title;
    NSString *subject;
    NSString *comment;
    NSArray *keywords;
    BOOL openedIgnoringRichText;
    unsigned long long documentEncoding;
    BOOL convertedDocument;
    BOOL lossyDocument;
    BOOL transient;
    NSURL *defaultDestination;
    unsigned long long documentEncodingForSaving;
}

@property(getter=isTransient) BOOL transient; // @synthesize transient;
@property BOOL hasMultiplePages; // @synthesize hasMultiplePages;
@property(copy) NSTextStorage *textStorage; // @synthesize textStorage;
@property double scaleFactor; // @synthesize scaleFactor;
@property struct CGSize viewSize; // @synthesize viewSize;
@property double hyphenationFactor; // @synthesize hyphenationFactor;
@property(getter=isLossy) BOOL lossy; // @synthesize lossy=lossyDocument;
@property(getter=isOpenedIgnoringRichText) BOOL openedIgnoringRichText; // @synthesize openedIgnoringRichText;
@property(getter=isConverted) BOOL converted; // @synthesize converted=convertedDocument;
@property unsigned long long encodingForSaving; // @synthesize encodingForSaving=documentEncodingForSaving;
@property unsigned long long encoding; // @synthesize encoding=documentEncoding;
@property(copy) NSColor *backgroundColor; // @synthesize backgroundColor;
@property(getter=isReadOnly) BOOL readOnly; // @synthesize readOnly=isReadOnly;
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;
- (void)_undoReplaceFindResults:(id)arg1;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)textStorageDidProcessEditing:(id)arg1;
- (void)panelForPDFSaveDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)revertDocumentToSaved:(id)arg1;
- (void)encodingPopupChanged:(id)arg1;
- (void)appendPlainTextExtensionChanged:(id)arg1;
- (void)toggleHyphenation:(id)arg1;
- (void)togglePageBreaks:(id)arg1;
- (BOOL)toggleRichWillLoseInformation;
- (void)toggleReadOnly:(id)arg1;
- (id)printInfo;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setValue:(id)arg1 forDocumentProperty:(id)arg2;
- (void)setDocumentPropertiesToDefaults;
- (void)clearDocumentProperties;
- (BOOL)hasDocumentProperties;
- (id)knownDocumentProperties;
- (id)documentPropertyToAttributeNameMappings;
@property(getter=isRichText) BOOL richText;
- (BOOL)isTransientAndCanBeReplaced;
@property struct CGSize paperSize;
- (id)packageFileWrapperOrDataOfType:(id)arg1 error:(id *)arg2;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (unsigned long long)suggestedDocumentEncoding;
- (id)defaultTextAttributes:(BOOL)arg1;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 encoding:(unsigned long long)arg3 ignoreRTF:(BOOL)arg4 ignoreHTML:(BOOL)arg5 error:(id *)arg6;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)textDocumentTypeToTextEditDocumentTypeMappingTable;
- (BOOL)canSave;
- (id)init;
- (BOOL)validateMenuItem:(id)arg1;
- (id)displayName;
- (BOOL)shouldRunSavePanelWithAccessoryView;
- (void)saveDocumentWithDelegate:(id)arg1 didSaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (void)setFileURL:(id)arg1;
- (id)autosavingFileType;
- (BOOL)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (void)updateChangeCount:(unsigned long long)arg1;
- (BOOL)keepBackupFile;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;

// Remaining properties
@property unsigned long long supportedMatchingOptions;

@end

@interface IDERichTextDocumentUndoPayload : NSObject
{
    NSString *_string;
    NSString *_replacementString;
    struct _NSRange _range;
}

@property struct _NSRange range; // @synthesize range=_range;
@property(copy) NSString *replacementString; // @synthesize replacementString=_replacementString;
@property(copy) NSString *string; // @synthesize string=_string;
- (id)description;
- (id)initWithString:(id)arg1 replacementString:(id)arg2 range:(struct _NSRange)arg3;

@end

@interface IDERichTextEditorRulerView : NSRulerView
{
}

+ (id)backgroundColor;

@end

@interface IDERichTextEditorScalingScrollView : NSScrollView
{
    NSPopUpButton *_scalePopUpButton;
    double scaleFactor;
}

+ (void)initialize;
- (void)setHasHorizontalScroller:(BOOL)arg1;
- (void)setScaleFactor:(double)arg1 adjustPopup:(BOOL)arg2;
- (void)setScaleFactor:(double)arg1;
- (double)scaleFactor;
- (void)scalePopUpAction:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)tile;
- (void)makeScalePopUpButton;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDERichTextEditorViewController : IDEEditor <NSLayoutManagerDelegate, NSTextViewDelegate, NSTextDelegate, DVTFindBarFindable>
{
    IDERichTextEditorScalingScrollView *_scrollView;
    BOOL hasMultiplePages;
    BOOL rulerIsBeingDisplayed;
    BOOL isSettingSize;
    NSLayoutManager *_layoutManager;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (void)initialize;
@property NSLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)selectDocumentLocations:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (void)didEndToggleRichSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)toggleRich:(id)arg1;
- (void)doToggleRichWithNewURL:(id)arg1;
- (void)doForegroundLayoutToCharacterIndex:(unsigned long long)arg1;
- (void)setHasMultiplePages:(BOOL)arg1 force:(BOOL)arg2;
- (id)documentView;
- (void)removePage;
- (void)addPage;
- (unsigned long long)numberOfPages;
- (void)convertTextForRichTextStateRemoveAttachments:(BOOL)arg1;
- (void)updateForRichTextAndRulerState;
- (void)removeAttachments;
- (BOOL)isHyphenationAllowed;
- (BOOL)isRulerVisible;
- (void)showRuler:(id)arg1;
- (void)showRulerDelayed:(BOOL)arg1;
- (void)setupTextViewForDocument;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupInitialTextViewSharedState;
- (id)firstTextView;
- (void)breakUndoCoalescing;
- (id)document;
- (void)takeFocus;
- (void)loadView;
- (struct _NSRange)visibleCharacterRange;
- (void)invalidate;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;
- (void)printDocument:(id)arg1;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)useSelectionForReplace:(id)arg1;
- (void)useSelectionForFind:(id)arg1;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)jumpToSelection:(id)arg1;
- (void)rtf_toggleHyphenation:(id)arg1;
- (void)rtf_addLink:(id)arg1;
- (void)rtf_toggleRuler:(id)arg1;
- (void)rtf_insertParagraphBreak:(id)arg1;
- (void)rtf_insertLineBreak:(id)arg1;
- (void)rtf_insertPageBreak:(id)arg1;

@end

@interface _IDERTFEditorBundlePrivateClassForFindingBundle : NSObject
{
}

@end

@interface IDERichTextTextView : NSTextView
{
    NSArray *_foundLocations;
    DVTTextDocumentLocation *_currentFoundLocation;
}

@property(copy) DVTTextDocumentLocation *currentFoundLocation; // @synthesize currentFoundLocation=_currentFoundLocation;
@property(copy) NSArray *foundLocations; // @synthesize foundLocations=_foundLocations;
- (void)drawFoundLocationsInRange:(struct _NSRange)arg1;

@end

@interface IDERichTextLayoutManager : NSLayoutManager
{
}

- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;

@end

@interface IDERichTextConversionProvider : NSObject <DVTDiffTextFilter>
{
}

+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

@end

