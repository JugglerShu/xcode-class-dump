/*
 *     Generated by class-dump 3.3.3 (64 bit) (Debug version compiled Aug 11 2011 13:55:57).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct DevkitCompilationUnitPointers {
    void *_field1;
    void *_field2;
};

struct DevkitTreeSearcherPatternElement {
    int _field1;
    char *_field2;
    char _field3;
    long long _field4;
    struct DevkitTreeSearcherPatternElement **_field5;
};

struct _DevkitLineInfo {
    struct _NSRange lineRange;
    unsigned long long startLineColumn;
    unsigned long long endLineColumn;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

#pragma mark -

/*
 * File: /Developer/Library/Xcode/PrivatePlugIns/IDEDevkitRefactoring.ideplugin/Contents/MacOS/IDEDevkitRefactoring
 * UUID: 02DB4D42-DD5C-38B3-A237-10EBBE2E44F9
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 529.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 */

@protocol DVTInvalidation <NSObject>
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTSourceExpressionSource <NSObject, DVTInvalidation>
@property(readonly) DVTSourceExpression *mouseOverExpression;
@property(readonly) struct CGRect currentSelectionFrame;
@property(readonly) DVTSourceExpression *contextMenuExpression;
@property(readonly) DVTSourceExpression *selectedExpression;

@optional
@property(readonly) DVTSourceExpression *quickHelpExpression;
- (void)unregisterMouseOverExpressionObserver:(id)arg1;
- (void)registerMouseOverExpressionObserver:(id)arg1;
- (void)unregisterSelectedExpressionObserver:(id)arg1;
- (void)registerSelectedExpressionObserver:(id)arg1;
@end

@protocol DVTTextFindable <NSObject>
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
@end

@protocol DevkitRefactoringParserCallbacks
- (id)getStringAtFile:(id)arg1 line:(unsigned long long)arg2;
- (id)getStringAtLocation:(id)arg1 replacing:(id)arg2;
- (id)getStringAtLocation:(id)arg1;
- (id)memorySourceForFile:(const char *)arg1;
- (BOOL)beginHeader:(id)arg1;
- (void)addFunctionBody:(id)arg1;
- (id)allFunctionBodies;
- (id)allClassMethods;
- (id)allInstanceMethods;
- (BOOL)isPointInMacroBody:(id)arg1 checkBefore:(BOOL)arg2;
- (BOOL)isPointInMacro:(id)arg1 checkBefore:(BOOL)arg2;
- (BOOL)isLocationInMacro:(id)arg1;
- (id)macroDefinitionLocation:(const char *)arg1;
- (BOOL)isMacroDefined:(const char *)arg1;
- (id)nodeAtLocation:(id)arg1;
- (id)globalScope;
@end

@protocol DevkitScopeLookup
- (void)addDeclaration:(id)arg1 project:(id)arg2;
- (id)findName:(id)arg1 nameKind:(int)arg2;
- (id)lookupNameRecursively:(id)arg1 nameKind:(int)arg2 upTo:(id)arg3;
- (id)lookupName:(id)arg1 nameKind:(int)arg2;
- (void)setContainingScope:(id)arg1;
- (id)declarations;
- (id)containingScope;
@end

@protocol IDERefactoringReservedWordChecking <NSObject>

@optional
- (BOOL)wordIsReserved:(id)arg1;
@end

@protocol IDERefactoringSelectionValidation
+ (BOOL)isRefactoring:(id)arg1 allowedForSelectedSymbols:(id)arg2 error:(id *)arg3;
+ (BOOL)isRefactoring:(id)arg1 allowedForSourceExpression:(id)arg2 error:(id *)arg3;
@end

@protocol IDERefactoringTransformation <IDERefactoringReservedWordChecking>
@property IDEWorkspaceDocument *workspaceDocument;
@property IDERefactoring *refactoring;
@property IDEIndexSymbol *selectedSymbol;
@property IDEIndex *index;
- (id)snapshotDescription;
- (void)cancel;
- (BOOL)applyChangesWithError:(id *)arg1;
- (BOOL)calculateChangesWithProgressBlock:(id)arg1;
- (id)dataFromInitialFile:(id *)arg1;
- (BOOL)processUserInput:(id)arg1 outInitialFiles:(id *)arg2 outError:(id *)arg3;
- (BOOL)processInitialInput:(id)arg1 editedFileContents:(id)arg2 outError:(id *)arg3;
- (id)renameNewName;
- (id)renameOldName;
- (id)relatedFileIndexSymbols:(id)arg1 forSelectedSymbols:(id)arg2;
- (BOOL)parseCompilationUnit:(id)arg1 buildSettings:(id)arg2 error:(id *)arg3;
- (BOOL)requiresObjCOrCCompilationUnits;
- (BOOL)isRefactoring:(id)arg1 allowedForSourceExpression:(id)arg2 error:(id *)arg3;
- (BOOL)requiresSymbol;
- (BOOL)requiresSelection;
@end

@protocol IDESourceExpressionSource <DVTSourceExpressionSource>
- (BOOL)expressionContainsExecutableCode:(id)arg1;
- (BOOL)isExpressionFunctionOrMethodCall:(id)arg1;
- (BOOL)isExpressionInFunctionOrMethodBody:(id)arg1;
- (BOOL)isExpressionFunctionOrMethodDefinition:(id)arg1;
- (BOOL)isExpressionWithinComment:(id)arg1;
- (void)symbolsForExpression:(id)arg1 inQueue:(struct dispatch_queue_s *)arg2 completionBlock:(id)arg3;

@optional
- (id)importStringInExpression:(id)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@interface DevkitParseErrorStream : NSObject
{
    NSMutableString *_log;
    BOOL _writeToString;
    BOOL _writeToStderr;
}

- (void)dealloc;
- (id)errorString;
- (void)addInformation:(id)arg1;
- (void)addInformationInFile:(const char *)arg1 atLine:(long long)arg2 withMessage:(id)arg3;
- (void)addWarningInFile:(const char *)arg1 atLine:(long long)arg2 withMessage:(id)arg3;
- (void)addErrorInFile:(const char *)arg1 atLine:(long long)arg2 withMessage:(id)arg3;
- (id)_filestringfromFilename:(const char *)arg1;
- (void)addString:(id)arg1;
- (void)setSendOutputToString:(BOOL)arg1;
- (void)setSendOutputToStderr:(BOOL)arg1;
- (id)init;

@end

@interface DevkitConstant : NSObject
{
    int type;
    long long value;
}

+ (id)charConstant:(const char *)arg1;
+ (id)intConstant:(const char *)arg1;
+ (id)int:(long long)arg1;
+ (id)type:(int)arg1 int:(long long)arg2;
- (BOOL)isUnsigned;
- (id)type:(int)arg1;
- (int)type;
- (long long)int;
- (id)int:(long long)arg1;

@end

@interface DevkitASTNode : NSObject
{
}

- (long long)compareLocation:(id)arg1;
- (id)location;
- (id)shortDescription;
- (id)containingClass;
- (id)containingMethodContainer;
- (id)containingMethod;
- (id)containingFunction;
- (id)containingDeclaration;
- (id)containingScope;
- (id)prettyPrint;
- (id)parent;

@end

@interface DevkitBaseType : NSObject
{
    DevkitDeclaration *_userType;
    int _builtinType;
    unsigned int _isEmptyType:1;
    unsigned int _isBuiltinType:1;
    unsigned int _isStruct:1;
    unsigned int _isUnion:1;
    unsigned int _isConst:1;
    unsigned int _isRestrict:1;
    unsigned int _isVolatile:1;
    unsigned int _isStrong:1;
    unsigned int _isUnsigned:1;
    unsigned int _isTypedefClass:1;
    unsigned int _isAutoClass:1;
    unsigned int _isStaticClass:1;
    unsigned int _isExternClass:1;
    unsigned int _isRegisterClass:1;
    unsigned int _isBlockByref:1;
    unsigned int _isCallablePtr:1;
}

- (id)baseTypeWithoutStorageClass;
- (id)description;
- (id)cleanDescription;
- (BOOL)isUnsigned;
- (BOOL)isStrong;
- (BOOL)isRestrict;
- (BOOL)isVolatile;
- (BOOL)isBlockByref;
- (BOOL)isRegister;
- (BOOL)isConst;
- (BOOL)isRegisterClass;
- (BOOL)isStaticClass;
- (BOOL)isAutoClass;
- (BOOL)isExternClass;
- (BOOL)isTypedefClass;
- (void)addBlockByrefQualifier;
- (void)addRegisterClass;
- (void)addExternClass;
- (void)addStaticClass;
- (void)addAutoClass;
- (void)addTypedefClass;
- (void)addUnsignedQualifier;
- (void)addStrongQualifier;
- (void)addVolatileQualifier;
- (void)addRestrictQualifier;
- (void)addConstQualifier;
- (void)setIsCallablePtr;
- (BOOL)isCallablePtr;
- (void)setIsUnion:(BOOL)arg1;
- (BOOL)isUnion;
- (void)setIsStruct:(BOOL)arg1;
- (BOOL)isStruct;
- (id)userType;
- (void)setUserType:(id)arg1;
- (BOOL)isUserType:(id)arg1;
- (int)basicType;
- (void)setBuiltinType:(int)arg1;
- (BOOL)isBuiltinType;
- (id)copy;
- (id)initWithBasicType:(int)arg1;
- (id)initWithUserType:(id)arg1;
- (id)init;

@end

@interface DevkitUtils : NSObject
{
}

+ (id)subarrayFromArray:(id)arg1 fromIndex:(unsigned long long)arg2;
+ (id)stringByDeletingAllWhitespaceFromString:(id)arg1;
+ (id)stringByRemovingLeadingAndTrailingWhitespaceAndNewlinesFromString:(id)arg1;
+ (id)getterStringWithIsPrefix:(id)arg1;
+ (id)setterString:(id)arg1;
+ (id)stringWithColonSuffix:(id)arg1;

@end

@interface DevkitConvertToPropertyEngine : DevkitTransformationEngine
{
    NSString *_newPropertyName;
    BOOL _deleteIvar;
    DevkitObjcMethodDeclaration *_getterMethod;
    DevkitObjcMethodDeclaration *_setterMethod;
    BOOL _setterDoesRetainRelease;
    NSString *_defaultGetterName;
    NSString *_defaultSetterName;
}

+ (void)initialize;
- (BOOL)performFinal;
- (void)deleteMethodInterface:(id)arg1;
- (BOOL)performPerFile;
- (BOOL)performFirstFile;
- (BOOL)checkFinal;
- (void)findGetterInMethods:(id)arg1;
- (void)findSetterInMethods:(id)arg1;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;
- (id)transformRelatedNames;

@end

@interface DevkitCreateSuperclassEngine : DevkitTransformationEngine
{
    BOOL _foundInterface;
    BOOL _foundImplementation;
    BOOL _createNewFiles;
    NSString *_newHeaderName;
}

- (BOOL)performPerFile;
- (BOOL)checkFinal;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitDeclSet : DevkitASTNode
{
    id *_decls;
    long long _numberOfDecls;
    long long _declArraySize;
    long long _context;
    DevkitBaseType *_baseType;
    DevkitLocation *_overallLocation;
    DevkitLocation *_userTypeNameLocation;
}

- (id)shortDescription;
- (void)setUserTypeNameLocation:(id)arg1;
- (id)userTypeNameLocation;
- (id)description;
- (void)printDeclarations;
- (void)removeDeclaration:(id)arg1;
- (void)addDecl:(id)arg1;
- (void)setContext:(long long)arg1;
- (id)declAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)overallLocation;
- (void)setOverallLocation:(id)arg1;
- (void)setLocation:(id)arg1;
- (id)location;
- (id)containingScope;
- (void)addTypedefClass;
- (void)setBaseType:(id)arg1;
- (id)baseType;
- (id)declarations;
- (unsigned long long)declarationsInDeclSet;
- (void)dealloc;
- (id)initWithOverallLocation:(id)arg1;
- (long long)context;

@end

@interface DevkitDeclaration : DevkitASTNode <DevkitScopeLookup>
{
    NSString *_name;
    NSMutableArray *_declarationSites;
    NSMutableArray *_useNodes;
    DevkitASTNode<DevkitScopeLookup> *_containingScope;
    DevkitType *_type;
    DevkitType *_parentType;
    DevkitFunctionBodyExpression *_functionBodyHook;
    NSMutableDictionary *_declarations;
    NSMutableArray *_parameters;
    NSMutableDictionary *_structDeclarations;
    unsigned int _hasParameters:1;
    unsigned int _declKind:5;
    unsigned int _isAnonymous:1;
    unsigned int _isImplicit:1;
    unsigned int _hasFunctionDefinition:1;
    unsigned int _dupsRemovedFromUseNodes:1;
    unsigned int _hasDuplicateDeclarations:1;
    unsigned int _isSynthesized:1;
    unsigned int _isCallablePointer:1;
    unsigned int _isBlockPointer:1;
}

+ (id)memoryUse;
- (id)returnStringLeftSide:(id *)arg1 rightSide:(id *)arg2;
- (id)castString;
- (BOOL)mergeWithDecl:(id)arg1 namesMustMatch:(BOOL)arg2;
- (id)lookupNameRecursively:(id)arg1 nameKind:(int)arg2 upTo:(id)arg3;
- (id)lookupName:(id)arg1 nameKind:(int)arg2;
- (long long)compareName:(id)arg1;
- (id)prettyPrintCallablePointerWithName:(BOOL)arg1 leftSide:(id *)arg2 rightSide:(id *)arg3;
- (id)prettyName;
- (id)prettyPrint;
- (id)longDescription;
- (id)description;
- (id)findName:(id)arg1 nameKind:(int)arg2;
- (BOOL)isPointerToClass:(id)arg1;
- (id)parentType;
- (void)setParentType:(id)arg1;
- (id)type;
- (void)setType:(id)arg1;
- (id)methods;
- (id)parameters;
- (id)structDeclarations;
- (id)declarations;
- (void)removeDeclarations:(id)arg1 project:(id)arg2;
- (void)removeDeclaration:(id)arg1 project:(id)arg2;
- (void)addParameter:(id)arg1;
- (void)addDeclaration:(id)arg1 project:(id)arg2;
- (id)containingScope;
- (void)setContainingScope:(id)arg1;
- (id)useNodes;
- (void)findUseInBody:(id)arg1 results:(id)arg2;
- (id)originalUseNodes;
- (void)addUseNode:(id)arg1;
- (BOOL)isLocalVar;
- (BOOL)isLocalVarOrParam;
- (BOOL)isObjcMethodContainer;
- (BOOL)isCategory;
- (BOOL)isProperty;
- (BOOL)isBlockParameter;
- (BOOL)isParameter;
- (BOOL)isIvar;
- (BOOL)isField;
- (BOOL)isEnumValue;
- (BOOL)isUnion;
- (BOOL)isStruct;
- (BOOL)isEnum;
- (BOOL)isCppClass;
- (BOOL)isTypedef;
- (BOOL)isObjcClass;
- (BOOL)isVariable;
- (BOOL)isGlobalScope;
- (BOOL)isProtocol;
- (void)setFunctionBodyHook:(id)arg1;
- (id)functionBodyHook;
- (BOOL)hasFunctionDefinition;
- (void)setHasFunctionDefinition;
- (BOOL)isObjcMethod;
- (BOOL)isBlock;
- (BOOL)isFunction;
- (id)errorLocation;
- (id)definingInstance;
- (BOOL)hasDeclarationSiteAt:(id)arg1;
- (id)lastDeclarationSite;
- (id)declarationSites;
- (void)addDeclarationSitesFromDecl:(id)arg1;
- (void)addDeclarationSite:(id)arg1;
- (void)setIsBlockPointer;
- (BOOL)isBlockPointer;
- (void)setIsFunctionPointer;
- (BOOL)isFunctionPointer;
- (void)_setIsCallablePointer;
- (BOOL)isCallablePointer;
- (void)setHasDuplicateDeclarations:(BOOL)arg1;
- (BOOL)hasDuplicateDeclarations;
- (void)setIsImplicit;
- (BOOL)isImplicit;
- (BOOL)isAnonymous;
- (void)setIsAnonymous:(BOOL)arg1;
- (void)setIsBlock;
- (void)setIsFunction;
- (void)setName:(id)arg1;
- (id)declKindLocalizedCapitalizedString;
- (id)declKindLocalizedIndefiniteArticleString;
- (id)declKindLocalizedString;
- (int)declKind;
- (id)name;
- (void)dealloc;
- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;
- (id)initAnonymousDeclWithKind:(int)arg1 containingScope:(id)arg2;
- (id)initWithDeclName:(id)arg1 withKind:(int)arg2 containingScope:(id)arg3;
- (id)allUses;
- (id)allDefs;

@end

@interface DevkitObjcMethodContainerDeclaration : DevkitDeclaration
{
    DevkitLocation *_interfaceLocation;
    DevkitLocation *_implementationLocation;
    NSMutableDictionary *_objcMethodDeclarations;
    NSMutableDictionary *_objcClassMethodDeclarations;
    NSMutableDictionary *_properties;
    NSMutableArray *_protocolsAdopted;
    NSMutableArray *_categories;
}

- (id)allMethodsWithName:(id)arg1 isClassMethod:(BOOL)arg2;
- (id)lookupMessage:(id)arg1 isClassMethod:(BOOL)arg2;
- (id)findMessageInClassAndCategories:(id)arg1 isClassMethod:(BOOL)arg2;
- (id)findMessage:(id)arg1 isClassMethod:(BOOL)arg2;
- (void)adoptProtocol:(id)arg1;
- (id)protocolsAdopted;
- (id)findName:(id)arg1 nameKind:(int)arg2;
- (id)categories;
- (void)addCategory:(id)arg1;
- (void)addDeclaration:(id)arg1 project:(id)arg2;
- (id)properties;
- (id)methods;
- (void)removeDeclaration:(id)arg1 project:(id)arg2;
- (void)setImplementationLocation:(id)arg1;
- (id)implementationLocation;
- (void)setInterfaceLocation:(id)arg1;
- (id)interfaceLocation;
- (void)dealloc;
- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;

@end

@interface DevkitProtocolDeclaration : DevkitObjcMethodContainerDeclaration
{
}

- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;

@end

@interface DevkitObjcClassDeclaration : DevkitObjcMethodContainerDeclaration
{
    DevkitObjcClassDeclaration *_superclass;
    NSMutableArray *_subclasses;
    DevkitLocation *_superclassNameLocation;
    DevkitLocation *_leftCurlyLocation;
    DevkitLocation *_rightCurlyLocation;
}

- (id)methodsInClassHierarchy:(id)arg1 isClassMethod:(BOOL)arg2;
- (id)longDescription;
- (void)removeDeclaration:(id)arg1 project:(id)arg2;
- (id)findPropertyName:(id)arg1;
- (id)findFieldName:(id)arg1;
- (id)lookupObjcMethod:(id)arg1 findOnlyClassMethod:(BOOL)arg2;
- (void)setCloseInstanceVarLocation:(id)arg1;
- (void)setOpenInstanceVarLocation:(id)arg1;
- (id)closeInstanceVarLocation;
- (id)openInstanceVarLocation;
- (void)setSuperclassNameLocation:(id)arg1;
- (id)superclassNameLocation;
- (BOOL)isSuperclassOf:(id)arg1;
- (void)setSuperclass:(id)arg1;
- (id)allDerivedClasses;
- (BOOL)isClassOrSubclassOf:(id)arg1;
- (id)subclasses;
- (id)superclass;
- (void)dealloc;
- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;

@end

@interface DevkitObjcCategoryDeclaration : DevkitObjcMethodContainerDeclaration
{
}

- (void)addDeclaration:(id)arg1 project:(id)arg2;
- (id)prettyName;
- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;

@end

@interface DevkitObjcMethodDeclaration : DevkitDeclaration
{
    BOOL _isClassMethod;
}

- (id)prettyPrint;
- (id)interfaceInstance;
- (void)setIsClassMethod;
- (BOOL)isClassMethod;
- (id)definingInstance;
- (id)description;
- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;

@end

@interface DevkitPropertyAttributesInfo : NSObject
{
    NSString *_getterName;
    DevkitLocation *_getterNameLocation;
    NSString *_setterName;
    DevkitLocation *_setterNameLocation;
    NSString *_ivarName;
    BOOL _hasIvar;
    BOOL _isReadOnly;
}

- (id)description;
- (void)addIvar:(const char *)arg1;
- (void)addSetter:(const char *)arg1 location:(id)arg2;
- (void)addGetter:(const char *)arg1 location:(id)arg2;
- (id)ivarName;
- (id)setterNameLocation;
- (id)setterName;
- (id)getterNameLocation;
- (id)getterName;
- (void)setHasIvar;
- (BOOL)hasIvar;
- (void)setIsReadOnly;
- (BOOL)isReadOnly;
- (void)dealloc;

@end

@interface DevkitPropertyDeclaration : DevkitDeclaration
{
    DevkitPropertyAttributesInfo *_attributesInfo;
}

@property(retain) DevkitPropertyAttributesInfo *attributesInfo; // @synthesize attributesInfo=_attributesInfo;
- (id)defaultSetterName;
- (id)setterNameLocation;
- (id)setterName;
- (id)defaultGetterName;
- (id)getterNameLocation;
- (id)getterName;
- (id)ivarName;
- (BOOL)isReadOnly;
- (BOOL)hasIvar;
- (id)initWithDeclName:(id)arg1 containingScope:(id)arg2;

@end

@interface DevkitDeclarationInstance : NSObject
{
    DevkitLocation *_nameLoc;
    BOOL _isDefinition;
    DevkitDeclSet *_declSet;
}

- (long long)compareLocation:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)setIsDefinition;
- (BOOL)isDefinition;
- (id)declSet;
- (id)declNameLocation;
- (void)setDeclNameLocation:(id)arg1;
- (id)initWithLocation:(id)arg1 declSet:(id)arg2;

@end

@interface DevkitObjcMessageDeclInstance : DevkitDeclarationInstance
{
    NSMutableArray *_keywordLocations;
}

- (void)addKeywordLocation:(id)arg1;
- (id)keywordLocations;
- (void)dealloc;
- (id)initWithLocation:(id)arg1 declSet:(id)arg2;

@end

@interface DevkitEditEvent : NSObject
{
    DevkitLocation *_location;
    long long _priority;
}

- (long long)priority;
- (id)filename;
- (BOOL)applyChange:(id)arg1;
- (long long)compare:(id)arg1;
- (unsigned long long)classCompareOrder;
- (id)location;
- (void)dealloc;
- (id)initWithLocation:(id)arg1 priority:(long long)arg2;

@end

@interface DevkitStringInsertAfterEditEvent : DevkitEditEvent
{
    NSString *_newString;
}

- (id)description;
- (unsigned long long)classCompareOrder;
- (id)newString;
- (BOOL)applyChange:(id)arg1;
- (void)dealloc;
- (id)initWithLocation:(id)arg1 newString:(id)arg2 priority:(long long)arg3;

@end

@interface DevkitStringInsertBeforeEditEvent : DevkitEditEvent
{
    NSString *_newString;
}

- (id)description;
- (unsigned long long)classCompareOrder;
- (id)newString;
- (BOOL)applyChange:(id)arg1;
- (void)dealloc;
- (id)initWithLocation:(id)arg1 newString:(id)arg2 priority:(long long)arg3;

@end

@interface DevkitDeleteEditEvent : DevkitEditEvent
{
}

- (id)description;
- (unsigned long long)classCompareOrder;
- (BOOL)applyChange:(id)arg1;

@end

@interface DevkitStringReplaceEditEvent : DevkitEditEvent
{
    NSString *_oldString;
    NSString *_newString;
}

- (id)description;
- (unsigned long long)classCompareOrder;
- (id)toString;
- (id)fromString;
- (BOOL)applyChange:(id)arg1;
- (void)dealloc;
- (id)initWithLocation:(id)arg1 oldString:(id)arg2 newString:(id)arg3 priority:(long long)arg4;

@end

@interface DevkitEditor : NSObject
{
    NSMutableArray *_lines;
    NSString *_filename;
    BOOL _pendingChanges;
    NSCharacterSet *_nonBlankChars;
    NSMutableArray *_potentiallyBlankLines;
}

- (id)filename;
- (id)getStringAtStartLine:(unsigned long long)arg1 col:(unsigned long long)arg2 toLine:(unsigned long long)arg3 col:(unsigned long long)arg4 replacing:(id)arg5;
- (id)getStringAtStartLine:(unsigned long long)arg1 col:(unsigned long long)arg2 toLine:(unsigned long long)arg3 col:(unsigned long long)arg4;
- (id)getStringAtLine:(unsigned long long)arg1;
- (BOOL)deleteFromLine:(unsigned long long)arg1 col:(unsigned long long)arg2 toLine:(unsigned long long)arg3 col:(unsigned long long)arg4;
- (BOOL)insertStringAtLine:(unsigned long long)arg1 column:(unsigned long long)arg2 string:(id)arg3;
- (BOOL)changeStringAtLine:(unsigned long long)arg1 column:(unsigned long long)arg2 fromString:(id)arg3 toString:(id)arg4;
- (BOOL)hasPendingChanges;
- (BOOL)writeFile;
- (void)removeIfBlank:(unsigned long long)arg1;
- (void)rescanFile;
- (void)dealloc;
- (id)initWithFile:(id)arg1;
- (id)initWithFileContents:(id)arg1;
- (void)breakLinesForFileContents:(id)arg1;

@end

@interface DevkitEncapsulateInstanceVariableEngine : DevkitTransformationEngine
{
    BOOL _addedFunctionsToImplementation;
    BOOL _addedFunctionsToInterface;
    NSString *_setterFunctionText;
    NSString *_setterPrototypeText;
    NSString *_getterFunctionText;
    NSString *_getterPrototypeText;
    NSString *_setterName;
    NSString *_getterName;
}

- (BOOL)performPerFile;
- (void)convertIvarReference:(id)arg1;
- (void)convertMemberReference:(id)arg1 forIdentifier:(id)arg2;
- (void)makeFieldGetterExprFor:(id)arg1 identifier:(id)arg2 priority:(long long)arg3;
- (void)makeFieldSetterExprFor:(id)arg1 identifier:(id)arg2 priority:(long long)arg3;
- (void)makeGetterExprFor:(id)arg1;
- (void)makeSetterExprFor:(id)arg1;
- (BOOL)performFirstFile;
- (BOOL)checkFinal;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)getterMethodName;
- (id)setterMethodName;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitEncapsulateFieldEngine : DevkitTransformationEngine
{
    NSString *_setterFnPrototype;
    NSString *_getterFnPrototype;
    NSString *_setterFnDefinition;
    NSString *_getterFnDefinition;
    NSString *_setterName;
    NSString *_getterName;
    BOOL _haveInsertedFunctionPrototypes;
    BOOL _haveInsertedFunctionDefinitions;
}

- (BOOL)performFinal;
- (BOOL)performPerFile;
- (void)makeGetterExprFor:(id)arg1 identifier:(id)arg2 priority:(long long)arg3;
- (void)makeSetterExprFor:(id)arg1 identifier:(id)arg2 priority:(long long)arg3;
- (BOOL)performFirstFile;
- (BOOL)checkFinal;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitEntireProject : DevkitGlobalProjectData <DevkitRefactoringParserCallbacks>
{
    void *_parserCallbacks;
    void *_parser;
    void *_cpp;
    void *_cppCallbacks;
    struct DevkitCompilationUnitPointers *_previousPointers;
    unsigned long long _compilationUnitCount;
    NSMutableDictionary *_fileSummaryCache;
    NSMutableDictionary *_filesParsedInCompilationUnit;
    void *_stringTable;
    struct _NSZone *_lexerZone;
    struct _NSZone *_everythingZone;
    NSString *_currentCompilationUnitName;
    BOOL _shutDownImmediately;
    NSString *_sdkRoot;
    BOOL _printHeaderIncludes;
    long long _predestinedFileLanguage;
    BOOL _fileLanguagePredestined;
    DevkitParseErrorStream *_errorStream;
    const char *_scriptfilename;
    const char *_outputfilename;
}

- (void)finish;
- (id)bodyForFunctionDecl:(id)arg1;
- (BOOL)isLocationInMacroParameter:(id)arg1;
- (BOOL)isLocationInMacroBody:(id)arg1;
- (BOOL)isPointInMacroBody:(id)arg1 checkBefore:(BOOL)arg2;
- (BOOL)isPointInMacro:(id)arg1 checkBefore:(BOOL)arg2;
- (id)macroNameAtLocation:(id)arg1;
- (BOOL)isLocationInMacro:(id)arg1;
- (void)printMacroLocations;
- (id)macroDefinitionLocation:(const char *)arg1;
- (BOOL)isMacroDefined:(const char *)arg1;
- (id)filenameToIncludeMappingDict;
- (void)stopParsing;
- (struct _NSZone *)parserZone;
- (id)reparseFunctionBody:(id)arg1;
- (BOOL)parseOneCompilationUnit:(id)arg1;
- (void)setSdkRoot:(id)arg1;
- (id)sdkRoot;
- (unsigned long long)fileLanguage;
- (void)fakeCriticalDefines;
- (BOOL)shouldRegisterStandardIncludes;
- (id)undefinedMacroNames;
- (id)predefinedMacroNamesAndDefs;
- (id)userIncludePaths;
- (id)systemIncludePaths;
- (id)frameworkSearchPaths;
- (id)preincludeFiles;
- (void *)inputStreamForCompilationUnit:(id)arg1;
- (BOOL)parse:(id)arg1;
- (BOOL)beginHeader:(id)arg1;
- (void)rememberLocationForDecl:(id)arg1 inFile:(id)arg2;
- (id)getStringAtFile:(id)arg1 line:(unsigned long long)arg2;
- (id)getStringAtLocation:(id)arg1 replacing:(id)arg2;
- (id)getStringAtLocation:(id)arg1;
- (id)memorySourceForFile:(const char *)arg1;
- (void)rememberCompilationUnitPointers:(void *)arg1 inputStream:(void *)arg2;
- (void)cleanup;
- (void)setup;
- (id)init;

@end

@interface DevkitExpression : DevkitASTNode
{
    DevkitType *_type;
    NSMutableArray *_children;
    int _kind;
    DevkitExpression *_parent;
    DevkitLocation *_location;
    DevkitLocation *_semiLocation;
}

+ (void)initialize;
- (BOOL)containsLocalDeclaration:(id)arg1;
- (id)parentList;
- (id)childAfterLocation:(id)arg1;
- (id)childBeforeLocation:(id)arg1;
- (id)searchString;
- (id)expressionContainingLocation:(id)arg1;
- (id)description;
- (id)shortDescription;
- (id)prettyPrint;
- (void)dumpAST;
- (void)dumpASTLevel:(unsigned long long)arg1;
- (BOOL)maxHeight;
- (BOOL)isChildOfAny:(id)arg1;
- (BOOL)isChildOf:(id)arg1;
- (BOOL)isStatement;
- (id)overallLocation;
- (id)overallChildren;
- (id)location;
- (void)setSemiLocation:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setExpressionKind:(int)arg1;
- (int)expressionKind;
- (id)children;
- (long long)numberOfChildren;
- (id)childAtIndex:(long long)arg1;
- (void)addChild:(id)arg1;
- (id)expressionParent;
- (id)nontrivialParent;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)containingStatement;
- (id)containingScope;
- (id)type;
- (void)setType:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)common_finalization;
- (id)init;
- (BOOL)declaration:(id)arg1 hasReachingUsesOutside:(id)arg2;
- (id)reaching_uses_for:(id)arg1;
- (id)control_exits;
- (id)killed_defs;
- (id)reaching_defs;
- (id)reaching_defs_of_decl:(id)arg1;
- (id)reaching_defs_internal_for:(id)arg1;
- (id)control_predecessors;
- (id)loopExitsIncludeBreak:(BOOL)arg1 includeContinue:(BOOL)arg2;
- (id)default_control_predecessors_with_parent:(id)arg1;
- (id)referencesTo:(id)arg1;
- (id)control_entry;
- (id)control_successors;
- (id)allSwitchLabelStatements;
- (id)default_control_successors_with_parent:(id)arg1;
- (id)containing_loop;
- (id)containing_loop_or_switch;
- (id)containing_switch;
- (BOOL)is_control_flow_interesting;
- (id)followingStatement;
- (id)transitive_control_successors;
- (BOOL)isResultUnused;
- (BOOL)hasSideEffects;
- (BOOL)isUse:(id)arg1;
- (BOOL)isDef:(id)arg1 isPartial:(char *)arg2;
- (BOOL)isDef:(id)arg1;
- (id)_highestMemberParent;
- (BOOL)isLValue;

@end

@interface DevkitLabelOrGotoExpression : DevkitExpression
{
    NSString *_labelString;
}

- (void)dealloc;
- (id)gotosForLabel;
- (void)setLabel:(id)arg1;
- (id)label;
- (id)labelForGoto;
- (id)containingBody;
- (id)init;

@end

@interface DevkitIdentifierExpression : DevkitExpression
{
    DevkitDeclaration *_identDecl;
}

- (id)shortDescription;
- (id)description;
- (id)type;
- (id)prettyPrint;
- (id)declaration;
- (void)setDeclaration:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DevkitTypeArgumentExpression : DevkitExpression
{
    DevkitDeclSet *_typeArgument;
}

- (id)shortDescription;
- (id)typeArgument;
- (void)setTypeArgument:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DevkitOffsetofTypeExpression : DevkitExpression
{
    DevkitDeclSet *_offsetofType;
}

- (id)shortDescription;
- (id)offsetofType;
- (void)setOffsetofType:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DevkitParenExpression : DevkitExpression
{
    DevkitLocation *_rparen;
}

- (void)dealloc;
- (id)overallLocation;
- (id)rightParenLocation;
- (void)setRightParenLoc:(id)arg1;
- (id)init;

@end

@interface DevkitMemberExpression : DevkitExpression
{
    DevkitIdentifierExpression *_fieldIdent;
    BOOL _isPointer;
}

- (id)shortDescription;
- (id)prettyPrint;
- (void)setIsPointer:(BOOL)arg1;
- (BOOL)isPointer;
- (id)expressionContainingLocation:(id)arg1;
- (id)fieldIdentifier;
- (void)setFieldIdentifier:(id)arg1;
- (id)overallChildren;
- (void)dealloc;
- (id)init;

@end

@interface DevkitPropertyMemberExpression : DevkitMemberExpression
{
}

- (id)init;

@end

@interface DevkitFakePropertyMemberExpression : DevkitMemberExpression
{
}

- (id)init;

@end

@interface DevkitCastExpression : DevkitExpression
{
    DevkitDeclSet *_castTypeDeclSet;
}

- (void)setCastTypeDeclSet:(id)arg1;
- (id)castTypeDeclSet;
- (id)shortDescription;
- (id)prettyPrint;
- (void)dealloc;
- (id)init;

@end

@interface DevkitFunctionCallExpression : DevkitExpression
{
    DevkitExpression *_functionExpr;
    DevkitLocation *_lparen;
    DevkitLocation *_rparen;
}

- (id)searchString;
- (id)shortDescription;
- (id)prettyPrint;
- (id)rightParenLocation;
- (id)leftParenLocation;
- (void)setRightParenLoc:(id)arg1;
- (void)setLeftParenLoc:(id)arg1;
- (id)functionExpr;
- (id)overallChildren;
- (id)expressionContainingLocation:(id)arg1;
- (id)overallLocation;
- (void)setFunctionExpr:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DevkitObjcMessageExpression : DevkitExpression
{
    NSString *_messageName;
    NSMutableArray *_keywordLocations;
    DevkitLocation *_lbracket;
    DevkitLocation *_rbracket;
}

- (id)prettyPrint;
- (id)overallLocation;
- (id)rightBracketLocation;
- (id)leftBracketLocation;
- (void)setRightBracketLoc:(id)arg1;
- (void)setLeftBracketLoc:(id)arg1;
- (id)keywordLocations;
- (id)messageName;
- (void)dealloc;
- (void)setMessageName:(id)arg1;
- (id)init;

@end

@interface DevkitUnaryExpression : DevkitExpression
{
    int _opKind;
}

- (BOOL)isModifyOperation;
- (id)shortDescription;
- (id)prettyPrint;
- (int)operationKind;
- (id)initWithOperation:(int)arg1;

@end

@interface DevkitUnaryPostfixExpression : DevkitUnaryExpression
{
}

- (id)shortDescription;
- (id)prettyPrint;
- (id)initWithOperation:(int)arg1;

@end

@interface DevkitBinaryExpression : DevkitExpression
{
    int _opKind;
}

- (id)shortDescription;
- (id)prettyPrint;
- (BOOL)isOperatorAndAssignOperation;
- (int)operationKind;
- (id)initWithOperation:(int)arg1;

@end

@interface DevkitAssignmentExpression : DevkitBinaryExpression
{
}

- (id)shortDescription;
- (id)prettyPrint;
- (id)initWithOperation:(int)arg1;

@end

@interface DevkitConstantExpression : DevkitExpression
{
    NSString *_stringValue;
}

- (id)shortDescription;
- (id)prettyPrint;
- (id)stringValue;
- (void)setStringValue:(const char *)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface DevkitDeclarationContainingStatement : DevkitExpression <DevkitScopeLookup>
{
    NSMutableArray *_declarations;
    DevkitASTNode<DevkitScopeLookup> *_containingScope;
}

- (id)shortDescription;
- (BOOL)containsLocalDeclaration:(id)arg1;
- (id)lookupNameRecursively:(id)arg1 nameKind:(int)arg2 upTo:(id)arg3;
- (id)lookupName:(id)arg1 nameKind:(int)arg2;
- (id)findName:(id)arg1 nameKind:(int)arg2;
- (void)setContainingScope:(id)arg1;
- (void)addDeclaration:(id)arg1 project:(id)arg2;
- (id)declarations;
- (id)containingScope;
- (void)dealloc;
- (id)initWithContainingScope:(id)arg1;

@end

@interface DevkitCompoundStatement : DevkitDeclarationContainingStatement
{
}

- (id)shortDescription;
- (id)prettyPrint;
- (id)type;
- (id)initWithContainingScope:(id)arg1 startPos:(id)arg2;

@end

@interface DevkitSelectorExpression : DevkitExpression
{
    NSString *_selectorName;
}

- (id)selectorName;
- (void)setSelectorName:(id)arg1;
- (id)init;

@end

@interface DevkitDeclarationStatement : DevkitExpression
{
    NSMutableArray *_declarationInitializerPairs;
}

- (id)declarations;
- (id)prettyPrint;
- (id)overallLocation;
- (id)expressionOrDeclarationAtLocation:(id)arg1;
- (id)expressionContainingLocation:(id)arg1;
- (long long)numberOfChildren;
- (id)pairAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfDecls;
- (id)overallChildren;
- (id)childAtIndex:(long long)arg1;
- (void)addDeclaration:(id)arg1 initializer:(id)arg2 project:(id)arg3;
- (BOOL)initializesDeclaration:(id)arg1;
- (BOOL)containsLocalDeclaration:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)containedLocalDeclaration:(id)arg1 hasUsesOutside:(id)arg2;
- (BOOL)containedLocalDeclaration:(id)arg1 hasReferences:(id)arg2 insideExpressions:(BOOL)arg3;
- (BOOL)containedLocalDeclaration:(id)arg1 hasReachingUsesOutside:(id)arg2;
- (BOOL)foundDeclInitPairForLocalVar:(id)arg1 initializer:(id *)arg2 usesOfLocal:(id *)arg3;
- (BOOL)foundDeclInitPairForLocalVar:(id)arg1 initializer:(id *)arg2;

@end

@interface DevkitFunctionBodyExpression : DevkitExpression
{
    DevkitDeclaration *_owningFunction;
    DevkitExpression *_functionBody;
    DevkitLocation *_functionBodyLocation;
}

- (id)overallChildren;
- (long long)numberOfChildren;
- (id)expressionContainingLocation:(id)arg1;
- (id)childAtIndex:(long long)arg1;
- (id)children;
- (BOOL)hasFlushedFunctionBody;
- (id)functionBodyLocation;
- (id)functionBody;
- (id)owningFunction;
- (void)setFunctionBody:(id)arg1;
- (void)flushFunctionBody;
- (void)setOwningFunction:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DevkitBlockLiteralExpression : DevkitExpression <DevkitScopeLookup>
{
    DevkitDeclaration *_blockDeclaration;
    DevkitType *_complexType;
    DevkitASTNode<DevkitScopeLookup> *_containingScope;
    BOOL _hasInvocation;
}

- (void)addDeclaration:(id)arg1 project:(id)arg2;
- (id)findName:(id)arg1 nameKind:(int)arg2;
- (id)lookupNameRecursively:(id)arg1 nameKind:(int)arg2 upTo:(id)arg3;
- (id)lookupName:(id)arg1 nameKind:(int)arg2;
- (id)declarations;
- (void)setContainingScope:(id)arg1;
- (id)containingScope;
- (BOOL)hasInvocation;
- (void)setHasInvocation;
- (id)type;
- (void)setType:(id)arg1;
- (void)setblockBodyExpression:(id)arg1;
- (void)setBlockDeclaration:(id)arg1;
- (id)blockDeclaration;
- (void)dealloc;
- (id)initWithContainingScope:(id)arg1 location:(id)arg2;

@end

@interface DevkitExtractEngine : DevkitTransformationEngine
{
}

+ (BOOL)populateParamDictionary:(id)arg1 project:(id)arg2 error:(id *)arg3;
+ (BOOL)_isIdentifierAnIvar:(id)arg1 setParameterBehavior:(id)arg2;
+ (id)adjustSelectionIfNeeded:(id)arg1 error:(id *)arg2;
+ (id)findOrCreateParameterFor:(id)arg1 inDictionary:(id)arg2;
+ (id)parameterInfoForDeclaration:(id)arg1 inDictionary:(id)arg2;
+ (BOOL)isValidBody:(id)arg1;
+ (id)variableReferencesNotVisibleIfMoved:(id)arg1 project:(id)arg2 newScope:(id)arg3;
- (BOOL)performFinal;
- (BOOL)performPerFile;
- (BOOL)checkPerFile;
- (id)matchTrees:(id)arg1 inBody:(id)arg2;
- (BOOL)performFirstFile;
- (id)functionBodyForExpressions:(id)arg1 atLocation:(id)arg2 errorLocation:(id)arg3;
- (id)editToRemoveDeclarationFor:(id)arg1;
- (void)rewriteReferencesTo:(id)arg1 inExpressions:(id)arg2 editArray:(id)arg3;
- (void)rewriteReferencesToSelf:(id)arg1 InExpressions:(id)arg2 editArray:(id)arg3;
- (id)editForDeleteDeclaration:(id)arg1;
- (void)makeMessageWithParameters:(id)arg1 functionName:(id)arg2 sourceLocation:(id)arg3;
- (void)makeFunctionCallWithParameters:(id)arg1 functionName:(id)arg2 sourceLocation:(id)arg3;
- (id)localVariableToReturn;
- (BOOL)checkFinal;
- (BOOL)checkFirstFile;
- (void)_checkBlockByrefExpressions:(id)arg1;
- (id)newMethodName;
- (BOOL)hasReturnValue;
- (BOOL)checkValidateInputs;
- (id)methodOrFunctionLocalizedString;
- (id)newFunctionName;
- (BOOL)willMakeClassMethod;
- (BOOL)willMakeMethod;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;

@end

@interface DevkitFileCache : NSObject
{
    NSMapTable *_fileEditorMap;
}

- (void)dealloc;
- (void)finalize;
- (BOOL)writeFiles;
- (BOOL)rescanFiles;
- (id)editorForFile:(id)arg1;
- (id)init;

@end

@interface DevkitSavedMacro : NSObject
{
    const char *_macroName;
    char *_macroExpansion;
}

- (const char *)macroExpansion;
- (const char *)macroName;
- (void)dealloc;
- (id)initWithName:(const char *)arg1 expansion:(id)arg2;

@end

@interface DevkitFileSummary : NSObject
{
    NSString *_filename;
    NSPointerArray *_typedefNames;
    NSPointerArray *_objcClassNames;
    NSMutableArray *_macros;
    NSMutableArray *_includes;
    BOOL _changesThisCompile;
}

- (BOOL)changesThisCompile;
- (void)clearChangesThisCompile;
- (id)includes;
- (id)macros;
- (void)enumerateOverObjcClassNamesUsingBlock:(id)arg1;
- (void)enumerateOverTypedefNamesUsingBlock:(id)arg1;
- (void)addInclude:(id)arg1;
- (void)addMacroDef:(const char *)arg1 expansion:(id)arg2;
- (void)addObjcClassName:(const char *)arg1;
- (void)addTypedefName:(const char *)arg1;
- (void)dealloc;
- (id)initWithFilename:(id)arg1;

@end

@interface DevkitConvertToObjC2Engine : DevkitTransformationEngine
{
    BOOL _convertToFastEnumeration;
    BOOL _convertToProperties;
    BOOL _bailOnAnyFailures;
    NSMutableArray *_forwardedClassDeclarations;
    NSMutableArray *_inProgressPropertyEngines;
    DevkitTreeSearcher *_forSearcher;
    DevkitTreeSearcher *_whileSearcher;
}

- (BOOL)checkFinal;
- (void)cleanupTransformSpecificPerFile;
- (BOOL)canFlushFunctionBodiesPerFile;
- (BOOL)checkPerFile;
- (void)_appendPropertyTransformForClassDeclaration:(id)arg1;
- (BOOL)checkFirstFile;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;
- (id)requiredParamDictKeys;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;

@end

@interface DevkitConvertToFastEnumerationEngine : DevkitTransformationEngine
{
    int _loopKind;
    NSString *_loopItemVarName;
}

- (BOOL)canFlushFunctionBodiesPerFile;
- (BOOL)performFinal;
- (BOOL)checkFinal;
- (BOOL)checkWhileLoopFinal;
- (BOOL)checkForLoopFinal;
- (id)_foreachBodyStrFromUsesOfInitDecl:(id)arg1 indexDecl:(id)arg2 arrayDecl:(id)arg3 arrayExpr:(id)arg4 forExpr:(id)arg5 declsToDelete:(id)arg6;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (id)requiredParamDictKeys;
- (BOOL)checkValidateInputs;
- (void)dealloc;
- (id)transformRelatedNames;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitGlobalProjectData : NSObject
{
    DevkitDeclaration *_globalScope;
    NSMutableArray *_allFunctionBodies;
    NSMutableDictionary *_allInstanceMethods;
    NSMutableDictionary *_allClassMethods;
    NSMutableSet *_allClassesSet;
    NSMutableArray *_allClassesList;
    NSMutableArray *_protocols;
    NSMutableDictionary *_declsInFileDict;
    NSMutableDictionary *_duplicateDeclarations;
    DevkitType *_unsignedType;
    DevkitType *_intType;
    DevkitType *_voidType;
    DevkitType *_longType;
    DevkitType *_unsignedLongType;
    DevkitType *_classType;
    DevkitDeclaration *_classDecl;
    DevkitDeclaration *_classStructDecl;
}

- (id)bodyForFunctionDecl:(id)arg1;
- (id)classType;
- (void)initializeClassType;
- (id)unsignedLongType;
- (id)longType;
- (id)voidType;
- (id)intType;
- (id)unsignedType;
- (id)protocols;
- (void)addProtocol:(id)arg1;
- (id)findProtocol:(id)arg1;
- (id)propertyForExpression:(id)arg1;
- (id)propertyForClass:(id)arg1 messageName:(id)arg2;
- (id)_propertyForMessageName:(id)arg1 inContainer:(id)arg2;
- (id)methodForExpression:(id)arg1;
- (id)lookupObjcMethodWithReceiverType:(id)arg1 messageName:(id)arg2;
- (id)allClassMethods;
- (id)allInstanceMethods;
- (id)nodeRangeAtLocation:(id)arg1;
- (id)expressionAtLocation:(id)arg1;
- (id)expressionAtLocation:(id)arg1 inDecls:(id)arg2;
- (id)nodeAtLocation:(id)arg1;
- (id)nodeInBodyOfDeclaration:(id)arg1 atLocation:(id)arg2;
- (id)nodeInDeclaration:(id)arg1 atLocation:(id)arg2;
- (id)expressionOrDeclAtLocation:(id)arg1 inTree:(id)arg2;
- (void)addFunctionBody:(id)arg1;
- (id)duplicateDeclarations;
- (void)addClass:(id)arg1;
- (id)allClassesWithInterface;
- (id)allClasses;
- (id)allFunctionBodies;
- (void)cleanup;
- (void)setup;
- (id)globalScope;

@end

@interface DevkitIncludeFileMapping : NSObject
{
    NSString *_actuallncludeFilename;
    DevkitLocation *_locationOfInclude;
}

- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)locationOfInclude;
- (id)actualIncludeFilename;
- (void)dealloc;
- (id)initWithFilename:(id)arg1 location:(id)arg2;

@end

@interface DevkitMoveMethodUpEngine : DevkitTransformationEngine
{
}

- (BOOL)performFinal;
- (BOOL)checkPerFile;
- (BOOL)checkFinal;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitExtractParameter : NSObject
{
    NSString *_name;
    NSString *_keyword;
    DevkitType *_type;
    id _backingDeclaration;
    BOOL _isPassByReference;
    BOOL _isUninitialized;
    BOOL _isReturnedValue;
    BOOL _isReturnedValueNeedsInitializer;
    BOOL _isSelf;
    long long _parameterBehavior;
    int _isDefinedBehavior;
}

- (BOOL)isPartiallyDefinedInFunction;
- (void)setIsPartiallyDefinedInFunction:(BOOL)arg1;
- (BOOL)isSelf;
- (void)setIsSelf;
- (id)description;
- (void)setNeedsInitializer;
- (BOOL)needsInitializer;
- (void)setIsReturnedValue;
- (BOOL)isReturnedValue;
- (BOOL)hasInOutParameterBehavior;
- (BOOL)hasOutParameterBehavior;
- (BOOL)hasInParameterBehavior;
- (BOOL)hasNoParameterBehavior;
- (void)setHasNoParameterBehavior;
- (void)setHasOutParameterBehavior;
- (void)setHasInParameterBehavior;
- (BOOL)isUninitialized;
- (void)setIsUninitialized;
- (id)backingDeclaration;
- (BOOL)isPassByReference;
- (void)setType:(id)arg1;
- (id)type;
- (void)setName:(id)arg1;
- (id)name;
- (void)setKeyword:(id)arg1;
- (id)keyword;
- (void)dealloc;
- (id)copy;
- (id)initWithName:(id)arg1 type:(id)arg2 backingDeclaration:(id)arg3 isPassByReference:(BOOL)arg4;

@end

@interface DevkitRenameClassNoDeclarationEngine : DevkitRenameEngine
{
    BOOL _declFound;
}

- (BOOL)performFinal;
- (BOOL)canFlushFunctionBodiesPerFile;
- (BOOL)performPerFile;
- (BOOL)performFirstFile;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (id)_declarationFromNewClasses;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitRenameIncludesEngine : DevkitTransformationEngine
{
    NSMutableArray *_includeSitesChanged;
}

- (BOOL)checkFinal;
- (BOOL)performPerFile;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitRenameInstanceVariableAndKVCMethodsEngine : DevkitTransformationEngine
{
    DevkitRenameEngine *_renameTransform;
    NSString *_cachedOldKey;
    NSString *_cachedNewKey;
}

- (BOOL)performFinal;
- (BOOL)checkFinal;
- (BOOL)_replaceKey:(id)arg1 withKey:(id)arg2 ofMessage:(id)arg3 withDescriptor:(id)arg4 typedOnly:(BOOL)arg5;
- (void)cleanupTransformSpecificPerFile;
- (BOOL)performPerFile;
- (BOOL)performFirstFile;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;
- (BOOL)hasSimpleErrors;
- (id)fatalErrorLog;
- (id)errorLog;
- (id)warningLog;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitRenameMethodEngine : DevkitTransformationEngine
{
    NSString *_oldName;
    NSString *_newName;
    BOOL _renameMethodInAllClasses;
    NSMutableArray *_potentialMatches;
    NSMutableSet *_declarationInstancesAlreadyChanged;
    DevkitTreeSearcher *_messageSearcher;
    DevkitTreeSearcher *_selectorSearcher;
    DevkitType *_idType;
    DevkitType *_ptrToClassType;
    NSArray *_newComponents;
    NSArray *_oldComponents;
    int _componentCount;
    unsigned int _numberOfIdWarnings;
    NSMutableSet *_classesWithMethodRenamedWarnings;
}

- (BOOL)canFlushFunctionBodiesPerFile;
- (BOOL)performPerFile;
- (void)renameDeclarationInstance:(id)arg1;
- (BOOL)isCorrectTypeOfReceiver:(id)arg1 ifClassMethod:(BOOL)arg2;
- (BOOL)messageSend:(id)arg1 isReceivedByClassInSet:(id)arg2 isClassMethod:(BOOL)arg3;
- (BOOL)checkPerFile;
- (BOOL)checkFinal;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitRenamePrefixEngine : DevkitTransformationEngine
{
}

- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;
- (BOOL)checkValidateInputs;
- (BOOL)_checkValidInputsAndAddFatalError:(BOOL)arg1;
- (id)requiredParamDictKeys;

@end

@interface DevkitRenameEngine : DevkitTransformationEngine
{
    BOOL _conflictingMacroFound;
    DevkitCompoundStatement *_functionBodyContainingDeclaration;
}

- (BOOL)performFinal;
- (BOOL)canFlushFunctionBodiesPerFile;
- (BOOL)performPerFile;
- (BOOL)checkPerFile;
- (BOOL)checkFinal;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)requiredParamDictKeys;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;
- (void)_initProperty;
- (void)_addRelatedDeclarationForName:(id)arg1 defaultName:(id)arg2 newName:(id)arg3 typeString:(id)arg4 location:(id)arg5;
- (void)renameRelatedDeclaration:(id)arg1 toName:(id)arg2;

@end

@interface DevkitLocation : NSObject
{
    void *_pointerToToken;
    void *_pointerToEndToken;
    void *_pointerToStream;
    NSString *_filename;
    unsigned long long _startLine;
    unsigned long long _endLine;
    unsigned long long _startCol;
    unsigned long long _endCol;
    int _streamKind;
    unsigned int _filenameFilledIn:1;
    unsigned int _endTokenInLocation:1;
    unsigned int _locationIsPoint:1;
}

+ (id)locationWithLocation:(id)arg1;
+ (id)locationWithFilename:(id)arg1 startLine:(unsigned long long)arg2 startCol:(unsigned long long)arg3 endLine:(unsigned long long)arg4 endCol:(unsigned long long)arg5;
+ (void)endSession;
+ (id)uniqueDeclName:(id)arg1;
+ (id)uniqueFilename:(id)arg1;
+ (void)beginSession;
+ (void)initialize;
- (id)containingMacroStart;
- (BOOL)locationInMacroBody;
- (BOOL)locationInMacro;
- (BOOL)locationIsPoint;
- (BOOL)hasSameStartAs:(id)arg1;
- (void)unionWithLocation:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)containedIn:(id)arg1;
- (long long)compare:(id)arg1;
- (id)description;
- (void)print;
- (unsigned long long)endCol;
- (unsigned long long)startCol;
- (unsigned long long)endLine;
- (unsigned long long)startLine;
- (id)filename;
- (id)locationWithStartOnly;
- (id)locationWithEndOnly;
- (id)initWithFilename:(id)arg1 startLine:(unsigned long long)arg2 startCol:(unsigned long long)arg3 endLine:(unsigned long long)arg4 endCol:(unsigned long long)arg5;
- (id)initWithToken:(void *)arg1 cppStream:(void *)arg2;
- (id)initWithToken:(void *)arg1 parserStream:(void *)arg2;
- (void)setEndToken:(void *)arg1 withinRange:(BOOL)arg2;
- (void)grabTokenInformation;
- (void *)startToken;

@end

@interface DevkitTransformationEngine : NSObject
{
    NSMutableSet *_warningLog;
    NSMutableSet *_errorLog;
    NSMutableSet *_fatalErrorLog;
    DevkitTransformInstance *_transformInstance;
    DevkitDeclaration *_declaration;
    NSDictionary *_paramDictionary;
    BOOL _suppressErrors;
    NSMapTable *_usesSeenStore;
    NSMapTable *_usesSeenThisFileStore;
    NSMapTable *_numberOfUsesSeenStore;
    NSMapTable *_declSitesSeenStore;
    NSMapTable *_declSitesSeenThisFileStore;
    unsigned long long _numberOfFunctionBodiesSeen;
    unsigned long long _numberOfClassesSeen;
    BOOL _hasSimpleErrors;
    NSMutableArray *_subengines;
}

+ (BOOL)populateParamDictionary:(id)arg1 project:(id)arg2 error:(id *)arg3;
+ (id)transformDescriptions;
+ (void)registerTransformDescription:(id)arg1;
- (id)transformInstance;
- (id)refactoringErrorString;
- (id)allNewClassesWithInterface;
- (id)allNewClasses;
- (void)doneWithFunctionBodies;
- (BOOL)canFlushFunctionBodiesPerFileIncludingSubtransformations;
- (BOOL)canFlushFunctionBodiesPerFile;
- (id)allNewFunctionBodies;
- (id)allFunctionBodiesReparse;
- (id)allFunctionBodies;
- (BOOL)willSuppressErrors;
- (void)setSuppressErrors:(BOOL)arg1;
- (void)addSubengine:(id)arg1;
- (BOOL)commit;
- (id)newDeclarationSitesForDeclaration:(id)arg1;
- (id)newUseNodesForDeclaration:(id)arg1;
- (id)getFunctionBodyForFBE:(id)arg1;
- (id)transformRelatedNames;
- (BOOL)performFinal;
- (void)cleanupPerFile;
- (void)cleanupTransformSpecificPerFile;
- (BOOL)performPerFile;
- (BOOL)performFirstFile;
- (BOOL)checkFinal;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)requiredParamDictKeys;
- (void)copyErrorsFromTransform:(id)arg1;
- (void)addSimpleWarningAtLocation:(id)arg1 withFormat:(id)arg2;
- (void)addSimpleErrorAtLocation:(id)arg1 withFormat:(id)arg2;
- (void)addFatalErrorAtLocation:(id)arg1 withFormat:(id)arg2;
- (BOOL)hasSimpleErrors;
- (id)fatalErrorLog;
- (id)errorLog;
- (id)warningLog;
- (id)project;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;
- (id)declarationStringForType:(id)arg1 name:(id)arg2;
- (id)firstSelectorKeywordFromMethod:(id)arg1;
- (BOOL)isSystemHeader:(id)arg1;
- (int)visibilityInClassInterface:(id)arg1 atLocation:(id)arg2;
- (id)directiveForVisibility:(int)arg1;
- (BOOL)createCurlyBracketsInClass:(id)arg1 andInsertText:(id)arg2;
- (BOOL)deleteDeclarations:(id)arg1;
- (BOOL)deleteDeclaration:(id)arg1;
- (BOOL)renameMethodCalls:(id)arg1 toMethod:(id)arg2 forClass:(id)arg3 includeIds:(BOOL)arg4 includeSubclasses:(BOOL)arg5 newFunctionsOnly:(BOOL)arg6;
- (void)renameMessageExpr:(id)arg1 fromMessage:(id)arg2 toMessage:(id)arg3;
- (BOOL)checkRenameMethodCalls:(id)arg1 toMethod:(id)arg2 forClass:(id)arg3;
- (BOOL)declaration:(id)arg1 visibleInNewScope:(id)arg2;
- (id)doesDeclNamed:(id)arg1 nameKind:(int)arg2 haveUsesInScope:(id)arg3;
- (id)doesDeclNamed:(id)arg1 replacingDecl:(id)arg2 existInScopeOfUseBefore:(id)arg3;
- (id)allMethodsWithName:(id)arg1 inSubclassesOf:(id)arg2 isClassMethod:(BOOL)arg3;
- (id)allMethodsWithName:(id)arg1 isClassMethod:(BOOL)arg2;
- (id)gatherMessageSends:(id)arg1 onlyForClass:(id)arg2 includeSubclasses:(BOOL)arg3 newFunctionsOnly:(BOOL)arg4;
- (id)gatherSelectorsForMessageName:(id)arg1;
- (id)gatherMessageSendsToId:(id)arg1 newFunctionsOnly:(BOOL)arg2;

@end

@interface DevkitTransformInstance : NSObject
{
    NSMutableArray *_changeList;
    DevkitFileCache *_fileCache;
    NSMutableArray *_changeListStack;
    BOOL _testDoNotCheckMacros;
    BOOL _ignoreChangesToSystemHeaders;
    DevkitEntireProject *_project;
    DevkitTransformationEngine *_owningEngine;
    NSMutableDictionary *_editorCache;
}

- (BOOL)commit;
- (void)addChanges:(id)arg1;
- (id)changeList;
- (void)setIgnoreChangesToSystemHeaders:(BOOL)arg1;
- (void)revertChangeListScope;
- (void)commitChangeListScope;
- (void)openChangeListScope;
- (void)removeWhitespaceBetweenLocations:(id)arg1 lhsLoc:(id)arg2;
- (id)locationOfIBOutletTagBeforeDeclaration:(id)arg1;
- (id)locationOfBlockCommentBeforeLocation:(id)arg1;
- (id)getStringAtFile:(id)arg1 line:(long long)arg2 macroTolerance:(int)arg3;
- (id)getStringAtLocation:(id)arg1 replacing:(id)arg2 macroTolerance:(int)arg3;
- (id)getStringAtLocation:(id)arg1 macroTolerance:(int)arg2;
- (BOOL)deleteAtLocation:(id)arg1 priority:(long long)arg2 macroTolerance:(int)arg3;
- (BOOL)deleteString:(id)arg1 atLocation:(id)arg2 priority:(long long)arg3 macroTolerance:(int)arg4;
- (BOOL)insertString:(id)arg1 before:(id)arg2 priority:(long long)arg3 macroTolerance:(int)arg4;
- (BOOL)insertString:(id)arg1 after:(id)arg2 priority:(long long)arg3 macroTolerance:(int)arg4;
- (BOOL)replaceString:(id)arg1 withString:(id)arg2 location:(id)arg3 priority:(long long)arg4 macroTolerance:(int)arg5;
- (BOOL)isMacroEditingProblemAtLocation:(id)arg1 tol:(int)arg2;
- (id)project;
- (void)dealloc;
- (void)setOwningEngine:(id)arg1;
- (id)initWithFileCache:(id)arg1 project:(id)arg2;

@end

@interface DevkitEngineError : NSObject
{
    NSString *_errorMessage;
    DevkitLocation *_errorLocation;
}

+ (id)engineErrorWithLocation:(id)arg1 format:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (long long)compareLocation:(id)arg1;
- (id)errorLocation;
- (id)errorMessage;
- (id)initWithErrorLocation:(id)arg1 format:(id)arg2 arguments:(struct __va_list_tag [1])arg3;

@end

@interface DevkitEngineException : NSException
{
}

+ (id)transformExceptionWithErrorString:(id)arg1;
- (id)initWithErrorString:(id)arg1;

@end

@interface DevkitTreeSearcher : NSObject
{
    struct DevkitTreeSearcherPatternElement *_pattern;
}

+ (BOOL)searchString:(id)arg1 matchesInTree:(id)arg2;
+ (id)findSearchString:(id)arg1 inTrees:(id)arg2;
+ (id)findSearchString:(id)arg1 inTree:(id)arg2;
+ (id)searcherWithSearchString:(id)arg1;
- (id)findFirstInTree:(id)arg1 withDiscriminator:(void *)arg2;
- (id)findFirstInTree:(id)arg1 withStop:(void *)arg2;
- (id)findFirstInTree:(id)arg1;
- (id)findAllInTree:(id)arg1 withStop:(void *)arg2;
- (id)findAllInTree:(id)arg1 withDiscriminator:(void *)arg2;
- (id)findAllInTree:(id)arg1;
- (id)findAllInTree:(id)arg1 withPattern:(struct DevkitTreeSearcherPatternElement *)arg2 withDiscriminator:(void *)arg3 withStop:(void *)arg4 stopOnMatch:(BOOL)arg5;
- (BOOL)matchInTree:(id)arg1;
- (BOOL)matchInTree:(id)arg1 withPattern:(struct DevkitTreeSearcherPatternElement *)arg2;
- (id)description;
- (id)subDescription:(struct DevkitTreeSearcherPatternElement *)arg1;
- (id)initWithSearchString:(id)arg1;
- (struct DevkitTreeSearcherPatternElement *)parseSearchString:(id)arg1;

@end

@interface DevkitType : NSObject
{
    DevkitBaseType *_baseType;
    DevkitDeclaration *_complexDeclaration;
    BOOL _ownsComplexDeclaration;
    DevkitDeclaration *_parentDeclaration;
    char _declaratorModifiers[8];
    unsigned char _numberOfModifiers;
    unsigned char _bitfieldWidth;
}

+ (id)typeWithPointerToDeclaration:(id)arg1;
+ (id)typeWithPointerToBasicType:(int)arg1;
+ (id)typeWithDeclaration:(id)arg1;
+ (id)typeWithBasicType:(int)arg1;
- (id)typeWithoutStorageClass;
- (id)reducedType;
- (BOOL)compareRoot:(id)arg1;
- (BOOL)compare:(id)arg1;
- (BOOL)compareExact:(id)arg1;
- (id)prettyPrintComplex:(BOOL)arg1;
- (id)prettyPrint;
- (id)description;
- (BOOL)isExternClass;
- (BOOL)isTypedefClass;
- (BOOL)isBlockByref;
- (void)addRegisterClass;
- (void)addExternClass;
- (void)addStaticClass;
- (void)addAutoClass;
- (void)addTypedefClass;
- (void)addBlockByrefQualifier;
- (void)addStrongQualifier;
- (void)addVolatileQualifier;
- (void)addRestrictQualifier;
- (void)addConstQualifier;
- (id)returnStringLeftSide:(id *)arg1 rightSide:(id *)arg2;
- (id)rawDescriptionPrettyPrint:(BOOL)arg1 complex:(BOOL)arg2;
- (id)rawDescriptionPrettyPrint:(BOOL)arg1;
- (id)castString;
- (id)castStringNoSpaces;
- (id)castStringWithSpaces:(BOOL)arg1;
- (void)incrementIndirectionsInside;
- (void)addBlockPtrInside;
- (void)addFunctionInside;
- (void)addArrayInside;
- (void)addFunction;
- (void)removeArray;
- (void)addArray;
- (void)dereferenceType;
- (void)addIndirectionsFromType:(id)arg1;
- (void)incrementIndirections;
- (BOOL)isPointerToPointerToThing;
- (BOOL)isPointerToThing;
- (BOOL)isThing;
- (BOOL)isBlockPointer;
- (BOOL)isComplexType;
- (BOOL)isFunctionType;
- (BOOL)isArrayType;
- (BOOL)isPointerType;
- (BOOL)isObjcObjectType;
- (BOOL)isScalarNumberType;
- (BOOL)isUnion;
- (BOOL)isStruct;
- (id)parentDeclaration;
- (void)setParentDeclaration:(id)arg1;
- (id)complexDeclaration;
- (void)setComplexDeclaration:(id)arg1 asOwner:(BOOL)arg2;
- (void)setComplexDeclaration:(id)arg1;
- (id)baseType;
- (void)setBaseType:(id)arg1;
- (BOOL)isBitfield;
- (void)setBitfieldWidth:(unsigned char)arg1;
- (id)initWithBuiltinType:(int)arg1;
- (id)copy;
- (id)initWithBaseType:(id)arg1;
- (id)init;

@end

@interface DevkitMoveInstanceVariableAndRelatedMethodsUpEngine : DevkitTransformationEngine
{
    DevkitMoveInstanceVariableUpEngine *_moveInstanceVarUpTransform;
}

- (BOOL)performFinal;
- (BOOL)performPerFile;
- (BOOL)performFirstFile;
- (BOOL)checkFinal;
- (void)cleanupTransformSpecificPerFile;
- (BOOL)checkPerFile;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (BOOL)hasSimpleErrors;
- (id)fatalErrorLog;
- (id)errorLog;
- (id)warningLog;

@end

@interface DevkitMoveInstanceVariableDownEngine : DevkitTransformationEngine
{
    NSArray *_subclassList;
    NSString *_commentString;
    BOOL _isIBOutlet;
}

- (BOOL)performFinal;
- (BOOL)performPerFile;
- (BOOL)checkPerFile;
- (BOOL)checkFinal;
- (BOOL)checkFirstFile;
- (BOOL)translateParameterToSubclassList;
- (BOOL)checkValidateInputs;
- (id)transformRelatedNames;
- (id)subclassList;
- (void)setSubclassList:(id)arg1;
- (void)dealloc;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;

@end

@interface DevkitMoveInstanceVariableUpEngine : DevkitTransformationEngine
{
    BOOL _insertedSuperclass;
    BOOL _isIBOutlet;
    NSString *_commentString;
}

- (BOOL)performPerFile;
- (BOOL)checkPerFile;
- (BOOL)checkFinal;
- (BOOL)checkFirstFile;
- (BOOL)checkValidateInputs;
- (id)initWithTransformInstance:(id)arg1 declaration:(id)arg2 paramDict:(id)arg3;
- (id)transformRelatedNames;

@end

@interface DevkitSelectionRefactoringValidation : NSObject <IDERefactoringSelectionValidation>
{
}

+ (BOOL)isRefactoring:(id)arg1 allowedForSelectedSymbols:(id)arg2 error:(id *)arg3;
+ (BOOL)isRefactoring:(id)arg1 allowedForSourceExpression:(id)arg2 error:(id *)arg3;

@end

@interface DevkitRefactoringTransformation : NSObject <IDERefactoringTransformation, DVTInvalidation>
{
    IDEWorkspaceDocument *_workspaceDocument;
    NSDictionary *_editedFilePathsAndContents;
    NSMutableDictionary *_filePathsAndFileContents;
    NSMutableDictionary *_filePathsToBuildSettings;
    DevkitASTNode *_selectedASTNode;
    NSArray *_preliminaryRelatedNames;
    NSDictionary *_confirmedRelatedNames;
    NSMutableArray *_confirmedAnalyzableFiles;
    IDEIndex *_index;
    IDEIndexSymbol *_selectedSymbol;
    DevkitTransformationEngine *_engine;
    DevkitTransformInstance *_transformInstance;
    DVTDispatchLock *_parserLock;
    NSMutableArray *_allChangeSets;
    NSMutableDictionary *_nonTextChangeSets;
    Class _dataModelChangeSetClass;
    Class _plistFileChangeSetClass;
    BOOL _valid;
    DVTStackBacktrace *_invalidationBacktrace;
    IDERefactoring *_refactoring;
    DevkitParser *_parser;
    NSDictionary *_mainThreadArguments;
    NSDictionary *_userInput;
}

@property IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid; // @synthesize valid=_valid;
@property IDERefactoring *refactoring; // @synthesize refactoring=_refactoring;
@property IDEIndexSymbol *selectedSymbol; // @synthesize selectedSymbol=_selectedSymbol;
@property IDEIndex *index; // @synthesize index=_index;
@property NSDictionary *userInput; // @synthesize userInput=_userInput;
- (id)snapshotDescription;
- (BOOL)modifyProblems:(id)arg1 parseThreadArguments:(id)arg2 error:(id *)arg3;
- (BOOL)modifyFileChangeSets:(id)arg1 parseThreadArguments:(id)arg2 error:(id *)arg3;
- (id)transformParamDict:(id)arg1;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (void)modifyFileList:(id)arg1;
- (BOOL)allowOnlyObjectiveCCompilationUnits:(id)arg1;
- (BOOL)parseUnsavedFiles:(id)arg1;
- (BOOL)userInputIsAvailable;
- (id)preliminaryRelatedNames;
- (BOOL)mainThreadArgumentsAreAvailable:(id *)arg1;
- (id)dataForFilePath:(id)arg1;
- (id)memorySourceForFile:(const char *)arg1;
- (id)relatedFileIndexSymbols:(id)arg1 forSelectedSymbol:(id)arg2;
@property(readonly) BOOL allowsMultipleSelectedSymbols;
@property(readonly) BOOL requiresSelectedSymbol;
- (BOOL)shouldAnalyzeDataModelFiles;
- (BOOL)shouldAnalyzeNibFiles;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (id)localizedSymbolKindPhrase;
- (id)capitalizedLocalizedName;
- (void)cancel;
- (BOOL)applyChangesWithError:(id *)arg1;
- (BOOL)calculateChangesWithProgressBlock:(id)arg1;
- (id)_issues;
- (id)_fileChangeSetsWithError:(id *)arg1;
- (BOOL)_analyzeFile:(id)arg1 buildSettings:(id)arg2 error:(id *)arg3;
- (BOOL)_analyzePlistFile:(id)arg1 error:(id *)arg2;
- (BOOL)_analyzeDataModelFile:(id)arg1 error:(id *)arg2;
- (BOOL)_analyzeNibFile:(id)arg1 error:(id *)arg2;
- (BOOL)_analyzeTranslationUnit:(id)arg1 buildSettings:(id)arg2 error:(id *)arg3;
- (BOOL)_createAndCheckEngineWithClass:(Class)arg1 declaration:(id)arg2 paramDict:(id)arg3 outError:(id *)arg4;
- (BOOL)_createParserBasedData:(id *)arg1;
- (id)dataFromInitialFile:(id *)arg1;
- (BOOL)processUserInput:(id)arg1 outInitialFiles:(id *)arg2 outError:(id *)arg3;
- (BOOL)processInitialInput:(id)arg1 editedFileContents:(id)arg2 outError:(id *)arg3;
- (id)_filesAndSettingsForSymbolNames:(id)arg1 rootNames:(id)arg2 error:(id *)arg3;
- (BOOL)_filePath:(id)arg1 containsAnyNames:(id)arg2;
- (id)relatedFileIndexSymbols:(id)arg1 forSelectedSymbols:(id)arg2;
- (BOOL)parseCompilationUnit:(id)arg1 buildSettings:(id)arg2 error:(id *)arg3;
- (BOOL)requiresObjCOrCCompilationUnits;
- (BOOL)isRefactoring:(id)arg1 allowedForSourceExpression:(id)arg2 error:(id *)arg3;
- (BOOL)requiresSymbol;
- (BOOL)requiresSelection;
- (id)renameNewName;
- (id)renameOldName;
- (BOOL)wordIsReserved:(id)arg1;
- (void)invalidate;
- (id)init;

@end

@interface DevkitConvertToFastEnumerationTransformation : DevkitRefactoringTransformation
{
}

- (id)capitalizedLocalizedName;

@end

@interface DevkitConvertToObjC2Transformation : DevkitRefactoringTransformation
{
}

- (id)capitalizedLocalizedName;
- (BOOL)requiresSelection;

@end

@interface DevkitEncapsulateTransformation : DevkitRefactoringTransformation
{
}

- (id)snapshotDescription;
- (id)transformParamDict:(id)arg1;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (id)preliminaryRelatedNames;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (id)localizedSymbolKindPhrase;
- (id)capitalizedLocalizedName;

@end

@interface DevkitExtractTransformation : DevkitRefactoringTransformation
{
}

- (id)snapshotDescription;
- (id)transformParamDict:(id)arg1;
- (id)dataFromInitialFile:(id *)arg1;
- (id)postInitialFileInfo:(id)arg1 newSelectionLineInfo:(struct _DevkitLineInfo *)arg2 error:(id *)arg3;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (id)preliminaryRelatedNames;
- (id)_extractToInfoFromUserInput:(id)arg1;
- (BOOL)requiresSelectedSymbol;
- (BOOL)isRefactoring:(id)arg1 allowedForSourceExpression:(id)arg2 error:(id *)arg3;
- (id)localizedSymbolKindPhrase;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (BOOL)requiresSymbol;
- (id)capitalizedLocalizedName;

@end

@interface DevkitMoveDownTransformation : DevkitRefactoringTransformation
{
    NSArray *_nibProblems;
}

- (id)snapshotDescription;
- (id)transformParamDict:(id)arg1;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (id)preliminaryRelatedNames;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (id)localizedSymbolKindPhrase;
- (id)capitalizedLocalizedName;

@end

@interface DevkitMoveUpTransformation : DevkitRefactoringTransformation
{
}

- (id)snapshotDescription;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (id)preliminaryRelatedNames;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (id)localizedSymbolKindPhrase;
- (id)capitalizedLocalizedName;

@end

@interface DevkitRenamePrefixTransformation : DevkitRefactoringTransformation
{
    NSArray *_filePathsToChange;
    NSArray *_changedFilenames;
}

- (id)capitalizedLocalizedName;

@end

@interface DevkitRenameTransformation : DevkitRefactoringTransformation
{
    IDEIndexSymbol *_renameFilesTargetSymbol;
    NSMutableDictionary *_filesToRename;
}

+ (id)renamableFilePathForSymbol:(id)arg1;
- (BOOL)shouldAnalyzeDataModelFiles;
- (BOOL)shouldAnalyzeNibFiles;
- (id)snapshotDescription;
- (BOOL)modifyFileChangeSets:(id)arg1 parseThreadArguments:(id)arg2 error:(id *)arg3;
- (id)transformParamDict:(id)arg1;
- (id)_newFileNameForFileName:(id)arg1 baseName:(id)arg2 newName:(id)arg3;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (void)modifyFileList:(id)arg1;
- (BOOL)_classInheritsFromNSDocument:(id)arg1;
- (BOOL)parseUnsavedFiles:(id)arg1;
- (id)preliminaryRelatedNames;
- (BOOL)mainThreadArgumentsAreAvailable:(id *)arg1;
- (id)relatedFileIndexSymbols:(id)arg1 forSelectedSymbol:(id)arg2;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (id)localizedSymbolKindPhrase;
- (id)capitalizedLocalizedName;
- (id)init;

@end

@interface DevkitCreateSuperclassTransformation : DevkitRefactoringTransformation
{
    DVTFilePath *_referencedHeaderFilePath;
    DVTFilePath *_referencedSourceFilePath;
    NSString *_referencedSuperclassName;
    NSString *_referencedSuperclassFilePath;
    NSString *_superclassName;
    NSString *_newHeaderFileName;
    NSString *_newSourceFileName;
    DevkitNewTextFileChangeSet *_newTextHeaderFileChangeSet;
    DevkitNewTextFileChangeSet *_newTextSourceFileChangeSet;
    IDERefactoringIssue *_importIssue;
}

- (id)snapshotDescription;
- (BOOL)modifyProblems:(id)arg1 parseThreadArguments:(id)arg2 error:(id *)arg3;
- (BOOL)modifyFileChangeSets:(id)arg1 parseThreadArguments:(id)arg2 error:(id *)arg3;
- (id)transformParamDict:(id)arg1;
- (BOOL)getEngineClass:(Class *)arg1 declaration:(id *)arg2 fromASTNode:(id)arg3 mainThreadArguments:(id)arg4 error:(id *)arg5;
- (BOOL)userInputIsAvailable;
- (id)preliminaryRelatedNames;
- (BOOL)mainThreadArgumentsAreAvailable:(id *)arg1;
- (BOOL)_instantiateTemplatesAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)isSymbolValidForTransformation:(id)arg1 error:(id *)arg2;
- (id)localizedSymbolKindPhrase;
- (id)capitalizedLocalizedName;

@end

@interface DevkitParser : DevkitEntireProject
{
    DevkitRefactoringTransformation *_transformation;
    NSMutableSet *_compilationUnitsParsed;
    IDERefactoringBuildSettings *_buildSettings;
    NSMutableDictionary *_editorCache;
}

- (id)getStringAtFile:(id)arg1 line:(unsigned long long)arg2;
- (id)getStringAtLocation:(id)arg1 replacing:(id)arg2;
- (id)getStringAtLocation:(id)arg1;
- (id)memorySourceForFile:(const char *)arg1;
- (BOOL)beginHeader:(id)arg1;
- (BOOL)parseCompilationUnitsAndSettings:(id)arg1;
- (BOOL)parseOneCompilationUnit:(id)arg1 buildSettings:(id)arg2;
- (void *)inputStreamForCompilationUnit:(id)arg1;
- (unsigned long long)fileLanguage;
- (BOOL)shouldRegisterStandardIncludes;
- (id)undefinedMacroNames;
- (id)predefinedMacroNamesAndDefs;
- (id)preincludeFiles;
- (id)frameworkSearchPaths;
- (id)systemIncludePaths;
- (void)fakeCriticalDefinesForLanguage;
- (void)cleanup;
- (void)setup;
- (id)initWithTransformation:(id)arg1 SDKSetting:(id)arg2;

@end

@interface DevkitExistingTextFileChangeSet : DevkitTextFileChangeSet
{
    NSData *_textData;
    BOOL _userVisibleChangesCalculated;
}

- (void)writeTempResults;
- (void)addChange:(id)arg1;
- (id)stringWithChangesUsingEncoding:(unsigned long long)arg1;
- (id)stringUsingEncoding:(unsigned long long)arg1;
- (void)setTextData:(id)arg1;
- (id)_stringMacOSRomanWithChanges;

@end

@interface DevkitNewTextFileChangeSet : DevkitTextFileChangeSet
{
    DVTFilePath *_sharedFilePath;
    NSString *_newFileName;
    NSString *_referencedFileName;
    NSArray *_fileReferences;
}

@property(copy) NSString *newFileName; // @synthesize newFileName=_newFileName;
- (void)writeTempResults;
- (id)resultReferencedFiles;
- (BOOL)_addFile:(id)arg1 referencedFile:(id)arg2 newFileReference:(id *)arg3 error:(id *)arg4;
- (BOOL)canCreateFile:(id *)arg1;
- (id)initWithReferencedFilePath:(id)arg1 newFileName:(id)arg2;

@end

@interface DevkitTextFileChange : IDERefactoringFileChange
{
    NSString *_replacementString;
}

- (id)description;
- (BOOL)isEqualToFileChange:(id)arg1;
- (BOOL)applyChange;
- (id)replacementString;
- (struct _DevkitLineInfo)lineInfo;
- (id)initWithTextFileChangeSet:(id)arg1 textFileLocation:(id)arg2 replacementString:(id)arg3;

@end

@interface DevkitTextFileChangeSet : IDERefactoringFileChangeSet
{
}

@end

@interface DevkitTextFileChangeLocation : IDERefactoringFileChangeLocation
{
    struct _DevkitLineInfo _lineInfo;
}

- (id)description;
- (struct _DevkitLineInfo)lineInfo;
- (long long)compareFileLocationNoPath:(id)arg1;
- (BOOL)isEqualToFileLocation:(id)arg1;
- (id)initWithFilePath:(id)arg1 lineInfo:(struct _DevkitLineInfo)arg2;

@end

@interface DevkitEditInfo : NSObject
{
    DevkitTextFileChange *_textFileChange;
    struct _NSRange _originalTextCharacterRange;
    NSString *_originalString;
    struct _DevkitLineInfo _newTextLineInfo;
}

@property(readonly) struct _DevkitLineInfo newTextLineInfo; // @synthesize newTextLineInfo=_newTextLineInfo;
@property(readonly) NSString *originalString; // @synthesize originalString=_originalString;
@property(readonly) struct _NSRange originalTextCharacterRange; // @synthesize originalTextCharacterRange=_originalTextCharacterRange;
@property(readonly) DevkitTextFileChange *textFileChange; // @synthesize textFileChange=_textFileChange;
- (void)shiftNewTextLineInfoByColumnDelta:(long long)arg1;
- (void)removeLineFromNewTextLineInfoRange;
- (void)shiftNewTextLineInfoByLineDelta:(long long)arg1;
- (id)description;
- (id)initWithTextFileChange:(id)arg1 originalTextCharacterRange:(struct _NSRange)arg2 originalString:(id)arg3 newTextLineInfo:(struct _DevkitLineInfo)arg4;

@end

@interface DevkitExtractInputValidator : IDERefactoringInputValidator
{
    DVTSourceCodeSymbolKind *_kind;
    DevkitType *_returnType;
    NSString *_originalName;
    NSArray *_originalParameters;
    NSString *_originalText;
    struct _NSRange _originalNameRange;
    NSString *_modifiedText;
    BOOL _originalTextHasAsterisks;
    BOOL _originalTextHasCarets;
    BOOL _originalTextHasCommas;
    BOOL _isModifiedSignatureValid;
    struct _NSRange _invalidSignatureErrorRange;
    NSString *_invalidSignatureLocalizedMessage;
    NSString *_modifiedName;
    NSArray *_modifiedParameters;
}

@property(copy) NSArray *modifiedParameters; // @synthesize modifiedParameters=_modifiedParameters;
@property(copy) NSArray *originalParameters; // @synthesize originalParameters=_originalParameters;
@property(copy) NSString *modifiedName; // @synthesize modifiedName=_modifiedName;
@property(readonly) struct _NSRange originalNameRange; // @synthesize originalNameRange=_originalNameRange;
- (id)shouldBeShownLocalizedMessageForChar:(unsigned short)arg1;
- (BOOL)isStringValid:(id)arg1 otherStrings:(id)arg2 localizedMessage:(id *)arg3 invalidRange:(struct _NSRange *)arg4;
- (id)localizedCapitalizedColonString;
- (id)localizedCapitalizedMethodKeywordString:(unsigned long long)arg1;
- (id)localizedCapitalizedMethodNameString;
- (id)localizedCapitalizedFunctionParametersString;
- (id)localizedCapitalizedFunctionNameString;
- (id)localizedCapitalizedParameterNameString:(unsigned long long)arg1;
- (id)localizedCapitalizedLeftSideOfTypeString;
- (id)localizedCapitalizedTypeString;
- (id)localizedCapitalizedLeftSideOfReturnTypeString;
- (id)localizedCapitalizedReturnTypeString;
- (id)missingLocalizedMessage:(id)arg1;
- (id)blankForLocalizedMessage:(id)arg1;
- (id)noCommaAfterLocalizedMessage:(id)arg1;
- (id)noSpaceAfterLocalizedMessage:(id)arg1;
- (id)noParensForLocalizedMessage:(id)arg1;
- (id)extraCharsMessage;
- (id)duplicateNameMessage:(id)arg1;
- (id)duplicateNameMessage:(id)arg1 param1Index:(unsigned long long)arg2 param2Index:(unsigned long long)arg3;
- (id)typeNonmatchingRemainingLocalizedMessage:(id)arg1;
- (id)rightSideOfParameterTypeMissingLocalizedMessage:(id)arg1;
- (id)leftSideOfParameterTypeMissingLocalizedMessage:(id)arg1;
- (id)parameterTypeMissingLocalizedMessage:(id)arg1;
- (id)rightSideOfReturnTypeMissingLocalizedMessage:(id)arg1;
- (id)leftSideOfReturnTypeMissingLocalizedMessage:(id)arg1;
- (id)returnTypeMissingLocalizedMessage:(id)arg1;
- (id)rightSideOfReturnTypeNonmatchingLocalizedMessage:(id)arg1;
- (id)leftSideOfReturnTypeNonmatchingLocalizedMessage:(id)arg1;
- (id)returnTypeNonmatchingLocalizedMessage:(id)arg1;
- (id)endedPrematurelyLocalizedMessage;
- (id)commaFunctionLocalizedMessage;
- (id)endingParenInFunctionLocalizedMessage;
- (id)startingParenInFunctionLocalizedMessage;
- (id)startingPlusInClassMethodLocalizedMessage;
- (id)startingMinusInInstanceMethodLocalizedMessage;
- (id)originalSignatureCharsLocalizedMessage;
- (void)setModifiedText:(id)arg1;
- (id)modifiedSignatureString;
- (id)initialSignatureString;
- (id)initWithReturnType:(id)arg1 name:(id)arg2 parameters:(id)arg3 kind:(id)arg4;
- (void)_generateOriginalText;
- (void)analyzeModifiedText;
- (void)_analyzeMethodFromIndex:(unsigned long long)arg1;
- (BOOL)_matchedMethodParameterInTypes:(id)arg1 new:(id)arg2 index:(unsigned long long *)arg3;
- (void)_analyzeFunctionFromIndex:(unsigned long long)arg1;
- (BOOL)_matchedFunctionClosedParenAtIndex:(unsigned long long *)arg1;
- (BOOL)_matchedFunctionParameterInTypes:(id)arg1 newExtractParameters:(id)arg2 index:(unsigned long long *)arg3;
- (BOOL)_matchedFunctionName:(id *)arg1 andOpenParenAtIndex:(unsigned long long *)arg2;
- (BOOL)_matchedTrailingWhitespaceAfterLocalizedType:(id)arg1 index:(unsigned long long *)arg2;
- (BOOL)_matchedRightSideOfReturnTypeForFunctionAtIndex:(unsigned long long *)arg1;
- (BOOL)_matchedLeftSideOfReturnTypeForFunctionAtIndex:(unsigned long long *)arg1;
- (void)_setOriginalParameterIndexesFor:(id)arg1 inMethod:(BOOL)arg2;
- (BOOL)_isTypeCastStringOfParameter:(id)arg1 equalToThatofExtractParameter:(id)arg2 inMethod:(BOOL)arg3;
- (BOOL)_checkForParameterNameDuplicates:(id)arg1;
- (void)_createParameterWithKeywordRange:(struct _NSRange)arg1 typeStringRange:(struct _NSRange)arg2 nameRange:(struct _NSRange)arg3 typeStringRange2:(struct _NSRange)arg4 newExtractParameters:(id)arg5;
- (BOOL)_matchedParameterName:(struct _NSRange *)arg1 newExtractParameters:(id)arg2 index:(unsigned long long *)arg3;
- (BOOL)_matchedParameterInTypes:(id)arg1 newTypeStringRange:(struct _NSRange *)arg2 foundType:(id *)arg3 index:(unsigned long long *)arg4;
- (BOOL)_matchedReturnTypeAtIndex:(unsigned long long *)arg1;
- (BOOL)_matchedReturnTypeAtIndex:(unsigned long long *)arg1 stringToCheck:(id)arg2 nonmatchingError:(SEL)arg3 missingError:(SEL)arg4;
- (BOOL)_matchedEndOfText:(unsigned long long *)arg1;
- (BOOL)_matchedName:(id *)arg1 localizedCapitalizedNameIfError:(id)arg2 index:(unsigned long long *)arg3;
- (BOOL)_matchedChar:(unsigned short)arg1 localizedMessageIfMissing:(id)arg2 index:(unsigned long long *)arg3;
- (BOOL)_notAtEndWithIndex:(unsigned long long)arg1;
- (int)_statusMatchingTypeString:(id)arg1 index:(unsigned long long *)arg2 errorRange:(struct _NSRange *)arg3 remainingString:(id *)arg4;
- (void)_setMessage:(id)arg1 oneCharRangeAt:(unsigned long long)arg2;
- (unsigned long long)_whitespaceFromIndex:(unsigned long long)arg1;

@end

@interface IDERefactoringExtractParameter : NSObject
{
    struct _NSRange _keywordRange;
    NSString *_keyword;
    struct _NSRange _typeStringRange;
    struct _NSRange _typeStringRange2;
    NSString *_typeCastString;
    struct _NSRange _nameRange;
    NSString *_name;
    struct _NSRange _signatureRange;
    unsigned long long _originalParameterIndex;
}

@property unsigned long long originalParameterIndex; // @synthesize originalParameterIndex=_originalParameterIndex;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) struct _NSRange nameRange; // @synthesize nameRange=_nameRange;
@property(readonly) struct _NSRange typeStringRange2; // @synthesize typeStringRange2=_typeStringRange2;
@property(readonly) struct _NSRange typeStringRange; // @synthesize typeStringRange=_typeStringRange;
@property(readonly) NSString *keyword; // @synthesize keyword=_keyword;
- (id)initWithModifiedText:(id)arg1 keywordRange:(struct _NSRange)arg2 typeStringRange:(struct _NSRange)arg3 nameRange:(struct _NSRange)arg4 typeStringRange2:(struct _NSRange)arg5;

@end

@interface XCRefactoringExtractType : NSObject
{
    NSString *_castString;
    NSString *_leftSideString;
    NSString *_rightSideString;
}

@property(readonly) NSString *castString; // @synthesize castString=_castString;
@property(readonly) NSString *rightSideString;
@property(readonly) NSString *leftSideString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)hasLeftAndRightSideStrings;
- (id)initWithCastString:(id)arg1 leftSideString:(id)arg2 rightSideString:(id)arg3;

@end

@interface NSObject (DevkitFoundationAdditions)
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
@end

