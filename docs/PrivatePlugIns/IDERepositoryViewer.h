/*
 *     Generated by class-dump 3.3.3 (64 bit) (Debug version compiled Aug 11 2011 13:55:57).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

#pragma mark -

/*
 * File: /Developer/Library/Xcode/PrivatePlugIns/IDERepositoryViewer.ideplugin/Contents/MacOS/IDERepositoryViewer
 * UUID: 1515B898-D7B0-38F1-B916-4C4B5FB5211F
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 537.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 */

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(id)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
@end

@protocol DVTStatefulObject <NSObject>
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)setStateToken:(id)arg1;

@optional
- (void)didPullStateFromRepository;
- (void)willPushStateToRepository;
@end

@protocol IDEComparisonEditorDataSource <NSObject>
- (id)documentForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;

@optional
- (id)contentStringForSecondaryEmptyEditorWithDocumentLocation:(id)arg1;
- (id)contentStringForPrimaryEmptyEditorWithDocumentLocation:(id)arg1;
- (BOOL)shouldShowEmptyEditorForSecondaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (BOOL)shouldShowEmptyEditorForPrimaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (id)documentForAncestorDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)navigableItemsForSecondaryDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 completionBlock:(id)arg3;
- (id)navigableItemsForPrimaryDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 completionBlock:(id)arg3;
- (BOOL)shouldSelectFirstDiff;
- (id)secondaryDocumentLocationForNavigableItem:(id)arg1;
- (id)primaryDocumentLocationForNavigableItem:(id)arg1;
@end

@protocol IDEOrganizerSource <NSObject, DVTStatefulObject>

@optional
- (void)organizerSourceWillAppearInWindowController:(id)arg1;
- (void)openFileURL:(id)arg1 withFileType:(id)arg2;
- (void)searchWithString:(id)arg1;
@end

@protocol IDEReviewFilesDataSource <NSObject>
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)issueNavigableItems;
- (id)flatNavigableItems;
- (id)fileSystemNavigableItems;
- (id)workspaceNavigableItems;

@optional
- (void)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forNavigableItem:(id)arg4;
- (id)reviewFilesNavigator:(id)arg1 importantFilePathsForNavigableItem:(id)arg2 excludingDisabledItems:(id)arg3;
@end

@protocol IDEReviewFilesViewControllerDelegate <NSObject>

@optional
- (void)reviewFilesViewController:(id)arg1 didInstallComparisonEditor:(id)arg2;
- (void)willOpenDocumentLocation:(id)arg1 completionBlock:(id)arg2;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (void)layoutManagerDidInvalidateLayout:(id)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol RVPeoplePickerDelegate <NSObject>

@optional
- (void)clearAuthor;
- (void)personSelected:(id)arg1;
@end

@protocol RVStructureViewDelegate <NSObject>

@optional
- (BOOL)rvStructureView:(id)arg1 dragFile:(id)arg2 intoStructureItem:(id)arg3;
- (BOOL)rvStructureView:(id)arg1 shouldAcceptDragOfFile:(id)arg2 intoStructureItem:(id)arg3;
- (void)rvStructureView:(id)arg1 dragItems:(id)arg2 toFileURL:(id)arg3;
- (BOOL)rvStructureView:(id)arg1 shouldAllowDragOfItems:(id)arg2;
- (BOOL)rvStructureView:(id)arg1 doCommandBySelector:(SEL)arg2;
@end

@interface RVRepositoryViewController : IDEViewController <IDEOrganizerSource, DVTReplacementViewDelegate>
{
    NSSplitView *_mainSplitView;
    NSView *_leftView;
    NSView *_rightView;
    IDENavigatorOutlineView *_repositoriesOutlineView;
    DVTBorderedView *_repositoriesControlGroupBorderedView;
    DVTReplacementView *_contentReplacementView;
    DVTBorderedView *_contentToolbarBorderedView;
    DVTGradientImagePopUpButton *_addButton;
    DVTGradientImageButton *_removeButton;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    NSMutableArray *_repositories;
    NSArray *_selectedObjects;
    IDENavigableItem *_selectedRootNavigable;
    IDESourceControlTree *_selectedTree;
}

+ (id)keyPathsForValuesAffectingHasSelection;
+ (id)keyPathsForValuesAffectingRepositories;
+ (void)initialize;
@property IDENavigableItem *selectedRootNavigable; // @synthesize selectedRootNavigable=_selectedRootNavigable;
@property IDESourceControlTree *selectedTree; // @synthesize selectedTree=_selectedTree;
@property(copy) NSArray *selectedObjects; // @synthesize selectedObjects=_selectedObjects;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)_isNavigableItem:(id)arg1 childOfNavigableItems:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)removePasswordAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)deleteAction:(id)arg1;
- (void)addWorkingCopy:(id)arg1;
- (void)addWorkingTreeAtLocation:(id)arg1 origin:(id)arg2 repositoryRoot:(id)arg3;
- (void)addRepositoryAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)addRepository:(id)arg1;
- (void)checkoutOrCloneRepositoryAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)checkoutOrCloneRepository:(id)arg1;
- (void)doubleClickAction:(id)arg1;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)setupViewBasedOnSelection;
- (BOOL)hasSelection;
- (id)workingCopyPrototypeCell;
- (id)repositoryLocationPrototypeCell;
- (id)localGitRepositoryPrototypeCell;
- (id)repositoryPrototypeCell;
@property(readonly) NSArray *repositories;
- (id)sourceControlManagerNavigableItem;
- (id)repositoryGroupType;
- (void)invalidate;
- (void)organizerSourceWillAppearInWindowController:(id)arg1;
- (void)viewWillUninstall;
- (void)revertState;
- (void)viewDidInstall;
- (void)loadView;
- (id)initUsingDefaultNib;
- (id)dvtExtraBindings;

@end

@interface RVStructureViewController : IDEViewController <DVTReplacementViewDelegate>
{
    NSSplitView *_mainSplitView;
    IDENavigatorOutlineView *_sourceTreeItemOutlineView;
    NSDateFormatter *_sourceTreeItemModificationDateFormatter;
    DVTReplacementView *_logReplacementView;
    struct dispatch_queue_s *_serial_queue;
    id _branchSwitchObserver;
    NSMutableArray *_itemsWithStatus;
    int _scopeByStatus;
    BOOL _showIgnoredFiles;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    IDENavigableItem *_rootNavigable;
    IDESourceControlTree *_sourceTree;
    id _selectedObject;
    NSArray *_selectedObjects;
    NSArray *_draggedNodes;
    DVTChoice *_selectedChoice;
    NSPredicate *_scopePredicate;
    NSMapTable *_observationTokenByOperation;
    id <DVTObservingToken> _statusToken;
    id <RVStructureViewDelegate> _delegate;
}

+ (id)keyPathsForValuesAffectingSelectedObject;
+ (id)defaultViewNibName;
+ (void)initialize;
@property id <RVStructureViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSMapTable *observationTokenByOperation; // @synthesize observationTokenByOperation=_observationTokenByOperation;
@property(copy) NSArray *draggedNodes; // @synthesize draggedNodes=_draggedNodes;
@property NSPredicate *scopePredicate; // @synthesize scopePredicate=_scopePredicate;
@property DVTChoice *selectedChoice; // @synthesize selectedChoice=_selectedChoice;
@property(readonly) NSArray *itemsWithStatus; // @synthesize itemsWithStatus=_itemsWithStatus;
@property NSArray *selectedObjects; // @synthesize selectedObjects=_selectedObjects;
@property IDENavigableItem *rootNavigable; // @synthesize rootNavigable=_rootNavigable;
@property IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedItems:(id)arg3;
- (void)outlineViewItemWillExpand:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2 hasUserFocus:(BOOL)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)_isTreeNode:(id)arg1 childOfTreeNodes:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)search:(id)arg1;
- (void)switchView:(id)arg1;
- (void)refresh:(id)arg1;
- (void)doubleClickAction:(id)arg1;
@property(readonly) id selectedObject; // @synthesize selectedObject=_selectedObject;
- (void)invalidateItemsWithStatus;
- (void)updateItemsWithStatus;
@property BOOL showsLogView;
- (id)logViewController;
- (id)prototypeWorkingItemCell;
- (id)prototypeRemoteCell;
- (id)prototypeBranchCell;
- (id)prototypeCell;
- (void)configurePrototypCell:(id)arg1;
- (void)invalidate;
- (void)viewDidInstall;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)dvtExtraBindings;

@end

@interface _IDERepositoryViewerPrivateClassForFindingBundle : NSObject
{
}

@end

@interface RVWorkingCopyConfigurationViewController : IDEViewController <RVStructureViewDelegate, DVTReplacementViewDelegate>
{
    DVTReplacementView *_structureReplacementView;
    DVTBorderedView *_toolbarBorderView;
    DVTBorderedView *_infoBorderView;
    NSPanel *_switchBranchSheet;
    NSPopUpButton *_branchesPopup;
    NSButton *_toggleLogButton;
    NSButton *_updateButton;
    NSButton *_commitButton;
    NSButton *_refreshButton;
    NSButton *_switchButton;
    NSTextField *_branchURLField;
    NSTextField *_branchStringField;
    IDENavigableItem *_rootNavigable;
    IDESourceControlWorkingTree *_sourceTree;
    IDESourceControlBranch *_currentBranch;
    NSArray *_branches;
    IDESourceControlRequest *_currentBranchRequest;
    id _logVisibleToken;
    id <DVTObservingToken> _repositoryBranchesObservationToken;
    id <DVTInvalidation> _operationToken;
}

+ (id)keyPathsForValuesAffectingCurrentBranch;
+ (id)keyPathsForValuesAffectingCanSwitchBranch;
+ (id)keyPathsForValuesAffectingHasBranches;
+ (id)keyPathsForValuesAffectingUpdateTitle;
+ (id)defaultViewNibName;
+ (id)keyPathsForValuesAffectingLocation;
+ (void)initialize;
@property id currentBranchToken; // @synthesize currentBranchToken=_currentBranchRequest;
@property IDESourceControlBranch *currentBranch; // @synthesize currentBranch=_currentBranch;
@property NSArray *branches; // @synthesize branches=_branches;
@property IDENavigableItem *rootNavigable; // @synthesize rootNavigable=_rootNavigable;
@property IDESourceControlWorkingTree *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void)_dragReplaceAlertDidComplete:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)rvStructureView:(id)arg1 dragItems:(id)arg2 toFileURL:(id)arg3;
- (BOOL)rvStructureView:(id)arg1 shouldAllowDragOfItems:(id)arg2;
- (void)_dragItem:(id)arg1 toURL:(id)arg2 askToReplace:(BOOL)arg3;
- (void)_export:(id)arg1 toURL:(id)arg2;
- (void)refresh:(id)arg1;
- (void)toggleHistory:(id)arg1;
- (void)switchBranch:(id)arg1;
- (void)switchAction:(id)arg1;
- (void)commit:(id)arg1;
- (void)push:(id)arg1;
- (void)merge:(id)arg1;
- (void)update:(id)arg1;
- (void)repositionWorkingCopyInfo;
- (id)branchString;
- (BOOL)canSwitchBranch;
@property(readonly) BOOL hasBranches;
- (id)updateTitle;
- (void)updateBranchesPopup;
- (void)switchBranchAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
@property(readonly) NSArray *extensions;
@property(readonly) RVStructureViewController *structureController;
- (void)updateBoundSourceTree;
- (void)updateBoundRootNavigable;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface RVTraditionalRepositoryConfigurationViewController : DVTViewController <DVTReplacementViewDelegate>
{
    DVTReplacementView *_centerReplacementView;
    DVTReplacementView *_bottomReplacementView;
    DVTStackView *_stackView;
    IDESourceControlRepository *_sourceTree;
    id <DVTObservingToken> _sourceTreeObserver;
    IDESourceControlRepositoryCreationContext *_context;
    NSImageView *_logoImageView;
    DVTBorderedView *_headerView;
}

+ (id)keyPathsForValuesAffectingRemoteOrigin;
+ (id)defaultViewNibName;
+ (void)initialize;
@property IDESourceControlRepositoryCreationContext *context; // @synthesize context=_context;
@property IDESourceControlRepository *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void)updateBoundSourceTree;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)loadView;
- (id)remoteOrigin;
- (id)dvtExtraBindings;

@end

@interface RVTextFieldViewController : NSViewController
{
    NSString *_stringValue;
    IDESourceControlNonEmptyTextField *_textField;
}

@property IDESourceControlNonEmptyTextField *textField; // @synthesize textField=_textField;
@property(copy) NSString *stringValue; // @synthesize stringValue=_stringValue;
- (void)choose:(id)arg1;

@end

@interface RVBranchesViewController : IDEViewController <DVTReplacementViewDelegate>
{
    DVTReplacementView *_structureReplacementView;
    DVTBorderedView *_toolbarBorderView;
    NSButton *_toggleLogButton;
    NSButton *_addBranchButton;
    NSButton *_removeBranchButton;
    NSButton *_checkoutButton;
    NSButton *_mergeButton;
    IDENavigableItem *_rootNavigable;
    IDESourceControlTree *_sourceTree;
    id <DVTObservingToken> _logVisibleToken;
    RVStructureViewController *_structureController;
}

+ (id)keyPathsForValuesAffectingBranchSupportsCheckout;
+ (id)keyPathsForValuesAffectingBranchIsSelected;
+ (id)keyPathsForValuesAffectingSelectedBranch;
+ (id)keyPathsForValuesAffectingSelectedTreeItem;
+ (id)keyPathsForValuesAffectingSelectedObject;
+ (id)defaultViewNibName;
+ (void)initialize;
@property RVStructureViewController *structureController; // @synthesize structureController=_structureController;
@property IDENavigableItem *rootNavigable; // @synthesize rootNavigable=_rootNavigable;
@property IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void)viewWillUninstall;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)removeBranchCommitMessageAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)removeBranchAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)removeBranch:(id)arg1;
- (void)forceRemoveBranchAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_removeBranch:(id)arg1 message:(id)arg2 force:(BOOL)arg3;
- (void)newBranchSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)newBranch:(id)arg1;
- (void)toggleHistory:(id)arg1;
- (void)checkout:(id)arg1;
@property(readonly) BOOL branchSupportsCheckout;
@property(readonly) BOOL branchIsSelected;
@property(readonly) IDESourceControlBranch *selectedBranch;
@property(readonly) IDESourceControlTreeItem *selectedTreeItem;
@property(readonly) id selectedObject;
- (void)updateBoundSourceTree;
- (void)updateBoundRootNavigable;
@property(readonly) IDESourceControlTreeGroup *rootGroup;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface RVCommitMessageViewController : NSViewController
{
    NSAttributedString *_message;
}

+ (id)keyPathsForValuesAffectingCommitMessageViewContainsMessage;
@property(copy) NSAttributedString *message; // @synthesize message=_message;
- (BOOL)commitMessageViewContainsMessage;

@end

@interface RVLogItemFileChangedView : NSView
{
    IDENavigatorSCMStatusCell *_statusCell;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 treeItem:(id)arg2 logItem:(id)arg3 sourceTree:(id)arg4;

@end

@interface RVLogItemViewController : IDESourceControlLogItemViewController <NSWindowDelegate, RVPeoplePickerDelegate>
{
    RVAuthorImageView *_authorImageView;
    DVTStackView *_messageAndFilesStackView;
    DVTStackView *_commitAndNameStackView;
    NSButton *_fileDiscloseButton;
    NSView *_viewChangesButtonView;
    RVPeoplePickerPopUpController *_peoplePickerWindowController;
    id _popupWindowCloseToken;
    id _logViewClipViewScrollNotificationToken;
    DVTStackView *_filesChangedStackView;
    BOOL _isChangedFilesExpanded;
    IDESourceControlRepository *_filesChangedRepository;
}

+ (id)messageTextAttributes;
+ (double)minHeight;
+ (id)keyPathsForValuesAffectingDisplayDate;
+ (id)keyPathsForValuesAffectingDisplayRevision;
+ (double)defaultMaxSize;
+ (id)defaultViewNibName;
@property(readonly) RVAuthorImageView *authorImageView; // @synthesize authorImageView=_authorImageView;
- (void)cleanup;
- (void)clearAuthor;
- (void)personSelected:(id)arg1;
- (void)viewChanges:(id)arg1;
- (void)discloseChangedFiles:(id)arg1;
- (void)selectAuthor:(id)arg1;
- (void)_cleanUpAfterClosingPopupWindow;
@property(readonly) NSString *displayDate;
@property(readonly) NSString *displayRevision;
- (id)authorNameKeyPath;
- (void)loadView;

@end

@interface RVLogViewController : IDESourceControlLogViewController
{
}

+ (id)defaultViewNibName;
- (void)loadView;
- (BOOL)displayFilesChanged;
- (id)rowBackgroundColor2;
- (id)rowBackgroundColor1;
- (id)headerBackgroundGradient;
- (id)headerFont;
- (double)headerHeight;
- (Class)logItemViewControllerClass;

@end

@interface RVNumberToColorTransformer : NSValueTransformer
{
    NSDictionary *_numberToColorTable;
    NSColor *_defaultColor;
}

+ (Class)transformedValueClass;
@property(readonly) NSColor *defaultColor; // @synthesize defaultColor=_defaultColor;
@property(readonly) NSDictionary *numberToColorTable; // @synthesize numberToColorTable=_numberToColorTable;
- (id)transformedValue:(id)arg1;
- (id)initWithNumberToColorTable:(id)arg1 defaultColor:(id)arg2;

@end

@interface RVRepositoryConfigurationViewController : IDEViewController <DVTReplacementViewDelegate>
{
    NSView *_stackView;
    DVTReplacementView *_logReplacementView;
    DVTReplacementView *_contentReplacementView;
    DVTBorderedView *_backgroundBorderedView;
    DVTBorderedView *_toolbarView;
    NSButton *_cloneButton;
    IDESourceControlRepository *_sourceTree;
    IDESourceControlTreeItem *_logItem;
    IDENavigableItemCoordinator *_coordinator;
}

+ (id)keyPathsForValuesAffectingLogItem;
+ (id)defaultViewNibName;
+ (void)initialize;
@property IDESourceControlTreeItem *logItem; // @synthesize logItem=_logItem;
@property(retain) IDESourceControlRepository *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)updateBoundSourceTree;
- (void)updateReplacementViewControllerClass;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)promptToOpenAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)clone:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface RVRepositoryLocation : NSObject
{
    NSString *_name;
    IDESourceControlRepository *_repository;
    IDESourceControlTreeGroup *_item;
    int _locationType;
    NSArray *_branches;
    NSArray *_remotes;
    id _branchLoadingToken;
    id _remoteLoadingToken;
}

+ (id)keyPathsForValuesAffectingNavigableItem_children;
@property(copy) NSArray *remotes; // @synthesize remotes=_remotes;
@property(copy) NSArray *branches; // @synthesize branches=_branches;
@property(readonly) int locationType; // @synthesize locationType=_locationType;
@property(readonly) IDESourceControlRepository *repository; // @synthesize repository=_repository;
@property(readonly) NSString *name; // @synthesize name=_name;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isLeaf;
- (id)navigableItem_children;
- (id)generateRemoteLocationsForRemotes:(id)arg1;
- (id)generateBranchLocationsForBranches:(id)arg1;
- (id)navigableItem_image;
- (id)navigableItem_name;
@property(readonly) IDESourceControlBranch *representedBranch;
@property(readonly) IDESourceControlTreeGroup *item; // @synthesize item=_item;
- (id)initWithSourceRepository:(id)arg1 name:(id)arg2 locationType:(int)arg3;

@end

@interface RVRepositoryLocationViewController : IDEViewController <RVStructureViewDelegate, DVTReplacementViewDelegate>
{
    DVTReplacementView *_structureReplacementView;
    DVTBorderedView *_toolbarBorderView;
    NSObjectController *_objectController;
    NSButton *_toggleLogButton;
    NSButton *_checkoutButton;
    NSButton *_newDirectoryButton;
    NSButton *_deleteButton;
    NSButton *_addBranchButton;
    NSButton *_refreshButton;
    NSButton *_mergeButton;
    NSButton *_importButton;
    IDESourceControlRepository *_sourceTree;
    IDENavigableItem *_rootNavigable;
    id _logVisibleToken;
}

+ (id)keyPathsForValuesAffectingImportSupported;
+ (id)keyPathsForValuesAffectingDeleteSupported;
+ (id)keyPathsForValuesAffectingActionsSupported;
+ (id)keyPathsForValuesAffectingAddBranchSupported;
+ (id)keyPathsForValuesAffectingCheckoutTitle;
+ (id)keyPathsForValuesAffectingCheckoutSupported;
+ (id)keyPathsForValuesAffectingStructureController;
+ (id)defaultViewNibName;
+ (void)initialize;
@property IDENavigableItem *rootNavigable; // @synthesize rootNavigable=_rootNavigable;
@property IDESourceControlRepository *sourceTree; // @synthesize sourceTree=_sourceTree;
- (BOOL)rvStructureView:(id)arg1 dragFile:(id)arg2 intoStructureItem:(id)arg3;
- (BOOL)rvStructureView:(id)arg1 shouldAcceptDragOfFile:(id)arg2 intoStructureItem:(id)arg3;
- (void)_dragReplaceAlertDidComplete:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_checkoutOrExportConfirmation:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_dragItem:(id)arg1 toURL:(id)arg2 askToReplace:(BOOL)arg3;
- (BOOL)rvStructureView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)rvStructureView:(id)arg1 dragItems:(id)arg2 toFileURL:(id)arg3;
- (BOOL)rvStructureView:(id)arg1 shouldAllowDragOfItems:(id)arg2;
- (void)refresh:(id)arg1;
- (void)toggleHistory:(id)arg1;
- (void)import:(id)arg1;
- (void)_import:(id)arg1 intoGroup:(id)arg2;
- (void)_importAlertDidComplete:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_import:(id)arg1 intoTreePath:(id)arg2 withCommitMessage:(id)arg3;
- (void)_export:(id)arg1 toURL:(id)arg2;
- (void)checkout:(id)arg1;
- (void)_checkout:(id)arg1 toURL:(id)arg2;
- (void)newDirectoryAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)newDirectory:(id)arg1;
- (void)deleteItemAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)deleteItem:(id)arg1;
@property(readonly) BOOL importSupported;
- (BOOL)deleteSupported;
@property(readonly) BOOL actionsSupported;
- (void)newBranchSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)addBranch:(id)arg1;
- (BOOL)addBranchSupported;
- (id)checkoutTitle;
@property(readonly) BOOL checkoutSupported;
- (void)updateBoundSourceTree;
- (void)updateBoundRootNavigable;
@property(readonly) IDESourceControlTreeGroup *rootGroup;
@property(readonly) RVStructureViewController *structureController;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface RVImportController : DVTViewController
{
    NSString *_sourcePath;
    NSString *_repositoryPath;
    NSString *_commitMessage;
    IDESourceControlNonEmptyTextField *_textField;
}

+ (id)defaultViewNibName;
@property IDESourceControlNonEmptyTextField *textField; // @synthesize textField=_textField;
@property(copy) NSString *commitMessage; // @synthesize commitMessage=_commitMessage;
@property(copy) NSString *repositoryPath; // @synthesize repositoryPath=_repositoryPath;
@property(copy) NSString *sourcePath; // @synthesize sourcePath=_sourcePath;
- (void)loadView;

@end

@interface RVAuthorImageView : NSImageView
{
    BOOL _mouseInside;
}

- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;
- (id)mouseTrackerForRect:(struct CGRect)arg1;

@end

@interface RVPeoplePickerPopUpContentController : DVTHUDPopUpContentViewController <DVTReplacementViewDelegate>
{
    DVTReplacementView *_replacementView;
    DVTBorderedView *_mainView;
    ABPerson *_selectedPerson;
    RVPeoplePickerContentViewController *_currentVC;
    BOOL _pickingPerson;
    NSImageView *_replacementImageView;
    BOOL _animationInProgress;
    NSView *_nextKeyView;
}

+ (id)defaultViewNibName;
@property(readonly) BOOL pickingPerson; // @synthesize pickingPerson=_pickingPerson;
@property RVPeoplePickerContentViewController *currentVC; // @synthesize currentVC=_currentVC;
@property ABPerson *selectedPerson; // @synthesize selectedPerson=_selectedPerson;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_cleanUpAnimationForView:(id)arg1;
- (void)_setUpAnimationImageViewWithDirection:(double)arg1 actionBlock:(id)arg2;
- (void)_addAnimationForKey:(id)arg1 toView:(id)arg2;
- (void)_setAnimationDuration;
- (void)chooseCard:(id)arg1;
- (void)cancelCardChoosing:(id)arg1;
- (void)commitEditingValues;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)viewDidInstall;
- (CDStruct_d2b197d1)contentInset;
- (void)_resetCancelButton;
- (id)cancelButtonLabel;
- (void)_resetDoneButton;
- (id)doneButtonLabel;

@end

@interface RVPeoplePickerPopUpController : DVTHUDPopUpController <NSWindowDelegate>
{
    NSButton *_cancelButton;
    id <RVPeoplePickerDelegate> _pickerDelegate;
    id _popUpLocalEventHandler;
    NSString *_scmUsername;
}

@property(copy) NSString *scmUsername; // @synthesize scmUsername=_scmUsername;
@property id <RVPeoplePickerDelegate> pickerDelegate; // @synthesize pickerDelegate=_pickerDelegate;
- (void)cancelOrChoose:(id)arg1;
- (void)closeForCancelling;
- (void)doneOrChoose:(id)arg1;
- (void)close:(id)arg1;
- (void)updateDelegate;
- (void)addSubviews;
- (void)_stopMonitoringForEventsToClosePopUp;
- (void)_startMonitoringForEventsToClosePopUp;
- (id)cancelButton;

@end

@interface RVPeoplePickerEditPersonViewController : RVPeoplePickerContentViewController
{
    NSImageView *_picture;
    NSTextField *_firstName;
    NSTextField *_lastName;
    NSTokenField *_email;
    NSTokenField *_AIM;
    NSTokenField *_jabber;
    NSTextField *_username;
    BOOL _tryToMergeABPerson;
    BOOL _updatingUI;
    BOOL _setFirstNamePending;
    BOOL _setLastNamePending;
}

+ (id)defaultViewNibName;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)tokenField:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setAccountIDs:(id)arg1;
- (void)_setLastName;
- (void)_setFirstName;
- (void)setLastName:(id)arg1;
- (void)setFirstName:(id)arg1;
- (void)setPicture:(id)arg1;
- (void)commitEditingValues;
- (void)_updateABPicture;
- (void)_setName;
- (void)_mergeWith:(id)arg1;
- (BOOL)_updatePerson:(id)arg1 withMultiValueProperty:(id)arg2 withValues:(id)arg3 withLabel:(id)arg4;
- (void)_createNewABEntryWithFirstName:(id)arg1 lastName:(id)arg2 emails:(id)arg3 AIM:(id)arg4 jabber:(id)arg5;
- (id)_existingCardsWithFirstName:(id)arg1 lastName:(id)arg2;
- (void)viewDidInstall;
- (void)_updatePersonFields;
- (id)arrayFromABMultiValue:(id)arg1;

@end

@interface RVPeoplePickerPickPersonViewController : RVPeoplePickerContentViewController
{
    ABPeoplePickerView *_abPickerView;
}

+ (id)defaultViewNibName;
- (id)firstKeyView;
- (void)commitEditingValues;
- (id)selectedPerson;
- (void)viewDidInstall;

@end

@interface RVPeoplePickerContentViewController : DVTViewController
{
    RVPeoplePickerPopUpContentController *_owningController;
}

@property RVPeoplePickerPopUpContentController *owningController; // @synthesize owningController=_owningController;
- (void)commitEditingValues;

@end

@interface RVAddRepositoryWindowController : NSWindowController <DVTReplacementViewDelegate, NSWindowDelegate>
{
    DVTBorderedView *_borderedView;
    DVTReplacementView *_replacementView;
    NSImageView *_backgroundImageView;
    IDESourceControlRepositoryCreationContext *_context;
    IDESourceControlRepositoryCreationStep *_currentStep;
    NSMutableArray *_stepHistory;
    NSView *_nextKeyView;
    NSImageView *_replacementImageView;
    BOOL _animationInProgress;
    BOOL _backendSetupFinishedWhileAnimationInProgress;
}

+ (id)keyPathsForValuesAffectingForwardOrFinishButtonTitle;
+ (id)keyPathsForValuesAffectingCanGoForwardOrFinish;
+ (id)keyPathsForValuesAffectingCanGoBack;
+ (id)keyPathsForValuesAffectingHidePreviousButton;
@property IDESourceControlRepositoryCreationStep *currentStep; // @synthesize currentStep=_currentStep;
@property IDESourceControlRepositoryCreationContext *context; // @synthesize context=_context;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)_cleanUpAnimationForView:(id)arg1;
- (void)_setUpAnimationImageViewWithDirection:(double)arg1 actionBlock:(id)arg2;
- (void)_addAnimationForKey:(id)arg1 toView:(id)arg2;
- (void)_setAnimationDuration;
- (id)forwardOrFinishButtonTitle;
- (BOOL)canGoForwardOrFinish;
- (BOOL)canGoBack;
- (BOOL)hidePreviousButton;
- (id)_popStepHistoryStack;
- (void)_pushStepOntoHistoryStack:(id)arg1;
- (void)goBack:(id)arg1;
- (void)goNextOrFinish:(id)arg1;
- (void)cancel:(id)arg1;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)windowDidLoad;
- (id)initWithRepositoryCreationContext:(id)arg1;

@end

@interface RVAddBranchWindowController : NSWindowController <NSWindowDelegate>
{
    DVTBorderedView *_borderedView;
    NSImageView *_backgroundImageView;
    NSArrayController *_availableStartingPoints;
    NSTextField *_title;
    NSTextField *_description;
    DVTStackView *_stackView;
    NSView *_nameAndStartingPointView;
    NSView *_messageView;
    DVTTextViewWithPlaceholder *_messageTextView;
    NSPopUpButton *_startingPointPopUp;
    DVTBorderedView *_progressView;
    NSProgressIndicator *_progessSpinner;
    NSTextField *_progressTextField;
    NSButton *_okButton;
    IDESourceControlBranch *_startingPoint;
    IDESourceControlBranch *_selectedStartingPoint;
    NSMutableArray *_availableBranches;
    NSString *_branchName;
    NSAttributedString *_message;
    IDESourceControlRepository *_repository;
    BOOL _automaticallySwitchToBranch;
    id _creationBlock;
}

+ (id)keyPathsForValuesAffectingCanAdd;
@property(copy) id creationBlock; // @synthesize creationBlock=_creationBlock;
@property BOOL automaticallySwitchToBranch; // @synthesize automaticallySwitchToBranch=_automaticallySwitchToBranch;
@property(copy) NSAttributedString *message; // @synthesize message=_message;
@property(readonly) IDESourceControlRepository *repository; // @synthesize repository=_repository;
@property(copy) NSString *branchName; // @synthesize branchName=_branchName;
@property IDESourceControlBranch *selectedStartingPoint; // @synthesize selectedStartingPoint=_selectedStartingPoint;
- (id)finishedActionTitle;
- (BOOL)canAdd;
- (void)add:(id)arg1;
- (void)_endSpinner;
- (void)_startSpinner;
- (void)cancel:(id)arg1;
- (void)selectStartingPoint:(id)arg1;
- (void)windowDidLoad;
- (id)initWithStartingPoint:(id)arg1 repository:(id)arg2;

@end

@interface RVCommitViewerViewController : IDEViewController <NSSplitViewDelegate, IDEReviewFilesViewControllerDelegate, NSLayoutManagerDelegate>
{
    DVTBorderedView *_reviewFilesBorderedView;
    DVTBorderedView *_borderedView;
    NSWindow *_previewSheet;
    NSSplitView *_splitView;
    NSTextView *_commitTextView;
    IDEReviewFilesViewController *_reviewFilesViewController;
    IDESourceControlTreeItem *_initialSelection;
    RVCommitViewerNavigatorDataSource *_navigatorDataSource;
    IDENavigableItemCoordinator *_coordinator;
    RVCommitViewerNavigatorDataSource *_fileSystemDataSource;
    RVCommitViewerComparisonEditorDataSource *_comparisonEditorDataSource;
    IDESourceControlRepository *_repository;
    IDESourceControlLogItem *_logItem;
    struct CGRect _commitMessageRect;
    double _commitMessageSplitMaxHeight;
    BOOL _initialSplitPositionHasHappened;
    id <DVTObservingToken> _comparisonEditorObservingToken;
}

+ (id)defaultViewNibName;
+ (void)runPreviewSheetForWindow:(id)arg1 viewingCommit:(id)arg2 onRepository:(id)arg3 withInitialSelection:(id)arg4;
@property IDESourceControlTreeItem *initialSelection; // @synthesize initialSelection=_initialSelection;
@property IDESourceControlLogItem *logItem; // @synthesize logItem=_logItem;
@property IDESourceControlRepository *repository; // @synthesize repository=_repository;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)invalidate;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)ok:(id)arg1;
- (void)willOpenDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (void)lastRevisionOnRepository:(id)arg1 forAbsolutePath:(id)arg2 StartingWithRevision:(id)arg3 withCompletionBlock:(id)arg4;
- (id)_temporaryFileLocationForRepository:(id)arg1 remoteAbsolutePath:(id)arg2 revisionNumber:(id)arg3 completionBlock:(id)arg4;
- (void)_configureDataSources;
- (void)setInitialSelection:(id)arg1 forNavigatorOutlineView:(id)arg2;
- (id)treeItemFilterPredicate;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (double)_positionOfSplitterWithCommitMessageRect:(struct CGRect)arg1;
- (void)_runSheetForWindow:(id)arg1;

@end

@interface RVCommitViewerNavigatorDataSource : NSObject <IDEReviewFilesDataSource>
{
    IDENavigatorDataCell *_cachedSourceTreeItemCell;
    IDENavigatorDataCell *_cachedRepositoryContainerCell;
    NSArray *_navigableItems;
    IDESourceControlRepository *_repository;
}

@property IDESourceControlRepository *repository; // @synthesize repository=_repository;
@property NSArray *navigableItems; // @synthesize navigableItems=_navigableItems;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)repositoryContainerCell;
- (id)sourceTreeItemCell;
- (id)sourceControlCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)issueNavigableItems;
- (id)flatNavigableItems;
- (id)fileSystemNavigableItems;
- (id)workspaceNavigableItems;

@end

@interface RVCommitViewerComparisonEditorDataSource : NSObject <IDEComparisonEditorDataSource>
{
}

- (id)documentForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (void)_cachedDocumentForDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)secondaryDocumentLocationForNavigableItem:(id)arg1;
- (id)primaryDocumentLocationForNavigableItem:(id)arg1;
- (id)navigableItemsForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)navigableItemsForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;

@end

@interface RVRepositoryEmptyView : NSView
{
    DVTLozengeTextField *_lozengeTextField;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)setEmptyString:(id)arg1;

@end

@interface RVRepositoryEmptySelectionViewController : IDEViewController
{
    RVRepositoryEmptyView *_emptyView;
}

- (void)setEmptyString:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface RVRemotesViewController : IDEViewController <DVTReplacementViewDelegate>
{
    DVTReplacementView *_structureReplacementView;
    DVTBorderedView *_toolbarBorderView;
    NSButton *_addRemoteButton;
    NSButton *_removeRemoteButton;
    NSButton *_trackBranchButton;
    NSView *_remoteEditView;
    NSView *_stackView;
    NSImageView *_remoteLogoView;
    DVTBorderedView *_remoteInfoNameLocationBorderedView;
    DVTBorderedView *_loginBorderedView;
    IDENavigableItem *_rootNavigable;
    IDESourceControlTree *_sourceTree;
    RVStructureViewController *_structureController;
    id <DVTObservingToken> _remoteSelectedToken;
}

+ (id)keyPathsForValuesAffectingRemoteBranchIsSelected;
+ (id)keyPathsForValuesAffectingSelectedRemoteBranch;
+ (id)keyPathsForValuesAffectingCanRemoveRemote;
+ (id)keyPathsForValuesAffectingRemoteIsSelected;
+ (id)keyPathsForValuesAffectingSelectedRemote;
+ (id)keyPathsForValuesAffectingSelectedObject;
+ (id)defaultViewNibName;
+ (void)initialize;
@property RVStructureViewController *structureController; // @synthesize structureController=_structureController;
@property IDENavigableItem *rootNavigable; // @synthesize rootNavigable=_rootNavigable;
@property IDESourceControlTree *sourceTree; // @synthesize sourceTree=_sourceTree;
- (void)viewWillUninstall;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)trackBranchSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)trackBranch:(id)arg1;
- (void)removeRemote:(id)arg1;
- (void)newRemoteSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)addRemote:(id)arg1;
@property(readonly) BOOL remoteBranchIsSelected;
- (id)selectedRemoteBranch;
- (BOOL)canRemoveRemote;
@property(readonly) BOOL remoteIsSelected;
@property(readonly) IDESourceControlRemote *selectedRemote;
@property(readonly) id selectedObject;
- (void)updateBoundSourceTree;
- (void)updateBoundRootNavigable;
@property(readonly) IDESourceControlTreeGroup *rootGroup;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface RVAddRemoteWindowController : NSWindowController <NSWindowDelegate>
{
    DVTBorderedView *_borderedView;
    NSImageView *_backgroundImageView;
    NSTextField *_title;
    NSTextField *_description;
    NSString *_remoteName;
    NSString *_location;
    IDESourceControlRepository *_repository;
}

+ (id)keyPathsForValuesAffectingCanAdd;
@property(copy) NSString *location; // @synthesize location=_location;
@property(copy) NSString *remoteName; // @synthesize remoteName=_remoteName;
- (BOOL)canAdd;
- (void)add:(id)arg1;
- (void)cancel:(id)arg1;
- (void)windowDidLoad;
- (id)initWithRepository:(id)arg1;

@end

@interface IDESourceControlRepository (IDESourceControlRepositoryNavigablePropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_rvStructure;
@property(readonly) NSArray *navigableItem_rvStructure;
@end

@interface NSString (RVPrivate)
- (id)rv_trimmedString;
- (id)rv_stringByRemovingWhitespace;
@end

