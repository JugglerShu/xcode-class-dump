/*
 *     Generated by class-dump 3.3.3 (64 bit) (Debug version compiled Aug 11 2011 13:55:57).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _XDBezelWidgetViewFlags {
    unsigned int setAcceptsMouseMoved:1;
    unsigned int wasAcceptingMouseMoved:1;
    unsigned int RESERVED:30;
};

struct _XDCompartmentFlags {
    unsigned int drawsBackground:1;
    unsigned int editable:1;
    unsigned int RESERVED:30;
};

struct _XDCompartmentGraphicAuxiliaryStorageFlags {
    unsigned int selectionPostingDisableCount:7;
    unsigned int RESERVED:25;
};

struct _XDCompartmentGraphicFlags {
    unsigned int alwaysDrawsCompartmentLabel:1;
    unsigned int rollsUpCompartments:1;
    unsigned int dataSourceRespondsToSetObjectValueForItemInCompartmentAtIndex:1;
    unsigned int delegateRespondsToWillDisplayCompartmentInDiagramView:1;
    unsigned int delegateRespondsToShouldExpandCompartment:1;
    unsigned int delegateRespondsToShouldCollapseCompartment:1;
    unsigned int delegateRespondsToShouldDisplayActionButtonForCompartmentItem:1;
    unsigned int delegateRespondsToWillDisplayItemInCompartmentAtIndexInDiagramView:1;
    unsigned int delegateRespondsToShouldEditItemInCompartmentAtIndex:1;
    unsigned int delegateRespondsToSelectionDidChange:1;
    unsigned int RESERVED:20;
};

struct _XDCompartmentItemCellFlags {
    unsigned int imagePosition:3;
    unsigned int RESERVED:29;
};

struct _XDConnectionFlags {
    unsigned int graphicRespondsToConnectionDidMove:1;
    unsigned int RESERVED:31;
};

struct _XDDiagramStorageFlags {
    unsigned int delegateRespondsToDidAddGraphicsLayer:1;
    unsigned int delegateRespondsToWillRemoveGraphicsLayer:1;
    unsigned int delegateRespondsToDidAddGraphic:1;
    unsigned int delegateRespondsToWillRemoveGraphic:1;
    unsigned int disablingInvalidateGraphicCount:7;
    unsigned int RESERVED:21;
};

struct _XDDiagramToolFlags {
    unsigned int acceptsMouseMovedEvents:1;
    unsigned int RESERVED:31;
};

struct _XDDiagramViewFlags {
    unsigned int autoresizesCanvas:1;
    unsigned int isSelectable:1;
    unsigned int isEditable:1;
    unsigned int allowsDragAndDrop:1;
    unsigned int infiniteCanvas:1;
    unsigned int drawsCanvasBackground:1;
    unsigned int drawsCanvasShadow:1;
    unsigned int drawsBackground:1;
    unsigned int showsGrid:1;
    unsigned int showsMajorGrid:1;
    unsigned int showsMinorGrid:1;
    unsigned int snapsToGrid:1;
    unsigned int showsPageBreaks:1;
    unsigned int allowsUndo:1;
    unsigned int allowsTypeToSelect:1;
    unsigned int showsHiddenGraphics:1;
    unsigned int showsSelectedGraphicsInFront:1;
    unsigned int knobsHidden:1;
    unsigned int setAcceptsMouseMoved:1;
    unsigned int wasAcceptingMouseMoved:1;
    unsigned int delegateRespondsToUndoManagerForDiagramView:1;
    unsigned int delegateRespondsToTextDidBeginEditing:1;
    unsigned int delegateRespondsToTextDidEndEditing:1;
    unsigned int delegateRespondsToTextDidChange:1;
    unsigned int delegateRespondsToSelectionShouldChangeInDiagramView:1;
    unsigned int delegateRespondsToShouldSelectGraphic:1;
    unsigned int delegateRespondsToSelectionDidChange:1;
    unsigned int delegateRespondsToShouldRemoveGraphics:1;
    unsigned int delegateRespondsToWillRemoveGraphics:1;
    unsigned int delegateRespondsToToolTipForGraphicPoint:1;
    unsigned int delegateRespondsToTextShouldBeginEditing:1;
    unsigned int delegateRespondsToTextShouldEndEditing:1;
    unsigned int delegateRespondsToTextViewDoCommandBySelector:1;
    unsigned int delegateRespondsToWritablePasteboardTypesForGraphics:1;
    unsigned int delegateRespondsToWriteGraphicsToPasteboardType:1;
    unsigned int delegateRespondsToTypeToSelectWithString:1;
    unsigned int delegateRespondsToPrintInfoForDiagramView:1;
    unsigned int selectionPostingDisableCount:4;
    unsigned int RESERVED:23;
};

struct _XDFillStyleFlags {
    unsigned int drawsFill:1;
    unsigned int fillType:2;
    unsigned int RESERVED:29;
};

struct _XDGraphicFlags {
    unsigned int drawsContents:1;
    unsigned int hidden:1;
    unsigned int flippedHorizontally:1;
    unsigned int flippedVertically:1;
    unsigned int locked:1;
    unsigned int movable:1;
    unsigned int editable:1;
    unsigned int resizable:1;
    unsigned int removable:1;
    unsigned int layoutable:1;
    unsigned int acceptsConnections:1;
    unsigned int highlighted:1;
    unsigned int acceptsMouseMovedEvents:1;
    unsigned int autoresizesContentsToFit:1;
    unsigned int widthTracksContents:1;
    unsigned int heightTracksContents:1;
    unsigned int contentsHorizontalAlignment:3;
    unsigned int contentsVerticalAlignment:2;
    unsigned int disabledDrawingCacheCount:4;
    unsigned int manipulatingBoundsCount:5;
    unsigned int RESERVED:2;
};

struct _XDGraphicTextContainerFlags {
    unsigned int delegateRespondsToLineFragemntRect:1;
    unsigned int RESERVED:31;
};

struct _XDLineEndFlags {
    unsigned int filled:1;
    unsigned int RESERVED:31;
};

struct _XDLineGraphicFlags {
    unsigned int lineType:1;
    unsigned int RESERVED:31;
};

struct _XDLineGraphicToolFlags {
    unsigned int delegateRespondsToShouldStartLineWithTailGraphicInDiagramView:1;
    unsigned int delegateRespondsToWillStartLineWithTailGraphicInDiagramView:1;
    unsigned int delegateRespondsToShouldSetLineHeadGraphicInDiagramView:1;
    unsigned int delegateRespondsToWillSetLineHeadGraphicInDiagramView:1;
    unsigned int delegateRespondsToModifierFlagsChangedInDiagramView:1;
    unsigned int delegateRespondsToShouldAddLineInDiagramView:1;
    unsigned int delegateRespondsToWillAddLineInDiagramView:1;
    unsigned int RESERVED:25;
};

struct _XDOutlineViewFlags {
    unsigned int optionClickCausesEditing:1;
    unsigned int optionClickEditsAnyCell:1;
    unsigned int tableColumnProviderRespondsToWillAddTableColumn:1;
    unsigned int tableColumnProviderRespondsToDidRemoveTableColumn:1;
    unsigned int tableColumnProviderRespondsToWillSynchronizeTableHeaderContextMenu:1;
    unsigned int tableColumnProviderRespondsToDidSynchronizeTableHeaderContextMenu:1;
    unsigned int RESERVED:26;
};

struct _XDScrollViewFlags {
    unsigned int hasVerticalScrollerViews:1;
    unsigned int hasHorizontalScrollerViews:1;
    unsigned int vScrollerViewsPosition:2;
    unsigned int hScrollerViewsPosition:2;
    unsigned int hasVerticalScrollerAccessoryView:1;
    unsigned int hasHorizontalScrollerAccessoryView:1;
    unsigned int vScrollerAccessoryViewPosition:2;
    unsigned int hScrollerAccessoryViewPosition:2;
    unsigned int RESERVED:20;
};

struct _XDShadowStyleFlags {
    unsigned int drawsShadow:1;
    unsigned int RESERVED:31;
};

struct _XDStrokeStyleFlags {
    unsigned int drawsStroke:1;
    unsigned int shouldAntialias:1;
    unsigned int lineCapStyle:2;
    unsigned int lineJoinStyle:2;
    unsigned int RESERVED:26;
};

struct _XDTableViewFlags {
    unsigned int optionClickCausesEditing:1;
    unsigned int optionClickEditsAnyCell:1;
    unsigned int tableColumnProviderRespondsToWillAddTableColumn:1;
    unsigned int tableColumnProviderRespondsToDidRemoveTableColumn:1;
    unsigned int tableColumnProviderRespondsToWillSynchronizeTableHeaderContextMenu:1;
    unsigned int tableColumnProviderRespondsToDidSynchronizeTableHeaderContextMenu:1;
    unsigned int RESERVED:26;
};

#pragma mark -

/*
 * File: /Developer/Library/Xcode/PrivatePlugIns/IDEModelEditor.ideplugin/Contents/MacOS/IDEModelEditor
 * UUID: A3EBFCC0-8878-33AE-A97C-0BA4DA8A3E88
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 562.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 *       Run path: @loader_path/../../../
 *               = /Developer/Library/Xcode/PrivatePlugIns
 */

@protocol DVTDiffTextFilter <NSObject>
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

@optional
+ (id)pathToTextFileFromInputFilePath:(id)arg1 error:(id *)arg2;
+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
@end

@protocol DVTOutlineViewDelegate <NSOutlineViewDelegate>

@optional
- (BOOL)outlineView:(id)arg1 shouldMouseHoverForTableColumn:(id)arg2 row:(long long)arg3;
- (void)outlineView:(id)arg1 concludeDragOperation:(id)arg2;
- (unsigned long long)outlineView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (void)outlineView:(id)arg1 draggingDidEnd:(id)arg2;
- (void)outlineView:(id)arg1 draggingDidUpdate:(id)arg2;
- (void)outlineView:(id)arg1 draggingDidEnter:(id)arg2;
- (BOOL)outlineView:(id)arg1 insertText:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTStatefulObject <NSObject>
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)setStateToken:(id)arg1;

@optional
- (void)didPullStateFromRepository;
- (void)willPushStateToRepository;
@end

@protocol DVTTextFindable <NSObject>
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
@end

@protocol DVTTextReplacable <NSObject>
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;

@optional
- (BOOL)replaceTextWithContentsOfURL:(id)arg1 error:(id *)arg2;
@end

@protocol IDEBlueprintProvider <NSObject>
- (id)testableProdiver;
- (id)blueprintForName:(id)arg1;
- (id)blueprintForIdentifier:(id)arg1;
- (id)organizationName;
- (id)name;
- (id)blueprints;
@end

@protocol IDECapsuleListViewDataSource <NSObject>
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;

@optional
- (void)capsuleListViewDidCompleteLayout:(id)arg1;
- (void)capsuleListView:(id)arg1 didExpandRow:(long long)arg2;
- (void)capsuleListView:(id)arg1 didCollapseRow:(long long)arg2;
- (BOOL)capsuleListView:(id)arg1 writeRowWithIndex:(unsigned long long)arg2 toPasteboard:(id)arg3;
- (unsigned long long)capsuleListView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3;
- (BOOL)capsuleListView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3;
@end

@protocol IDECapsuleViewController <NSObject>
@property(readonly) NSString *titleForDisplay;

@optional
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) BOOL canUndisclose;
@property BOOL canRemoveItems;
@property BOOL canAddItems;
@property(readonly) BOOL canRename;
@property(readonly) BOOL canRemove;
@property(readonly) NSImage *icon;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)remove:(id)arg1;
@end

@protocol IDECapsuleViewDelegate <NSObject>

@optional
- (void)capsuleViewDidClickRemoveButton:(id)arg1;
- (BOOL)capsuleViewCanBeRemoved:(id)arg1;
- (void)capsuleView:(id)arg1 setTitle:(id)arg2;
- (id)capsuleViewTitleForEditing:(id)arg1;
- (BOOL)capsuleViewCanBeRenamed:(id)arg1;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(id)arg1;
- (BOOL)capsuleView:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)capsuleView:(id)arg1 validateDrop:(id)arg2;
- (id)supportedDragTypes;
@end

@protocol IDEDMArrayControllerDelegate <NSObject>
- (void)arrayControllerDidRearrangeObjects:(id)arg1;
- (void)arrayControllerWillRearrangeObjects:(id)arg1;
@end

@protocol IDEDMModelObject <NSObject>
@property(readonly) NSArray *structuralChildren;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSString *name;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;
@property(readonly) NSImage *representativeIcon;
- (id)valueForKey:(id)arg1;

@optional
+ (id)orderedLocationKeys;
@end

@protocol IDEDMModelRootObject <IDEDMModelObject>
- (void)removeTopLevelObject:(id)arg1;
@end

@protocol IDEDMSourceObject <IDEDMModelObject>

@optional
- (id)model;
@end

@protocol IDEDataModelEditorController <NSObject>
- (void)takeFocus;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)editNameForModelObject:(id)arg1;
- (void)selectModelObjects:(id)arg1;

@optional
@property(readonly) IDEDataModelEditor *rootEditor;
@property(readonly) NSView *view;
@property(readonly) NSArray *selection;
- (void)invalidate;
- (void)setViewType:(int)arg1;
- (BOOL)allowsViewType:(int)arg1;
@end

@protocol IDEDataModelObject <IDEDMModelObject>
@property(readonly) NSArray *hierarchyTreeControllerChildren;
@end

@protocol IDEDataModelSourceObject <IDEDMSourceObject, IDEDataModelObject>
@end

@protocol IDEDocumentStructureProviding <NSObject>
@property(readonly) NSArray *ideTopLevelStructureObjects;
@end

@protocol IDEFilePickerViewDelegate <NSObject>

@optional
- (id)filePickerView:(id)arg1 outlineView:(id)arg2 toolTipForCell:(id)arg3 rect:(struct CGRect *)arg4 tableColumn:(id)arg5 item:(id)arg6 mouseLocation:(struct CGPoint)arg7;
- (BOOL)filePickerView:(id)arg1 outlineView:(id)arg2 isItemExpandable:(id)arg3;
- (void)filePickerView:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forTableColumn:(id)arg4 item:(id)arg5;
@end

@protocol IDEInspectorAccessibilitySupport <NSObject>
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;
@end

@protocol IDEMappingModelObject <IDEDMModelObject>
@end

@protocol IDEMappingModelSourceObject <IDEDMSourceObject, IDEMappingModelObject>
@property(readonly) XDDevMappingModel *mappingModel;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(id)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFileManagerDelegate <NSObject>

@optional
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtURL:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldRemoveItemAtURL:(id)arg2;
- (BOOL)fileManager:(id)arg1 shouldRemoveItemAtPath:(id)arg2;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 linkingItemAtURL:(id)arg3 toURL:(id)arg4;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 linkingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)fileManager:(id)arg1 shouldLinkItemAtURL:(id)arg2 toURL:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldLinkItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 movingItemAtURL:(id)arg3 toURL:(id)arg4;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 movingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)fileManager:(id)arg1 shouldMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldMoveItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtURL:(id)arg3 toURL:(id)arg4;
- (BOOL)fileManager:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)fileManager:(id)arg1 shouldCopyItemAtURL:(id)arg2 toURL:(id)arg3;
- (BOOL)fileManager:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3;
@end

@protocol NSKeyedUnarchiverDelegate <NSObject>

@optional
- (void)unarchiverDidFinish:(id)arg1;
- (void)unarchiverWillFinish:(id)arg1;
- (void)unarchiver:(id)arg1 willReplaceObject:(id)arg2 withObject:(id)arg3;
- (id)unarchiver:(id)arg1 didDecodeObject:(id)arg2;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(id)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
@end

@protocol NSPathControlDelegate <NSObject>

@optional
- (void)pathControl:(id)arg1 willPopUpMenu:(id)arg2;
- (void)pathControl:(id)arg1 willDisplayOpenPanel:(id)arg2;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (id)undoManagerForTextView:(id)arg1;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (id)textView:(id)arg1 URLForContentsOfTextAttachment:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol XDComponentIdentifying <NSObject>
+ (id)defaultIdentifier;
- (id)identifier;
@end

@protocol XDGraphEdge
- (id)tailGraphNode;
- (id)headGraphNode;
@end

@protocol XDGraphNode
- (id)connections;
- (struct CGPoint)centerOfBounds;
- (void)setCenterOfBounds:(struct CGPoint)arg1;
- (struct CGRect)drawingBounds;
- (struct CGRect)bounds;
- (void)setBounds:(struct CGRect)arg1;
@end

@protocol XDPMModelDelegate
- (id)undoManager;
@end

@protocol XDTableViewScrollDelegate <NSObject>
- (void)tableView:(id)arg1 didScrollWheel:(id)arg2;
@end

@interface IDEDMHighlightImageAndTextCell : DVTImageAndTextCell
{
    struct _NSRange _titleHighlightRange;
    BOOL _isSelected;
}

@property BOOL isSelected; // @synthesize isSelected=_isSelected;
@property struct _NSRange titleHighlightRange; // @synthesize titleHighlightRange=_titleHighlightRange;
- (id)attributedStringValue;
- (id)_highlightUnderlineColor;
- (id)_highlightBackgroundColor;
- (id)_highlightGradient;
- (BOOL)hasSourceListControlView;

@end

@interface IDEDataModelBrowserEditor : IDEDMEditorController <IDECapsuleListViewDataSource, IDEDataModelEditorController>
{
    IDEDataModelEntityContentsEditor *parentEditor;
    NSArrayController *entityArrayController;
    IDEDataModelPropertiesTableController *_activePropertiesController;
    IDEDataModelPropertiesTableController *attributesTableViewController;
    IDEDataModelPropertiesTableController *relationshipsTableViewController;
    IDEDataModelPropertiesTableController *fetchedPropertiesTableViewController;
    IDECapsuleListView *capsuleView;
    NSArray *_currentSelectedEntities;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingFindHighlightsByModelObject;
+ (id)keyPathsForValuesAffectingSelection;
+ (id)keyPathsForValuesAffectingSelectedEntityIndexes;
+ (id)keyPathsForValuesAffectingSelectedProperties;
+ (id)keyPathsForValuesAffectingSelectedEntities;
@property IDEDataModelPropertiesTableController *activePropertiesController; // @synthesize activePropertiesController=_activePropertiesController;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)tableController:(id)arg1 didScrollWithEvent:(id)arg2;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)takeFocus;
- (void)firstResponderChanged:(id)arg1;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (id)_findNextNonEmptyControllerAfterIndex:(unsigned long long)arg1 descending:(BOOL)arg2;
- (void)_focusPropertiesTableController:(id)arg1 top:(BOOL)arg2;
- (void)editNameForModelObject:(id)arg1;
- (void)selectModelObjects:(id)arg1;
@property(readonly) NSArray *selection;
- (void)selectProperties:(id)arg1;
@property(retain) NSIndexSet *selectedEntityIndexes;
@property(readonly) NSArray *selectedProperties;
@property(readonly) NSArray *selectedEntities;
- (void)selectedPropertiesChanged;
- (void)loadView;
@property(readonly) IDEDataModelEditor *rootEditor;
- (id)_propertiesControllerForModelObject:(id)arg1;
- (id)allSubViewControllers;
- (id)identifier;
- (id)nibBundle;
- (id)nibName;

// Remaining properties
@property(readonly) NSView *view;

@end

@interface IDEDataModelConfigurationEditor : IDEDMEditorController <IDEDataModelEditorController, IDECapsuleListViewDataSource>
{
    IDEDataModelEditor *parentEditor;
    IDEDataModelConfigurationTableController *tableController;
    IDECapsuleListView *capsuleListView;
}

+ (id)keyPathsForValuesAffectingSelectedConfigurations;
+ (id)keyPathsForValuesAffectingSelection;
- (id)allSubViewControllers;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (id)capsuleViewControllers;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
@property(readonly) CDMModel *model;
- (void)editNameForModelObject:(id)arg1;
@property(readonly) NSArray *selectedConfigurations;
- (void)selectModelObjects:(id)arg1;
@property(readonly) NSArray *selection;
- (id)nibBundle;
- (BOOL)allowsViewType:(int)arg1;
- (id)nibName;
- (id)identifier;
- (void)loadView;
- (void)takeFocus;
@property(readonly) IDEDataModelEditor *rootEditor;

// Remaining properties
@property(readonly) NSView *view;

@end

@interface IDEDataModelConfigurationTableController : IDEDMEditorController <NSTableViewDelegate, IDECapsuleViewController, IDECapsuleViewDelegate>
{
    IDEDataModelConfigurationEditor *parentEditor;
    NSArrayController *entitiesArrayController;
    NSArrayController *configurationsArrayController;
    XDTableView *tableView;
    NSMapTable *_tableColumnsByIdentifier;
    NSIndexSet *_selectedInnerEntityIndexes;
    id _findObservationToken;
}

+ (id)keyPathsForValuesAffectingSelectedConfigurationIndexes;
+ (id)keyPathsForValuesAffectingSelection;
+ (id)keyPathsForValuesAffectingSelectedConfigurations;
+ (id)keyPathsForValuesAffectingSelectedInnerEntities;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingCanRemoveItems;
@property(retain) NSIndexSet *selectedInnerEntityIndexes; // @synthesize selectedInnerEntityIndexes=_selectedInnerEntityIndexes;
- (void)numberOfEntitiesShownChanged;
- (void)_resize;
- (void)selectModelObjects:(id)arg1;
@property(retain) NSIndexSet *selectedConfigurationIndexes;
@property(readonly) NSArray *selectedConfigurations;
@property(readonly) NSArray *selectedInnerEntities;
@property(readonly) NSArray *selection;
- (void)tableView:(id)arg1 didRemoveTableColumn:(id)arg2;
- (void)_enterMappedColumn:(id)arg1 tableView:(id)arg2;
- (id)defaultTableColumnIdentifiersForTableView:(id)arg1;
- (id)allowedTableColumnIdentifiersForTableView:(id)arg1;
- (id)tableView:(id)arg1 columnForTableColumnIdentifier:(id)arg2;
- (id)tableView:(id)arg1 menuTitleForTableColumnIdentifier:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)addItems:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)setTableViewState:(id)arg1;
- (id)tableViewState;
- (void)loadView;
- (void)takeFocus;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(id)arg1;
@property(readonly) NSString *titleForDisplay;
@property(readonly) BOOL canRename;
- (BOOL)canDelete;
@property BOOL canAddItems;
@property BOOL canRemoveItems;
- (id)nibBundle;
- (void)delete:(id)arg1;
- (id)identifier;
- (id)nibName;

// Remaining properties
@property(readonly) BOOL canRemove;
@property(readonly) BOOL canUndisclose;
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) NSImage *icon;

@end

@interface IDEDataModelDiagramEditor : IDEDMEditorController <IDEDataModelEditorController>
{
    IDEDataModelEntityContentsEditor *parentEditor;
    XDDiagramView *diagramView;
    XDLineGraphic *_diagramToolNewLineGraphic;
    id <DVTObservingToken> _entitiesChangedToken;
    NSString *_lastGraphLayouterIdentifier;
    BOOL _hasDoneInitialLayout;
}

+ (id)keyPathsForValuesAffectingSelection;
+ (id)keyPathsForValuesAffectingDiagramStorage;
+ (id)defaultEntityColor;
@property BOOL _hasDoneInitialLayout; // @synthesize _hasDoneInitialLayout;
@property(copy) NSString *lastGraphLayouterIdentifier; // @synthesize lastGraphLayouterIdentifier=_lastGraphLayouterIdentifier;
- (id)PDFRepresentationForGraphics:(id)arg1;
- (id)TIFFRepresentationForGraphics:(id)arg1;
- (id)diagramRepresentationForGraphics:(id)arg1;
- (id)imageRepresentationForGraphics:(id)arg1;
- (struct CGRect)drawingBoundsForGraphics:(id)arg1 drawingMask:(long long)arg2;
- (void)_diagramViewSelectionDidChange:(id)arg1;
- (void)_setLastGraphLayouterIdentifier:(id)arg1;
- (void)_undoManagerDidChange:(id)arg1;
- (id)firstDiagramView;
- (id)diagramViews;
- (void)_entitiesChanged:(id)arg1;
- (void)removeGraphicsForEntities:(id)arg1;
- (void)addGraphicsForEntities:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)editNameForModelObject:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)compartmentGraphicSelectionDidChange:(id)arg1;
- (void)diagramViewSelectionDidChange:(id)arg1;
- (void)_diagramSelectionDidChange;
- (void)updateSelection;
- (void)selectModelObjects:(id)arg1;
@property(readonly) NSArray *selection;
- (void)loadView;
- (void)dealloc;
- (void)invalidate;
- (void)awakeFromNib;
- (void)takeFocus;
- (id)diagramView;
- (void)diagramStorageDidChange;
- (void)setupDiagramView;
- (void)setDiagramStorage:(id)arg1;
- (id)diagramStorage;
- (id)document;
@property(readonly) IDEDataModelEditor *rootEditor;
- (id)identifier;
- (id)nibBundle;
- (id)nibName;
- (BOOL)validateAndSetNewName:(id)arg1 forProperty:(id)arg2;
- (BOOL)validateAndSetNewName:(id)arg1 forEntity:(id)arg2;
- (void)compartmentGraphic:(id)arg1 setObjectValue:(id)arg2 forItemInCompartment:(id)arg3 atIndex:(long long)arg4;
- (id)compartmentGraphic:(id)arg1 objectValueForItemInCompartment:(id)arg2 atIndex:(long long)arg3;
- (id)compartmentGraphic:(id)arg1 representedObjectForItemInCompartment:(id)arg2 atIndex:(long long)arg3;
- (long long)compartmentGraphic:(id)arg1 numberOfItemsInCompartment:(id)arg2;
- (BOOL)compartmentGraphic:(id)arg1 shouldEditItemInCompartment:(id)arg2 atIndex:(long long)arg3;
- (void)compartmentGraphic:(id)arg1 willDisplayItem:(id)arg2 inCompartment:(id)arg3 atIndex:(long long)arg4 inDiagramView:(id)arg5;
- (void)compartmentGraphic:(id)arg1 willDisplayCompartment:(id)arg2 inDiagramView:(id)arg3;
- (struct CGPoint)compartmentGraphic:(id)arg1 magnetLocationForConnection:(id)arg2;
- (void)lineGraphicTool:(id)arg1 willAddLineInDiagramView:(id)arg2;
- (BOOL)lineGraphicTool:(id)arg1 shouldAddLineInDiagramView:(id)arg2;
- (void)lineGraphicTool:(id)arg1 modifierFlagsChangedTo:(unsigned long long)arg2 inDiagramView:(id)arg3;
- (BOOL)lineGraphicTool:(id)arg1 shouldStartLineWithTailGraphic:(id)arg2;
- (void)_entityParentChanged:(id)arg1;
- (void)_relationshipCardinalityChanged:(id)arg1;
- (void)_relationshipDestinationChanged:(id)arg1;
- (void)_propertyStateChanged:(id)arg1;
- (void)_entityStateChanged:(id)arg1;
- (void)_updateRelationshipLineEnds:(id)arg1;
- (void)loadStateFromDictionary:(id)arg1;
- (id)stateDictionary;
- (void)createAndLayoutGraphicsForElements:(id)arg1;
- (void)createLinesForMetaElement:(id)arg1;
- (void)createGraphicsAndLinesForNewElements:(id)arg1;
- (id)createInheritanceGraphicForMetaEntity:(id)arg1;
- (id)createRelationshipGraphicForMetaRelationship:(id)arg1;
- (id)createGraphicForElement:(id)arg1;
- (void)removeGraphicForRealElement:(id)arg1;
- (void)updateGraphicForRealElement:(id)arg1;
- (void)_updateFetchedPropertiesCompartmentForEntityGraphic:(id)arg1;
- (id)graphicsWithRealObjectValues:(id)arg1;
- (id)graphicWithRealObjectValue:(id)arg1;
- (void)forceLayoutByFlowOnDiagram:(id)arg1;
- (void)layoutByFlowOnDiagram:(id)arg1;

// Remaining properties
@property(readonly) NSView *view;

@end

@interface IDEDataModelDocument : IDEEditorDocument <NSKeyedUnarchiverDelegate, IDEDocumentStructureProviding, XDPMModelDelegate, DVTTextFindable, DVTTextReplacable>
{
    CDMModel *_model;
    XDDiagramStorage *_diagramStorage;
    DVTVersion *_iOSDeploymentVersion;
    DVTVersion *_macOSDeploymentVersion;
    DVTToolsVersion *_documentToolsVersion;
    BOOL _supportsMacOSDeployment;
    BOOL _supportsIOSDeployment;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)wrapperByCopyingContentsAtPath:(id)arg1 error:(id *)arg2;
+ (BOOL)_shouldShowUtilititesAreaAtLoadForSimpleFilesFocusedWorkspace;
+ (BOOL)isNativeType:(id)arg1;
+ (id)writableTypes;
+ (id)readableTypes;
+ (id)currentDocumentVersion;
+ (id)currentToolsVersion;
+ (id)currentSystemVersion;
@property BOOL supportsMacOSDeployment; // @synthesize supportsMacOSDeployment=_supportsMacOSDeployment;
@property BOOL supportsIOSDeployment; // @synthesize supportsIOSDeployment=_supportsIOSDeployment;
@property(copy) DVTVersion *macOSDeploymentVersion; // @synthesize macOSDeploymentVersion=_macOSDeploymentVersion;
@property(copy) DVTVersion *iOSDeploymentVersion; // @synthesize iOSDeploymentVersion=_iOSDeploymentVersion;
@property DVTToolsVersion *documentToolsVersion; // @synthesize documentToolsVersion=_documentToolsVersion;
@property(retain) CDMModel *model; // @synthesize model=_model;
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)updateChangeCount:(unsigned long long)arg1;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)loadModelFromURL:(id)arg1 error:(id *)arg2;
- (BOOL)canSave;
@property(retain) XDDiagramStorage *diagramStorage;
- (void)setSupportsDeployment:(BOOL)arg1 forPlatformFamily:(id)arg2;
- (void)setOSDeploymentVersion:(id)arg1 forPlatformFamily:(id)arg2;
- (id)osDeploymentVersionForPlatformFamily:(id)arg1;
@property(readonly) NSSet *supportedPlatformFamilies;
- (id)objectSpecifier;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)sdefSupport_entities;
- (void)setDisplayName:(id)arg1;

// Remaining properties
@property unsigned long long supportedMatchingOptions;

@end

@interface IDEDataModelDocumentLocation : IDEDMDocumentLocation
{
}

@end

@interface IDEDataModelTextConversionProvider : NSObject <DVTDiffTextFilter>
{
}

+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

@end

@interface IDEDataModelNavigableItem : IDEDMNavigableItem
{
}

- (Class)documentLocationClass;
- (id)documentType;

@end

@interface IDEDataModelEditor : IDEDMEditor <NSTabViewDelegate, NSSplitViewDelegate, DVTFindBarFindable>
{
    NSMapTable *_findHighlightsByModelObject;
    int _selectedHierarchyViewTypeIndex;
    int _selectedViewTypeIndex;
    unsigned long long _selectedTabViewIndex;
    IDEDMDocumentLocation *_selectedSearchLocation;
    BOOL _isSelectingDocumentLocation;
    BOOL _isInLoadView;
    BOOL _isInPullState;
    NSTabView *tabView;
    IDEDataModelEntityContentsEditor *entityContentsViewController;
    IDEDataModelFetchRequestEditor *fetchRequestViewController;
    IDEDataModelConfigurationEditor *configurationViewController;
    NSSegmentedControl *hierarchySegmentControl;
    NSSegmentedControl *browserDiagramSegmentControl;
    DVTDelayedMenuButton *addEntityButton;
    DVTDelayedMenuButton *addPropertyButton;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingEnableAddPropertyButton;
+ (id)keyPathsForValuesAffectingEnableAddEntityButton;
+ (id)keyPathsForValuesAffectingModel;
+ (id)keyPathsForValuesAffectingViewSegmentControlTitle;
+ (id)keyPathsForValuesAffectingHierarchySegmentControlTitle;
+ (id)keyPathsForValuesAffectingEnableViewTypeSwitcher;
+ (id)keyPathsForValuesAffectingSelectedTopLevelObjects;
+ (id)keyPathsForValuesAffectingModelRoot;
@property int selectedHierarchyViewTypeIndex; // @synthesize selectedHierarchyViewTypeIndex=_selectedHierarchyViewTypeIndex;
@property int selectedViewTypeIndex; // @synthesize selectedViewTypeIndex=_selectedViewTypeIndex;
@property unsigned long long selectedTabViewIndex; // @synthesize selectedTabViewIndex=_selectedTabViewIndex;
@property(retain) IDEDMDocumentLocation *selectedSearchLocation; // @synthesize selectedSearchLocation=_selectedSearchLocation;
@property(retain) NSMapTable *findHighlightsByModelObject; // @synthesize findHighlightsByModelObject=_findHighlightsByModelObject;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
@property NSDictionary *addButtonIndexes;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
@property(readonly) BOOL enableAddPropertyButton;
@property(readonly) BOOL enableAddEntityButton;
- (BOOL)validateMenuItem:(id)arg1;
- (void)createNSManagedObjectSubclass:(id)arg1;
- (void)addModelVersion:(id)arg1;
- (void)showAssistantForAssistantIdentifier:(id)arg1 inWorkspaceTabController:(id)arg2;
- (void)showTemplateChooserForTemplateKind:(id)arg1 inWorkspaceTabController:(id)arg2;
- (void)beginSessionWithAssistantIdentifier:(id)arg1 andContext:(id)arg2;
- (void)setDestinationGroupAndIndexForContext:(id)arg1 andAssistantIdentifier:(id)arg2;
- (void)importMOMFile:(id)arg1;
- (BOOL)importMOMFileAtPath:(id)arg1;
- (void)_showFlatSourceListMode;
- (void)addConfiguration:(id)arg1;
- (void)addFetchRequest:(id)arg1;
- (void)addFetchedProperty:(id)arg1;
- (void)addAttribute:(id)arg1;
- (void)addRelationship:(id)arg1;
- (void)addEntity:(id)arg1;
- (void)removeTopLevelItems:(id)arg1;
- (id)highlightForModelObject:(id)arg1;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (id)_highlightMapForFindResults:(id)arg1;
- (void)_noteFindHighlightsChanged;
- (BOOL)findBarSupported;
- (id)printInfoForDiagramView:(id)arg1;
- (void)printDocument:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (id)pasteFetchRequestsFromPasteBoard;
- (BOOL)copyFetchRequestsToPasteboard:(id)arg1;
- (id)pasteConfigurationsFromPasteBoard;
- (BOOL)copyConfigurationsToPasteBoard:(id)arg1;
- (id)pastePropertiesFromPasteBoardIntoEntities:(id)arg1;
- (BOOL)copyPropertiesToPasteBoard:(id)arg1;
- (id)pasteEntitiesFromPasteBoardIntoModels:(id)arg1;
- (BOOL)copyEntitiesToPasteBoard:(id)arg1;
- (void)navigateToAnnotationWithRepresentedObject:(id)arg1 wantsIndicatorAnimation:(BOOL)arg2 exploreAnnotationRepresentedObject:(id)arg3;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly) CDMModel *model;
- (void)selectModelObjects:(id)arg1 focus:(BOOL)arg2;
- (void)selectModelObjects:(id)arg1;
@property(readonly) NSString *viewSegmentControlTitle;
@property(readonly) NSString *hierarchySegmentControlTitle;
@property(readonly) BOOL enableViewTypeSwitcher;
- (void)selectedViewTypeIndexChanged;
- (id)selectedTopLevelObjectsWithClass:(Class)arg1;
- (void)selectTopLevelObjects:(id)arg1;
- (id)selectedEntities;
@property(readonly) NSArray *selectedTopLevelObjects;
- (void)selectedTopLevelObjectsChanged;
- (void)_setViewControllerFromSelection;
- (void)_showTabViewController:(id)arg1;
- (id)diagramViewController;
- (id)currentActiveTabController;
- (id)_viewControllerForModelObject:(id)arg1;
- (id)allSubViewControllers;
- (id)allTabViewControllers;
- (void)loadView;
- (id)identifier;
- (Class)documentLocationClass;
- (void)_setupButtons;
- (void)_setupSegmentedControls;
- (id)modelRoot;

@end

@interface IDEDataModelEditorHighlight : NSObject
{
    id _modelObject;
    struct _NSRange _highlightRange;
    NSString *_highlightProperty;
    BOOL _isActive;
    unsigned long long _numberOfInternalHits;
}

@property unsigned long long numberOfInternalHits; // @synthesize numberOfInternalHits=_numberOfInternalHits;
@property BOOL isActive; // @synthesize isActive=_isActive;
@property(readonly) NSString *highlightProperty; // @synthesize highlightProperty=_highlightProperty;
@property(readonly) struct _NSRange highlightRange; // @synthesize highlightRange=_highlightRange;
@property(readonly) id modelObject; // @synthesize modelObject=_modelObject;
- (id)initWithModelObject:(id)arg1 range:(struct _NSRange)arg2 property:(id)arg3;

@end

@interface IDEDataModelEditorSourceListController : IDEDMEditorSourceListController <IDEDataModelEditorController>
{
    IDENavigatorStatusCell *_sourceListStatusBadgeCell;
    id _findObservationToken;
    id <DVTObservingToken> _entityObservationToken;
    id <DVTObservingToken> _fetchRequestObservationToken;
    id <DVTObservingToken> _configurationObservationToken;
}

+ (id)keyPathsForValuesAffectingShownSourceListSectionIdentifiers;
+ (id)keyPathsForValuesAffectingTreeControllerChildrenKeyPath;
+ (id)keyPathsForValuesAffectingSelectedHierarchyMode;
+ (id)keyPathsForValuesAffectingAllSourceListSections;
+ (id)keyPathsForValuesAffectingModel;
- (double)outlineView:(id)arg1 indentationAdjustmentForRow:(unsigned long long)arg2;
- (BOOL)deleteTopLevelObjects:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (id)shownSourceListSectionIdentifiers;
- (id)treeControllerChildrenKeyPath;
- (void)selectModelObjects:(id)arg1;
@property(readonly) int selectedHierarchyMode;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (void)loadView;
- (void)setupSourceListAndCells;
- (id)identifier;
- (void)setupSourceListSections;
- (id)createSourceListSections;
- (void)updateTopLevelItems;
- (id)model;
- (id)parentEditor;
- (id)nibName;

// Remaining properties
@property(readonly) IDEDataModelEditor *rootEditor;
@property(readonly) NSArray *selection;
@property(readonly) NSView *view;

@end

@interface IDEDataModelIndentationAdjustingOutlineView : DVTOutlineView
{
}

- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;

@end

@interface IDEDataModelEntityContentsEditor : IDEDMEditorController <IDEDataModelEditorController>
{
    IDEDataModelEditor *parentEditor;
    NSTabView *tabView;
    IDEDataModelBrowserEditor *browserViewController;
    IDEDataModelDiagramEditor *diagramViewController;
}

+ (id)keyPathsForValuesAffectingSelection;
+ (id)keyPathsForValuesAffectingModel;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)_makeAllEditorsPerformSelector:(SEL)arg1;
- (void)selectModelObjects:(id)arg1;
@property(readonly) NSArray *selection;
- (void)setViewType:(int)arg1;
- (BOOL)allowsViewType:(int)arg1;
- (id)model;
- (void)loadView;
- (void)editNameForModelObject:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)selectEditor:(id)arg1;
- (void)takeFocus;
- (id)activeEditor;
@property(readonly) IDEDataModelEditor *rootEditor;
- (id)allSubViewControllers;
- (id)identifier;
- (id)nibBundle;
- (id)nibName;

// Remaining properties
@property(readonly) NSView *view;

@end

@interface NSPredicateEditorRowTemplate_7821586 : NSPredicateEditorRowTemplate
{
}

- (double)matchForPredicate:(id)arg1;

@end

@interface IDEPredicateEditorFallbackRowTemplate : NSPredicateEditorRowTemplate
{
    NSPopUpButton *popup;
    NSTextField *textField;
}

+ (id)rowTemplate;
- (void)setPredicate:(id)arg1;
- (id)templateViews;
- (id)textField;
- (id)popup;
- (id)predicateWithSubpredicates:(id)arg1;
- (id)displayableSubpredicatesOfPredicate:(id)arg1;
- (double)matchForPredicate:(id)arg1;

@end

@interface IDEDataModelFetchRequestSlice : IDEViewController <IDECapsuleViewController>
{
    NSSegmentedControl *tabSwitch;
    NSTabView *tabView;
    NSTextField *predicateField;
    NSPredicateEditor *predicateEditor;
    double fixedHeight;
    NSArrayController *_entityController;
}

@property NSArrayController *entityController; // @synthesize entityController=_entityController;
- (void)loadView;
- (void)ruleEditorRowsDidChange:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)tabSwitched:(id)arg1;
- (void)predicateChanged;
- (void)updateFrame;
- (void)updatePredicateRowTemplates;
- (void)updatePredicateRowTemplatesUsingFetchRequest:(id)arg1;
- (double)heightForPredicateText;
- (void)setTitle:(id)arg1;
@property(readonly) BOOL canUndisclose;
@property(readonly) BOOL canRemove;
@property(readonly) BOOL canRename;
@property(readonly) NSString *titleForDisplay;
- (id)nibBundle;
- (id)nibName;
- (id)init;

// Remaining properties
@property BOOL canAddItems;
@property BOOL canRemoveItems;
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) NSImage *icon;

@end

@interface IDEDataModelFetchRequestEditor : IDEDMEditorController <IDEDataModelEditorController, IDECapsuleListViewDataSource>
{
    NSArrayController *entityController;
    IDECapsuleListView *tableView;
    NSMutableArray *_controllers;
    IDEDataModelEditor *_parentEditor;
}

+ (id)keyPathsForValuesAffectingSelectedRequests;
@property IDEDataModelEditor *parentEditor; // @synthesize parentEditor=_parentEditor;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)takeFocus;
- (void)editNameForModelObject:(id)arg1;
- (BOOL)allowsViewType:(int)arg1;
- (void)selectModelObjects:(id)arg1;
@property(readonly) NSArray *selection;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)reload;
- (void)invalidate;
- (void)_invalidateControllers;
- (id)selectedRequests;
- (id)identifier;
- (id)nibBundle;
- (id)nibName;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly) IDEDataModelEditor *rootEditor;
@property(readonly) NSView *view;

@end

@interface IDEDataModelAutomaticResultsFinder : IDEDMGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(id *)arg1 phaseTwoBlock:(void)arg2 phaseThreeBlock:(id *)arg3;
- (id)_geniusLocationsForModelObject:(id)arg1;
- (id)_geniusSymbolsForEntity:(id)arg1;
- (id)_geniusSymbolsForProperty:(id)arg1;
- (id)_geniusSymbolsForProperty:(id)arg1 classSymbol:(id)arg2;
- (id)_geniusSymbolsForProperty:(id)arg1 containerSymbol:(id)arg2;
- (id)_classSymbolsForEntity:(id)arg1;
- (id)geniusCategoryIdentifier;

@end

@interface IDEDataModelIndexSource : IDEIndexDataSource <NSFileManagerDelegate>
{
}

+ (id)dataSourceVersion;
- (BOOL)generateDataForJob:(id)arg1;
- (void)_indexEntity:(id)arg1 forFile:(id)arg2 index:(id)arg3;
- (id)loadModelForURL:(id)arg1 error:(id *)arg2;

@end

@interface IDEDataModelPropertiesTableController : IDEDMEditorController <NSTableViewDelegate, XDTableViewScrollDelegate, IDEDMArrayControllerDelegate, IDECapsuleViewController, IDECapsuleViewDelegate>
{
    BOOL _showsEntityColumn;
    IDEDataModelBrowserEditor *parentEditor;
    IDEDMArrayController *arrayController;
    XDTableView *tableView;
    NSTableColumn *entitiesColumn;
    NSArrayController *entityArrayController;
    IDEDMHighlightImageAndTextCell *propertyNameAndImageCell;
    NSArray *_selectedProperties;
    NSMapTable *_tableColumnsByIdentifier;
    BOOL _tableViewWasFirstResponder;
    id <DVTObservingToken> _modelObservationToken;
    id _findObservationToken;
    NSArray *_previousSelectedProperties;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingCanRemoveItems;
+ (id)keyPathsForValuesAffectingSelectedEntities;
+ (id)keyPathsForValuesAffectingModel;
@property(retain) NSArray *selectedProperties; // @synthesize selectedProperties=_selectedProperties;
@property(retain) NSArrayController *arrayController; // @synthesize arrayController;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
@property(retain) NSIndexSet *stateSelectionIndexes;
@property NSDictionary *tableViewState;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)arrayControllerDidRearrangeObjects:(id)arg1;
- (void)arrayControllerWillRearrangeObjects:(id)arg1;
- (void)_makeTableViewFirstResponder;
- (void)tableView:(id)arg1 didScrollWheel:(id)arg2;
- (void)numberOfArrangedObjectsChanged;
- (void)_resize;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
@property(readonly) BOOL isActive;
- (void)takeFocus;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)tableView:(id)arg1 didRemoveTableColumn:(id)arg2;
- (void)_enterMappedColumn:(id)arg1 tableView:(id)arg2;
- (id)defaultTableColumnIdentifiersForTableView:(id)arg1;
- (id)allowedTableColumnIdentifiersForTableView:(id)arg1;
- (id)tableView:(id)arg1 columnForTableColumnIdentifier:(id)arg2;
- (id)tableView:(id)arg1 menuTitleForTableColumnIdentifier:(id)arg2;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(id)arg1;
@property(readonly) NSString *titleForDisplay;
@property(readonly) BOOL canRename;
- (BOOL)canDelete;
@property BOOL canRemoveItems;
- (Class)targetedEditorClass;
- (id)nameColumnIdentifier;
@property(readonly) NSArray *selectedEntities;
- (id)nibBundle;
- (void)delete:(id)arg1;
- (void)editNameForProperty:(id)arg1;
- (void)modelDidChange;
- (void)modelWillChange;
@property(readonly) NSArray *allProperties;
- (void)selectProperties:(id)arg1;
- (void)propertySelectionChanged;
- (void)entitySelectionChanged;
- (id)model;
- (void)loadView;
- (id)nibName;
- (void)_setupCellsAndColumns;

// Remaining properties
@property BOOL canAddItems;
@property(readonly) BOOL canRemove;
@property(readonly) BOOL canUndisclose;
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) NSImage *icon;

@end

@interface IDEDataModelAttributesController : IDEDataModelPropertiesTableController
{
}

- (id)defaultTableColumnIdentifiersForTableView:(id)arg1;
- (id)allowedTableColumnIdentifiersForTableView:(id)arg1;
- (id)identifier;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (Class)targetedEditorClass;
- (id)titleForDisplay;
- (id)typeNames;

@end

@interface IDEDataModelFetchedPropertiesController : IDEDataModelPropertiesTableController
{
}

- (id)identifier;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (Class)targetedEditorClass;
- (id)titleForDisplay;
- (id)defaultTableColumnIdentifiersForTableView:(id)arg1;
- (id)allowedTableColumnIdentifiersForTableView:(id)arg1;

@end

@interface IDEDataModelRelationshipsController : IDEDataModelPropertiesTableController
{
}

- (id)defaultTableColumnIdentifiersForTableView:(id)arg1;
- (id)allowedTableColumnIdentifiersForTableView:(id)arg1;
- (id)identifier;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (Class)targetedEditorClass;
- (id)titleForDisplay;

@end

@interface IDEDMDocumentLocation : DVTDocumentLocation
{
    IDEDMSelection *_modelSelection;
}

+ (id)siblingForModelObject:(id)arg1 next:(BOOL)arg2;
+ (id)adjacentModelObjectToModelObject:(id)arg1 next:(BOOL)arg2;
+ (id)lastModelObjectWithRoot:(id)arg1;
+ (id)firstModelObjectWithRoot:(id)arg1;
+ (id)arrayByTraversingModelInLocationOrderWithRoot:(id)arg1;
+ (id)documentLocationWithURL:(id)arg1 modelObject:(id)arg2;
@property(readonly) IDEDMSelection *modelSelection; // @synthesize modelSelection=_modelSelection;
@property(readonly) NSString *stringRepresentation;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isNearLocation:(id)arg1 inModel:(id)arg2;
- (long long)compare:(id)arg1;
- (id)previousLocationWithURL:(id)arg1 model:(id)arg2;
- (id)nextLocationWithURL:(id)arg1 model:(id)arg2;
- (id)modelObjectFromModel:(id)arg1;
- (id)copyWithURL:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)initWithStringRepresentation:(id)arg1 url:(id)arg2;
- (id)initWithURL:(id)arg1 modelObject:(id)arg2;
- (id)initWithURL:(id)arg1 modelSelection:(id)arg2;

@end

@interface IDEDMSelection : NSObject
{
    NSArray *_selectionPath;
}

@property(readonly) NSArray *selectionPath; // @synthesize selectionPath=_selectionPath;
@property(readonly) NSString *stringRepresentation;
- (BOOL)isNearSelection:(id)arg1 inModel:(id)arg2;
- (long long)compare:(id)arg1;
- (unsigned long long)_orderOfKey:(id)arg1 forClassName:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)modelObjectFromModel:(id)arg1;
- (id)initWithStringRepresentation:(id)arg1;
- (id)initWithModelObject:(id)arg1;
- (id)_findKeyForObject:(id)arg1 ofRootObject:(id)arg2;
- (id)_findKeyForObject:(id)arg1 inKeys:(id)arg2 ofRootObject:(id)arg3;
- (id)_keysToSearchForModelObject:(id)arg1;

@end

@interface IDEDMEditor : IDEEditor <NSSplitViewDelegate>
{
    DVTBorderedView *bottomToolbarBorderView;
    NSView *sourceListSplitViewPane;
    IDEDMEditorSourceListController *sourceListViewController;
    DVTSplitView *splitView;
    IDEDMSubViewControllerStateManager *_subViewControllerStateManager;
    IDEDMEditorController *currentActiveController;
    IDEDMEditorController *_currentActiveController;
}

+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
+ (id)keyPathsForValuesAffectingCurrentSelectedDocumentLocations;
@property(retain) IDEDMEditorController *currentActiveController; // @synthesize currentActiveController=_currentActiveController;
- (void)invalidate;
- (void)selectPreviousContentSibling:(id)arg1;
- (void)selectNextContentSibling:(id)arg1;
- (void)selectContentChild:(id)arg1;
- (void)selectContentParent:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)_oneSourceModelObjectIsSelected;
- (void)takeFocus;
- (id)currentSelectedItems;
- (id)currentSelectedDocumentLocations;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)firstResponderChanged;
- (void)setStateToken:(id)arg1;
@property(readonly) NSString *identifier;
@property(readonly) NSArray *allSubViewControllers;
- (void)makeAllViewControllersPerformSelector:(SEL)arg1;
- (void)subViewDidBecomeFirstResponder:(id)arg1;
@property(readonly) id <IDEDMModelRootObject> modelRoot;
- (void)selectModelObjects:(id)arg1 focus:(BOOL)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
@property(readonly) struct CGSize minimumContentViewSize;
- (void)loadView;
- (void)_setupContentViewResizing;
- (void)_setupSplitView;
- (void)_setupBorderView;
- (void)_mountSourceListView;
- (void)selectModelObjects:(id)arg1;
@property(readonly) Class documentLocationClass;

@end

@interface IDEDMSourceListSection : NSObject <IDEDMArrayControllerDelegate>
{
    NSString *_name;
    id _modelRoot;
    NSString *_keyPath;
    NSString *_identifier;
    NSArray *_sectionItemsToHide;
    id <DVTObservingToken> _observationToken;
    id <DVTObservingToken> _hiddenItemsObservationToken;
    NSString *_treeControllerChildrenKeyPath;
    IDEDMArrayController *_arrayController;
}

@property(retain) NSArray *sectionItemsToHide; // @synthesize sectionItemsToHide=_sectionItemsToHide;
@property(retain) NSString *treeControllerChildrenKeyPath; // @synthesize treeControllerChildrenKeyPath=_treeControllerChildrenKeyPath;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property(retain) id modelRoot; // @synthesize modelRoot=_modelRoot;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)valueForUndefinedKey:(id)arg1;
- (id)representativeIcon;
@property(readonly) NSArray *sectionItems;
- (id)description;
- (void)arrayControllerDidRearrangeObjects:(id)arg1;
- (void)arrayControllerWillRearrangeObjects:(id)arg1;
@property(retain) NSArray *sortDescriptors;
- (id)initWithName:(id)arg1 modelRoot:(id)arg2 keyPath:(id)arg3 identifier:(id)arg4;
- (void)_notifyChangeWithDictionary:(id)arg1;

@end

@interface IDEDMUserInfoInspectorController : IDEInspectorViewController <NSTableViewDelegate, XDTableViewScrollDelegate>
{
    NSArrayController *userInfoDictionaryController;
    DVTGradientImageButton *removeButton;
    DVTGradientImageButton *addButton;
    DVTBorderedView *controlBar;
    XDTableView *tableView;
}

- (void)delete:(id)arg1;
- (void)removeUserInfoKey:(id)arg1;
- (void)addUserInfoKey:(id)arg1;
- (void)numberOfUserInfoKeysChanged:(id)arg1;
- (void)loadView;
- (void)tableView:(id)arg1 didScrollWheel:(id)arg2;
- (void)_resize;
- (id)nibBundle;
- (id)nibName;

@end

@interface IDEFetchRequestInspectorController : IDEInspectorViewController
{
}

@end

@interface IDEEntityInspectorController : IDEDataModelInspectorController
{
}

+ (id)keyPathsForValuesAffectingPossibleParentEntities;
+ (id)keyPathsForValuesAffectingMultiplePossibleParentEntities;
- (id)possibleParentEntities;
- (id)multiplePossibleParentEntities;

@end

@interface IDEMappingModelDocument : IDEEditorDocument <IDEDocumentStructureProviding>
{
    XDMappingModelManager *_modelManager;
    NSString *_mappingModelPath;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)wrapperByCopyingContentsAtPath:(id)arg1 error:(id *)arg2;
@property XDMappingModelManager *modelManager; // @synthesize modelManager=_modelManager;
@property(readonly) NSURL *mappingModelURL;
- (void)reloadDestinationModel;
@property NSURL *destinationModelURL;
- (void)reloadSourceModel;
@property NSURL *sourceModelURL;
- (id)knownFileReferences;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
@property(readonly) XDDevMappingModel *mappingModel;
- (BOOL)loadMappingModelFromURL:(id)arg1 error:(id *)arg2;
- (BOOL)canSave;

@end

@interface IDEMappingModelDocumentLocation : IDEDMDocumentLocation
{
}

@end

@interface IDEMappingModelEditor : IDEDMEditor <NSSplitViewDelegate, DVTOutlineViewDelegate, IDECapsuleListViewDataSource, NSPathControlDelegate, NSOpenSavePanelDelegate>
{
    IDECapsuleListView *capsuleView;
    NSPathControl *sourcePathControl;
    NSPathControl *destinationPathControl;
    DVTDelayedMenuButton *addEntityMappingButton;
    DVTStackView *stackView;
    DVTControllerContentView *entityMappingEditorView;
    IDEMappingModelAttributeMappingsController *attributeMappingsController;
    IDEMappingModelRelationshipMappingsController *relationshipMappingsController;
    NSArray *_shownSourceListSections;
    NSArray *_selectedSourceListIndexPaths;
    NSView *_currentActiveView;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingSelectedEntityMappings;
+ (id)keyPathsForValuesAffectingModelRoot;
+ (id)keyPathsForValuesAffectingMappingModel;
@property(retain) NSView *currentActiveView; // @synthesize currentActiveView=_currentActiveView;
@property(retain) NSArray *selectedSourceListIndexPaths; // @synthesize selectedSourceListIndexPaths=_selectedSourceListIndexPaths;
@property(readonly) NSArray *shownSourceListSections; // @synthesize shownSourceListSections=_shownSourceListSections;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)selectedDocumentLocationsChanged;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)addRelationshipMapping:(id)arg1;
- (void)addAttributeMapping:(id)arg1;
- (void)_createAndEditPropertyMappingsOfClass:(Class)arg1;
- (void)addEntityMapping:(id)arg1;
- (id)mappingModelManager;
- (BOOL)isEntityMappingTableviewSortedByOrder;
- (void)_editNameForModelObject:(id)arg1;
- (void)selectModelObjects:(id)arg1 focus:(BOOL)arg2;
- (void)selectModelObjects:(id)arg1;
- (void)_selectEntityMappings:(id)arg1;
@property(readonly) NSArray *selectedEntityMappings;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (id)allSubViewControllers;
- (id)capsuleViewControllers;
- (void)loadView;
- (void)reloadDataModels;
- (id)identifier;
- (struct CGSize)minimumContentViewSize;
- (Class)documentLocationClass;
- (id)modelRoot;
@property(readonly) XDDevMappingModel *mappingModel;
- (void)pathControl:(id)arg1 willDisplayOpenPanel:(id)arg2;
- (void)_configurePathControlOpenPanel:(id)arg1;
- (void)_setupButtons;
- (void)_setupPathControls;

@end

@interface IDEMappingModelPathCell : NSPathCell
{
}

- (void)_setupPopUpButtonCellWithResizedImages:(BOOL)arg1;
- (void)setPathStyle:(long long)arg1;
- (void)_changeArrowDrawing;
- (id)_ideMappingModel_popButtonCell;

@end

@interface IDEMappingModelEditorStackView : DVTStackView
{
}

- (void)layoutBottomUp;

@end

@interface IDEMappingModelEntityMappingInspectorController : IDEInspectorViewController
{
}

+ (id)keyPathsForValuesDestinationEntityNames;
+ (id)keyPathsForValuesAffectingSourceEntityNames;
+ (id)keyPathsForValuesAffectingDestinationEntities;
+ (id)keyPathsForValuesAffectingSourceEntities;
+ (id)keyPathsForValuesAffectingMappingModel;
@property(readonly) NSArray *destinationEntityNames;
@property(readonly) NSArray *sourceEntityNames;
@property(readonly) NSArray *destinationEntities;
@property(readonly) NSArray *sourceEntities;
- (id)mappingModel;

@end

@interface IDEMappingModelNavigableItem : IDEDMNavigableItem
{
}

- (Class)documentLocationClass;
- (id)documentType;

@end

@interface IDEMappingModelPropertyMappingsController : IDEDMEditorController <IDECapsuleViewController, IDECapsuleViewDelegate>
{
    IDEMappingModelEditor *parentEditor;
    NSArrayController *propertiesArrayController;
    NSTableView *tableView;
    NSIndexSet *selectedPropertyMappingIndexes;
    id <DVTObservingToken> _modelObservationToken;
    NSArray *_previousSelectedPropertyMappings;
    NSIndexSet *_selectedPropertyMappingIndexes;
}

+ (id)keyPathsForValuesAffectingSelection;
+ (id)keyPathsForValuesAffectingSelectedPropertyMappings;
+ (id)keyPathsForValuesAffectingSelectedEntityMappingIndexes;
+ (id)keyPathsForValuesAffectingSelectedEntityMappings;
+ (id)keyPathsForValuesAffectingAllEntityMappings;
@property(retain) NSIndexSet *selectedPropertyMappingIndexes; // @synthesize selectedPropertyMappingIndexes=_selectedPropertyMappingIndexes;
- (void)delete:(id)arg1;
- (void)modelDidChange;
- (void)modelWillChange;
- (void)numberOfArrangedObjectsChanged;
- (void)_resize;
- (void)editNameForModelObject:(id)arg1;
- (id)allPropertyMappings;
- (void)takeFocus;
- (id)selection;
@property(readonly) NSArray *selectedPropertyMappings;
@property(retain) NSIndexSet *selectedEntityMappingIndexes;
@property(readonly) NSArray *selectedEntityMappings;
@property(readonly) NSArray *allEntityMappings;
- (void)selectPropertyMappings:(id)arg1;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(id)arg1;
@property(readonly) BOOL canRename;
- (BOOL)canDelete;
- (id)nibBundle;
@property(readonly) NSString *titleForDisplay;
- (id)identifier;
- (id)nibName;
- (void)loadView;
- (void)_setupCellsAndColumns;

// Remaining properties
@property BOOL canAddItems;
@property(readonly) BOOL canRemove;
@property BOOL canRemoveItems;
@property(readonly) BOOL canUndisclose;
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) NSImage *icon;

@end

@interface IDEMappingModelPropertyMappingLongTypeValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (void)initlaize;
- (id)transformedValue:(id)arg1;
- (Class)transformedValueClass;

@end

@interface IDEMappingModelAttributeMappingsController : IDEMappingModelPropertyMappingsController
{
}

+ (id)keyPathsForValuesAffectingCanRemoveItems;
- (BOOL)canRemoveItems;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (id)titleForDisplay;
- (id)identifier;
- (id)nibName;

@end

@interface IDEMappingModelRelationshipMappingsController : IDEMappingModelPropertyMappingsController
{
}

+ (id)keyPathsForValuesAffectingCanRemoveItems;
- (void)removeItems:(id)arg1;
- (BOOL)canRemoveItems;
- (void)addItems:(id)arg1;
- (id)titleForDisplay;
- (id)identifier;
- (id)nibName;

@end

@interface IDEMappingModelRelationshipMappingInspector : IDEInspectorViewController
{
    unsigned long long _valueExpressionChoice;
}

+ (id)keyPathsForValuesAffectingSortedEntityMappingNames;
+ (id)keyPathsForValuesAffectingSortedEntityMappings;
+ (id)keyPathsForValuesAffectingValueForMappingModel;
@property unsigned long long valueExpressionChoice; // @synthesize valueExpressionChoice=_valueExpressionChoice;
@property(readonly) NSArray *sortedEntityMappingNames;
- (id)sortedEntityMappings;
@property(readonly) XDDevMappingModel *mappingModel;

@end

@interface IDEVersionedDataModelDocument : IDEEditorDocument
{
}

+ (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
- (BOOL)readFromFileWrapper:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)canSave;

@end

@interface IDEVersionedDataModelEditor : IDEEditor
{
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)selectedDocumentLocationsChanged;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

@end

@interface XDBezelWidgetManager : NSObject <NSWindowDelegate, NSAnimationDelegate>
{
    struct __CFRunLoopTimer *_bezelWidgetTimer;
    XDBezelWidgetView *_bezelWidgetView;
    XDBezelWidgetPanel *_bezelWidgetPanel;
}

+ (BOOL)sharedBezelWidgetManagerExists;
+ (id)sharedBezelWidgetManager;
+ (Class)_sharedBezelWidgetManagerClass;
+ (void)initialize;
- (BOOL)isBezelWidgetVisible;
- (void)windowDidResignKey:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)orderOutBezelWidget;
- (void)orderFrontBezelWidgetForView:(id)arg1;
- (void)_destroyBezelWidgetTimer;
- (void)_createBezelWidgetTimer;
- (id)bezelWidgetView;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface XDBezelWidgetPanel : NSPanel
{
}

+ (void)initialize;
- (BOOL)canBecomeKeyWindow;

@end

@interface XDBezelWidgetView : NSView
{
    NSView *_contentView;
    struct CGSize _contentViewMargins;
    double _cornerRadius;
    NSColor *_backgroundColor;
    long long _trackingRectTag;
    struct _XDBezelWidgetViewFlags _bwvFlags;
}

+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)resetCursorRects;
- (BOOL)isOpaque;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (double)cornerRadius;
- (void)setCornerRadius:(double)arg1;
- (void)sizeToFit;
- (void)setFrameFromContentFrame:(struct CGRect)arg1;
- (struct CGSize)contentViewMargins;
- (void)setContentViewMargins:(struct CGSize)arg1;
- (id)contentView;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)addSubview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDCompartment : NSObject <NSCoding>
{
    XDCompartmentGraphic *_compartmentGraphic;
    id _identifier;
    NSImage *_iconImage;
    NSString *_label;
    NSColor *_backgroundColor;
    id _objectValue;
    XDCompartmentItem *_compartmentItem;
    struct CGSize _compartmentItemMinSize;
    struct _XDCompartmentFlags _cFlags;
}

+ (Class)defaultCompartmentItemClass;
+ (void)initialize;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (struct CGSize)compartmentItemMinSize;
- (void)setCompartmentItemMinSize:(struct CGSize)arg1;
- (id)compartmentItemAtIndex:(long long)arg1;
- (id)compartmentItem;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)iconImage;
- (void)setIconImage:(id)arg1;
- (id)identifier;
- (void)setIdentifier:(id)arg1;
- (id)compartmentGraphic;
- (void)setCompartmentGraphic:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDCompartmentGraphic : XDGraphic
{
    id _dataSource;
    NSMutableArray *_compartments;
    NSButtonCell *_triangleCell;
    NSMutableIndexSet *_collapsedCompartments;
    struct _XDCompartmentGraphicFlags _cgFlags;
}

+ (struct CGSize)_defaultMinSize;
+ (Class)defaultGraphicContentsEditorClass;
+ (Class)defaultShadowStyleClass;
+ (Class)defaultFillStyleClass;
+ (Class)defaultCompartmentClass;
+ (Class)defaultAuxiliaryStorageClass;
+ (void)initialize;
- (BOOL)mouseDown:(id)arg1 inView:(id)arg2;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (void)_userCollapseCompartmentAtIndex:(long long)arg1 inDiagramView:(id)arg2;
- (void)_userExpandCompartmentAtIndex:(long long)arg1 inDiagramView:(id)arg2;
- (BOOL)_userCanCollapseCompartmentAtIndex:(long long)arg1;
- (BOOL)_userCanExpandCompartmentAtIndex:(long long)arg1;
- (long long)clickedCompartmentItemIndexInDiagramView:(id)arg1;
- (long long)clickedCompartmentIndexInDiagramView:(id)arg1;
- (BOOL)_userCanEditItemInCompartment:(id)arg1 atIndex:(long long)arg2;
- (void)drawInteriorInView:(id)arg1;
- (void)drawCompartmentAtIndex:(long long)arg1 inDiagramView:(id)arg2;
- (void)_willDisplayItem:(id)arg1 atIndex:(long long)arg2 inCompartment:(id)arg3 inDiagramView:(id)arg4;
- (id)fillPath;
- (id)fillPathForContents;
- (id)fillPathForTitle;
- (void)setFillColor:(id)arg1;
- (void)graphicWillBeDeselectedInDiagramView:(id)arg1;
- (void)graphicWasSelectedInDiagramView:(id)arg1;
- (id)selectedItemsEnumeratorInDiagramView:(id)arg1;
- (long long)numberOfSelectedItemsInDiagramView:(id)arg1;
- (long long)indexOfSelectedItemInDiagramView:(id)arg1;
- (BOOL)isItemAtIndex:(long long)arg1 selectedInCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3;
- (void)deselectAllInDiagramView:(id)arg1;
- (void)selectAllInDiagramView:(id)arg1;
- (void)deselectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3;
- (void)selectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3;
- (void)selectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 diagramView:(id)arg3 byExtendingSelection:(BOOL)arg4;
- (void)_postSelectionDidChangeNotificationInDiagramView:(id)arg1;
- (BOOL)_enableSelectionPostingAndPostInDiagramView:(id)arg1;
- (void)_disableSelectionPostingInDiagramView:(id)arg1;
- (long long)indexOfSelectedCompartmentInDiagramView:(id)arg1;
- (BOOL)sizeToFitWithTrackingMask:(unsigned long long)arg1;
- (double)maximumWidthOfCompartments;
- (double)maximumWidthOfCompartmentAtIndex:(long long)arg1;
- (long long)indexOfCompartmentItemAtPoint:(struct CGPoint)arg1;
- (long long)indexOfCompartmentAtPoint:(struct CGPoint)arg1;
- (struct _NSRange)compartmentsInRect:(struct CGRect)arg1;
- (struct CGRect)frameOfItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2;
- (struct CGRect)frameOfCompartmentDisclosureTriangleAtIndex:(long long)arg1;
- (struct CGRect)frameOfCompartmentLabelAtIndex:(long long)arg1;
- (struct CGRect)frameOfCompartmentAtIndex:(long long)arg1;
- (double)_heightOfCompartmentAtIndex:(long long)arg1;
- (double)_heightOfCompartmentLabelAtIndex:(long long)arg1;
- (void)rollDownAllCompartments;
- (void)rollUpAllCompartments;
- (void)collapseAllCompartments;
- (void)collapseCompartmentAtIndex:(long long)arg1;
- (void)collapseCompartment:(id)arg1;
- (void)expandAllCompartments;
- (void)expandCompartmentAtIndex:(long long)arg1;
- (void)expandCompartment:(id)arg1;
- (BOOL)hasCollapsibleCompartments;
- (BOOL)hasExpandableCompartments;
- (BOOL)isCompartmentExpanded:(id)arg1;
- (BOOL)isCompartmentExpandedAtIndex:(long long)arg1;
- (void)noteNumberOfCompartmentsChanged;
- (void)reloadData;
- (void)tile;
- (id)compartmentWithIdentifier:(id)arg1;
- (id)compartmentAtIndex:(long long)arg1;
- (void)removeCompartmentAtIndex:(long long)arg1;
- (void)removeCompartment:(id)arg1;
- (void)insertCompartment:(id)arg1 atIndex:(long long)arg2;
- (void)addCompartment:(id)arg1;
- (long long)numberOfItemsInCompartmentAtIndex:(long long)arg1;
- (long long)numberOfCompartments;
- (id)compartments;
- (unsigned long long)knobPositionMask;
- (struct CGPoint)magnetLocationForConnection:(id)arg1;
- (BOOL)canDrawShadow;
- (BOOL)canFlipHorizontally;
- (BOOL)canFlipVertically;
- (BOOL)rollsUpCompartments;
- (void)setRollsUpCompartments:(BOOL)arg1;
- (BOOL)alwaysDrawsCompartmentLabel;
- (void)setAlwaysDrawsCompartmentLabel:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)operationColor;
- (void)setOperationColor:(id)arg1;
- (id)attributeColor;
- (void)setAttributeColor:(id)arg1;
- (id)nameColor;
- (void)setNameColor:(id)arg1;
- (id)operationFont;
- (void)setOperationFont:(id)arg1;
- (id)attributeFont;
- (void)setAttributeFont:(id)arg1;
- (id)nameFont;
- (void)setNameFont:(id)arg1;

@end

@interface XDCompartmentGraphicAuxiliaryStorage : XDGraphicAuxiliaryStorage
{
    long long _selectedCompartmentIndex;
    NSMutableIndexSet *_selectedItems;
    long long _originalSelectedCompartmentIndex;
    NSMutableIndexSet *_originalSelectedItems;
    long long _mouseOverCompartmentIndex;
    long long _mouseOverCompartmentItemIndex;
    long long _clickedCompartmentIndex;
    long long _clickedCompartmentItemIndex;
    XDCompartmentItem *_clickedCompartmentItem;
    struct _XDCompartmentGraphicAuxiliaryStorageFlags _cgasFlags;
}

+ (void)initialize;
- (id)clickedCompartmentItem;
- (void)setClickedCompartmentItem:(id)arg1;
- (long long)clickedCompartmentItemIndex;
- (void)setClickedCompartmentItemIndex:(long long)arg1;
- (long long)clickedCompartmentIndex;
- (void)setClickedCompartmentIndex:(long long)arg1;
- (long long)mouseOverCompartmentItemIndex;
- (void)setMouseOverCompartmentItemIndex:(long long)arg1;
- (long long)mouseOverCompartmentIndex;
- (void)setMouseOverCompartmentIndex:(long long)arg1;
- (id)selectedItemsEnumerator;
- (long long)numberOfSelectedItems;
- (long long)indexOfSelectedItem;
- (BOOL)isItemAtIndex:(long long)arg1 selectedInCompartmentAtIndex:(long long)arg2;
- (void)_deselectAll;
- (void)_selectAll;
- (void)deselectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2;
- (void)selectItemAtIndex:(long long)arg1 inCompartmentAtIndex:(long long)arg2 byExtendingSelection:(BOOL)arg3;
- (void)_postSelectionDidChangeNotification;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_disableSelectionPosting;
- (long long)indexOfSelectedCompartment;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1 diagramView:(id)arg2;

@end

@interface XDCompartmentGraphicFillStyle : XDFillStyle
{
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2 usingFillType:(int)arg3;

@end

@interface XDCompartmentGraphicShadowStyle : XDShadowStyle
{
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;

@end

@interface XDCompartmentGraphicTextEditor : XDGraphicTextEditor
{
    NSCell *_editingCell;
    long long _editingCompartmentIndex;
    long long _editingCompartmentItemIndex;
}

+ (void)initialize;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (id)editingCell;
- (void)setEditingCell:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDCompartmentItem : NSObject <NSCoding, NSCopying>
{
    XDCompartment *_compartment;
    id _representedObject;
    NSCell *_dataCell;
}

+ (Class)defaultDataCellClass;
+ (void)initialize;
- (BOOL)mouseDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (unsigned long long)alignment;
- (void)setAlignment:(unsigned long long)arg1;
- (id)dataCell;
- (void)setDataCell:(id)arg1;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (id)compartment;
- (void)setCompartment:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDCompartmentItemCell : NSTextFieldCell
{
    XDCompartmentItem *_compartmentItem;
    NSImage *_image;
    NSImage *_alternateImage;
    id _buttonTarget;
    SEL _buttonAction;
    SEL _buttonDoubleAction;
    struct _XDCompartmentItemCellFlags _cicFlags;
}

+ (void)initialize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (SEL)buttonDoubleAction;
- (void)setButtonDoubleAction:(SEL)arg1;
- (SEL)buttonAction;
- (void)setButtonAction:(SEL)arg1;
- (id)buttonTarget;
- (void)setButtonTarget:(id)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)compartmentItem;
- (void)setCompartmentItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initTextCell:(id)arg1;

@end

@interface XDCompartmentLabelCell : NSButtonCell
{
    NSImage *_iconImage;
}

+ (id)_defaultDownArrowImage;
+ (id)_defaultRightArrowImage;
+ (void)initialize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (id)iconImage;
- (void)setIconImage:(id)arg1;
- (void)dealloc;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface XDComponentManager : NSObject
{
    NSMutableDictionary *_componentOrProxyByIdentifier;
}

+ (void)unregisterComponentProxyForIdentifier:(id)arg1;
+ (void)registerComponentProxy:(id)arg1;
+ (void)registerComponentProxy:(id)arg1 forIdentifier:(id)arg2;
+ (void)unregisterComponentClassForIdentifier:(id)arg1;
+ (void)registerComponentClass:(Class)arg1;
+ (void)registerComponentClass:(Class)arg1 forIdentifier:(id)arg2;
+ (void)_unregisterComponentClassForIdentifier:(id)arg1;
+ (void)_registerComponentClassOrProxy:(id)arg1 forIdentifier:(id)arg2;
+ (void)initialize;
+ (void)_loadComponentProxies;
+ (id)_componentSearchPaths;
+ (Class)defaultComponentProxyClass;
+ (id)componentFileExtension;
+ (id)searchPathComponentInApplicationSupportDirectory;
- (id)componentWithIdentifier:(id)arg1;
- (id)componentOrProxyWithIdentifier:(id)arg1;
- (id)componentIdentifiers;
- (void)dealloc;
- (id)init;

@end

@interface XDComponentProxy : NSObject <XDComponentIdentifying>
{
    NSBundle *_bundle;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (id)component;
- (id)bundle;
- (id)identifier;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1;

@end

@interface XDConnection : NSObject <NSCoding>
{
    XDGraphic *_graphic;
    XDGraphic *_targetGraphic;
    struct _XDConnectionFlags _cFlags;
}

+ (void)initialize;
- (void)invalidate;
- (id)targetGraphic;
- (void)setTargetGraphic:(id)arg1;
- (id)graphic;
- (void)_setGraphic:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDCreationTool : XDDiagramTool
{
}

+ (Class)graphicClass;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (id)cursorForDiagramView:(id)arg1;

@end

@interface XDDiagramStorage : NSObject <NSCoding>
{
    IDEDataModelDiagramEditor *_diagramController;
    BOOL _needsSetup;
    NSMutableArray *_graphicsLayers;
    NSMutableArray *_graphics;
    NSMapTable *_objectValueToGraphicsPerfHash;
    id _dataSource;
    id _delegate;
    NSDictionary *_userInfo;
    struct _XDDiagramStorageFlags _dsFlags;
}

+ (void)initialize;
@property BOOL needsSetup; // @synthesize needsSetup=_needsSetup;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (void)invalidateGraphic:(id)arg1;
- (BOOL)isInvalidateGraphicDisabled;
- (void)enableInvalidateGraphic;
- (void)disableInvalidateGraphic;
- (id)graphicWithObjectValue:(id)arg1;
- (id)graphicsWithObjectValue:(id)arg1;
- (void)removeGraphic:(id)arg1;
- (void)moveGraphic:(id)arg1 toIndex:(long long)arg2;
- (void)moveGraphicAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)insertGraphic:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphic:(id)arg1;
- (id)graphics;
- (void)removeGraphicsLayer:(id)arg1;
- (void)moveGraphicsLayer:(id)arg1 toIndex:(long long)arg2;
- (void)moveGraphicsLayerAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)insertGraphicsLayer:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphicsLayer:(id)arg1;
- (id)graphicsLayers;
- (id)undoManager;
- (void)_invalidateCacheForGraphic:(id)arg1 withOldObjectValue:(id)arg2;
- (id)_firstDiagramViewForDiagramStorage:(id)arg1;
- (id)diagramController;
- (void)setDiagramController:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_removeGraphicFromCache:(id)arg1;
- (void)_addGraphicToCache:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (id)init;
- (id)defaultOperationColor;
- (void)setDefaultOperationColor:(id)arg1;
- (id)defaultAttributeColor;
- (void)setDefaultAttributeColor:(id)arg1;
- (id)defaultNameColor;
- (void)setDefaultNameColor:(id)arg1;
- (id)defaultOperationFont;
- (void)setDefaultOperationFont:(id)arg1;
- (id)defaultAttributeFont;
- (void)setDefaultAttributeFont:(id)arg1;
- (id)defaultNameFont;
- (void)setDefaultNameFont:(id)arg1;

@end

@interface XDDiagramTool : NSObject <XDComponentIdentifying>
{
    NSString *_identifier;
    id _delegate;
    NSString *_label;
    NSString *_toolTip;
    struct _XDDiagramToolFlags _dtFlags;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)flagsChanged:(id)arg1 inView:(id)arg2;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (void)mouseExited:(id)arg1 inView:(id)arg2;
- (void)mouseEntered:(id)arg1 inView:(id)arg2;
- (void)resignCurrentDiagramTool;
- (void)becomeCurrentDiagramTool;
- (BOOL)acceptsMouseMovedEvents;
- (void)setAcceptsMouseMovedEvents:(BOOL)arg1;
- (id)imageForDiagramToolbarItem;
- (id)cursorForDiagramView:(id)arg1;
- (id)toolTip;
- (void)setToolTip:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)identifier;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDDiagramToolManager : XDComponentManager
{
    XDDiagramTool *_currentDiagramTool;
    NSMapTable *_identifierByTag;
    NSToolbarItem *_toolbarItem;
    NSArray *_toolIdentifiers;
}

+ (id)componentFileExtension;
+ (void)initialize;
- (void)_diagramToolsToolbarItemAction:(id)arg1;
- (void)setDiagramToolIdentifiers:(id)arg1;
- (void)setDiagramToolsDelegatesTo:(id)arg1;
- (id)diagramToolsToolbarItem;
- (id)_arrangedDiagramToolIdentifiers;
- (void)selectDiagramToolWithIdentifier:(id)arg1;
- (void)selectDiagramTool:(id)arg1;
- (id)currentDiagramTool;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface _XDDiagramViewReserved : NSObject
{
    NSMutableString *_typeToSelectString;
    double _lastTypeToSelectEventTime;
    double _maxTypeToSelectInterval;
    struct _XDDiagramViewFlags _dvFlags;
}

@end

@interface XDDiagramView : NSView
{
    XDDiagramToolManager *_diagramToolManager;
    IDEDataModelDiagramEditor *_diagramController;
    XDDiagramStorage *_diagramStorage;
    struct CGRect _canvasBounds;
    double _zoomFactor;
    NSMutableArray *_selectedGraphics;
    NSArray *_originalSelectedGraphics;
    NSMutableArray *_orderedSelectedGraphics;
    NSMutableArray *_rubberbandGraphics;
    XDGraphic *_creatingGraphic;
    XDGraphic *_editingGraphic;
    NSView *_editorView;
    XDGraphic *_clickedGraphic;
    NSMapTable *_auxiliaryStorageCache;
    NSMapTable *_drawingCache;
    id _delegate;
    id _target;
    SEL _action;
    SEL _doubleAction;
    struct CGPoint _translatedOrigin;
    NSColor *_canvasBackgroundColor;
    NSShadow *_canvasShadow;
    NSColor *_backgroundColor;
    double _majorGridSpacing;
    long long _minorGridCount;
    NSColor *_majorGridColor;
    NSColor *_minorGridColor;
    NSColor *_pageBreaksColor;
    NSImage *_gridDrawingCache;
    struct CGRect _vRulerLineRect;
    struct CGRect _hRulerLineRect;
    NSTimer *_unhideKnobsTimer;
    long long _trackingRectTag;
    NSString *_toolTip;
    double _toolTipDelay;
    struct __CFRunLoopTimer *_toolTipTimer;
    struct CGPoint _toolTipPoint;
    NSWindow *_toolTipWindow;
    long long _toolTipTrackingRectTag;
    long long _pasteboardChangeCount;
    long long _pasteCascadeNumber;
    id _reserved;
}

+ (id)_defaultMenu;
+ (id)defaultMenu;
+ (void)setDefaultMenu:(id)arg1;
+ (void)_synchronizeDefaultContextMenu;
+ (id)defaultTypeToSelectCharacterSet;
+ (id)defaultZoomFactors;
+ (BOOL)defaultShowsSelectedGraphicsInFront;
+ (void)setDefaultShowsSelectedGraphicsInFront:(BOOL)arg1;
+ (BOOL)defaultShowsPageBreaks;
+ (void)setDefaultShowsPageBreaks:(BOOL)arg1;
+ (id)defaultPageBreaksColor;
+ (void)setDefaultPageBreaksColor:(id)arg1;
+ (BOOL)defaultSnapsToGrid;
+ (void)setDefaultSnapsToGrid:(BOOL)arg1;
+ (BOOL)defaultShowsMajorGrid;
+ (void)setDefaultShowsMajorGrid:(BOOL)arg1;
+ (BOOL)defaultShowsGrid;
+ (void)setDefaultShowsGrid:(BOOL)arg1;
+ (id)defaultMinorGridColor;
+ (void)setDefaultMinorGridColor:(id)arg1;
+ (id)defaultMajorGridColor;
+ (void)setDefaultMajorGridColor:(id)arg1;
+ (void)initialize;
- (void)flagsChanged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_navViewAction:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_destroyToolTipTimer;
- (void)_createToolTipTimer;
- (void)_toolTipTimer;
- (void)_showToolTip:(id)arg1;
- (double)_toolTipDelay;
- (void)_setToolTipDelay:(double)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_setNeedsDisplayForFirstResponderChange;
- (void)_applicationDidChange:(id)arg1;
- (void)_setNeedsDisplayForApplicationChange;
- (BOOL)moveSelectedGraphicsRelativeToPoint:(struct CGPoint)arg1;
- (void)_unhideKnobs:(id)arg1;
- (void)_hideKnobsMomentarily;
- (BOOL)areKnobsHidden;
- (void)setKnobsHidden:(BOOL)arg1;
- (void)updateRulers;
- (void)endEchoingToRulers;
- (void)continueEchoingToRulers:(struct CGRect)arg1;
- (void)beginEchoingToRulers:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawGraphics:(id)arg1 inRect:(struct CGRect)arg2;
- (id)_drawingCacheForGraphic:(id)arg1;
- (void)drawMinorGridInRect:(struct CGRect)arg1;
- (void)drawMajorGridInRect:(struct CGRect)arg1;
- (void)drawPageBreaksInRect:(struct CGRect)arg1;
- (void)invalidateGridDrawingCache;
- (id)auxiliaryStorageForGraphic:(id)arg1;
- (void)resetCursorRects;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (id)visibleGraphicsIntersectingRect:(struct CGRect)arg1;
- (id)selectedGraphicsIntersectingRect:(struct CGRect)arg1;
- (id)graphicsIntersectingRect:(struct CGRect)arg1;
- (id)visibleTrackingGraphicUnderPoint:(struct CGPoint)arg1;
- (id)trackingGraphicUnderPoint:(struct CGPoint)arg1;
- (id)trackingGraphicInFrontUnderPoint:(struct CGPoint)arg1;
- (id)visibleGraphicUnderPoint:(struct CGPoint)arg1;
- (id)graphicUnderPoint:(struct CGPoint)arg1;
- (id)graphicInFrontUnderPoint:(struct CGPoint)arg1;
- (id)_visibleGraphicUnderPoint:(struct CGPoint)arg1 trackingOnly:(BOOL)arg2;
- (id)_graphicUnderPoint:(struct CGPoint)arg1 trackingOnly:(BOOL)arg2;
- (id)_graphicInFrontUnderPoint:(struct CGPoint)arg1 trackingOnly:(BOOL)arg2;
- (id)graphicsInFront;
- (BOOL)showsSelectedGraphicsInFront;
- (void)setShowsSelectedGraphicsInFront:(BOOL)arg1;
- (BOOL)showsHiddenGraphics;
- (void)setShowsHiddenGraphics:(BOOL)arg1;
- (double)maxTypeToSelectInterval;
- (void)setMaxTypeToSelectInterval:(double)arg1;
- (BOOL)allowsTypeToSelect;
- (void)setAllowsTypeToSelect:(BOOL)arg1;
- (id)undoManager;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)arg1;
- (struct CGPoint)gridPoint:(struct CGPoint)arg1;
- (struct CGPoint)forceGridPoint:(struct CGPoint)arg1;
- (BOOL)showsPageBreaks;
- (void)setShowsPageBreaks:(BOOL)arg1;
- (id)pageBreaksColor;
- (void)setPageBreaksColor:(id)arg1;
- (BOOL)snapsToGrid;
- (void)setSnapsToGrid:(BOOL)arg1;
- (BOOL)showsMinorGrid;
- (void)setShowsMinorGrid:(BOOL)arg1;
- (BOOL)showsMajorGrid;
- (void)setShowsMajorGrid:(BOOL)arg1;
- (BOOL)showsGrid;
- (void)setShowsGrid:(BOOL)arg1;
- (id)minorGridColor;
- (void)setMinorGridColor:(id)arg1;
- (id)majorGridColor;
- (void)setMajorGridColor:(id)arg1;
- (double)minorGridSpacing;
- (long long)minorGridCount;
- (void)setMinorGridCount:(long long)arg1;
- (double)majorGridSpacing;
- (void)setMajorGridSpacing:(double)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)canvasShadow;
- (void)setCanvasShadow:(id)arg1;
- (BOOL)drawsCanvasShadow;
- (void)setDrawsCanvasShadow:(BOOL)arg1;
- (id)canvasBackgroundColor;
- (void)setCanvasBackgroundColor:(id)arg1;
- (BOOL)drawsCanvasBackground;
- (void)setDrawsCanvasBackground:(BOOL)arg1;
- (BOOL)infiniteCanvas;
- (void)setInfiniteCanvas:(BOOL)arg1;
- (BOOL)allowsDragAndDrop;
- (void)setAllowsDragAndDrop:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)_sendDoubleActionWithClickedGraphic:(id)arg1;
- (BOOL)_sendActionWithClickedGraphic:(id)arg1;
- (BOOL)_sendAction:(SEL)arg1 to:(id)arg2 graphic:(id)arg3;
- (id)clickedGraphic;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (BOOL)isEditing;
- (id)editorView;
- (id)editingGraphic;
- (void)setEditingGraphic:(id)arg1 editorView:(id)arg2;
- (id)creatingGraphic;
- (void)setCreatingGraphic:(id)arg1;
- (id)rubberbandGraphics;
- (void)setRubberbandGraphics:(id)arg1;
- (id)layoutableGraphics;
- (id)removableGraphics;
- (id)resizableGraphics;
- (id)movableGraphics;
- (void)_scrollGraphicTitleToVisible:(id)arg1 forceCenter:(BOOL)arg2;
- (void)scrollGraphicsToVisible:(id)arg1 forceCenter:(BOOL)arg2;
- (void)_centeredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)clearSelection;
- (void)_deselectHiddenSelectedGraphics;
- (void)deselectGraphics:(id)arg1;
- (void)deselectGraphic:(id)arg1;
- (void)selectOnlyGraphics:(id)arg1;
- (void)selectGraphics:(id)arg1;
- (void)selectGraphic:(id)arg1;
- (BOOL)graphicIsSelected:(id)arg1;
- (id)orderedSelectedGraphics;
- (id)selectedGraphics;
- (id)_selectedGraphics;
- (void)_userSelectGraphic:(id)arg1;
- (BOOL)_userCanSelectGraphic:(id)arg1;
- (BOOL)_userCanChangeSelection;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_disableSelectionPosting;
- (void)invalidateAllGraphics;
- (void)invalidateSelectedGraphicsInRect:(struct CGRect)arg1;
- (void)invalidateGraphics:(id)arg1;
- (void)invalidateGraphic:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)_graphLayouterMenuItemAction:(id)arg1;
- (void)layoutGraphicsUsingGraphLayouterWithIdentifier:(id)arg1;
- (void)sizeToFit;
- (void)_superviewFrameDidChange:(id)arg1;
- (void)tile;
- (BOOL)autoresizesCanvas;
- (void)setAutoresizesCanvas:(BOOL)arg1;
- (struct CGRect)canvasBounds;
- (struct CGRect)paperBounds;
- (struct CGRect)documentBounds;
- (struct CGSize)pageSize;
- (struct CGRect)graphicsBounds;
- (struct CGRect)drawingBounds;
- (struct CGRect)drawingBoundsWithMask:(long long)arg1;
- (void)_zoomPopUpButtonAction:(id)arg1;
- (id)zoomPopUpButton;
- (BOOL)diagramZoomToFit;
- (double)_zoomFactorToFit;
- (BOOL)diagramZoomOut;
- (BOOL)diagramZoomIn;
- (double)zoomFactor;
- (void)setZoomFactor:(double)arg1;
- (void)setZoomFactor:(double)arg1 animate:(BOOL)arg2;
- (double)_maxZoomFactor;
- (double)_minZoomFactor;
- (id)zoomFactors;
- (id)printInfo;
- (id)diagramStorage;
- (void)setDiagramStorage:(id)arg1;
- (id)diagramController;
- (void)setDiagramController:(id)arg1;
- (void)_currentDiagramToolDidChange:(id)arg1;
- (id)diagramToolManager;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_invalidateToolTip;
- (void)finalize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)dragSelectionWithEvent:(id)arg1 offset:(struct CGSize)arg2 slideBack:(BOOL)arg3;
- (id)dragImageForSelectionWithEvent:(id)arg1 origin:(struct CGPoint *)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)cleanUpAfterDragOperation;
- (unsigned long long)dragOperationForDraggingInfo:(id)arg1 type:(id)arg2;
- (id)acceptableDragTypes;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleHiddenGraphicsShown:(id)arg1;
- (void)diagramZoomToFit:(id)arg1;
- (void)diagramZoomOut:(id)arg1;
- (void)diagramZoomIn:(id)arg1;
- (void)toggleRuler:(id)arg1;
- (void)togglePageBreaksShown:(id)arg1;
- (void)toggleGridShown:(id)arg1;
- (void)toggleSnapsToGrid:(id)arg1;
- (void)layoutGraphicsConcentrically:(id)arg1;
- (void)layoutGraphicsHierarchically:(id)arg1;
- (void)rollDownAllCompartments:(id)arg1;
- (void)rollUpAllCompartments:(id)arg1;
- (void)collapseAllCompartments:(id)arg1;
- (void)expandAllCompartments:(id)arg1;
- (void)flipHorizontally:(id)arg1;
- (void)flipVertically:(id)arg1;
- (void)sizeToFit:(id)arg1;
- (void)makeSameHeight:(id)arg1;
- (void)makeSameWidth:(id)arg1;
- (void)alignCentersHorizontallyInContainer:(id)arg1;
- (void)alignCentersVerticallyInContainer:(id)arg1;
- (void)alignHorizontalCenters:(id)arg1;
- (void)alignVerticalCenters:(id)arg1;
- (void)alignRightEdges:(id)arg1;
- (void)alignLeftEdges:(id)arg1;
- (void)alignBottomEdges:(id)arg1;
- (void)alignTopEdges:(id)arg1;
- (void)unlock:(id)arg1;
- (void)lock:(id)arg1;
- (void)sendToBack:(id)arg1;
- (void)bringToFront:(id)arg1;
- (void)deselectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)_scrollVertically:(double)arg1;
- (double)_verticalDistanceForLineScroll;
- (double)_verticalDistanceForPageScroll;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)_userMoveSelectedGraphicsRelativeToPoint:(struct CGPoint)arg1;
- (void)keyDown:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)insertText:(id)arg1;
- (struct CGRect)rectForPage:(long long)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;

@end

@interface XDDiagramZoomPopUpButton : NSPopUpButton
{
    XDDiagramView *_diagramView;
}

+ (void)initialize;
- (void)_diagramViewDidChangeZoomFactor:(id)arg1;
- (id)diagramView;
- (void)_setDiagramView:(id)arg1;
- (void)_updatePopUpButtonItems;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDDrawingStyle : NSObject <NSCoding, NSCopying>
{
    XDGraphic *_graphic;
}

+ (id)defaultDrawingStyle;
+ (void)initialize;
- (void)drawInView:(id)arg1;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)undoManager;
- (id)graphic;
- (void)_setGraphic:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDFillStyle : XDDrawingStyle
{
    NSColor *_fillColor;
    double _gradientAngle;
    NSColor *_gradientColor;
    struct _XDFillStyleFlags _fsFlags;
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (void)drawGraphic:(id)arg1 inView:(id)arg2 usingFillType:(int)arg3;
- (id)gradientColor;
- (void)setGradientColor:(id)arg1;
- (double)gradientAngle;
- (void)setGradientAngle:(double)arg1;
- (int)fillType;
- (void)setFillType:(int)arg1;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
- (BOOL)drawsFill;
- (void)setDrawsFill:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDGraphic : NSObject <NSCoding, XDGraphNode>
{
    id _delegate;
    XDDiagramStorage *_diagramStorage;
    struct CGRect _bounds;
    struct CGRect _originalBounds;
    struct CGRect _cachedDrawingBounds;
    long long _cachedDrawingBoundsMask;
    struct CGRect _cachedHitTestBounds;
    unsigned long long _lastChangeMask;
    struct CGSize _minSize;
    id _contents;
    double _contentsPadding;
    NSMutableArray *_connections;
    NSMapTable *_drawingStyleByClass;
    id _objectValue;
    int _trackKnobPosition;
    XDGraphicContentsEditor *_contentsEditor;
    unsigned long long _drawingMask;
    XDGraphicID *_uniqueID;
    struct _XDGraphicFlags _gFlags;
    void *_graphicReserved;
}

+ (BOOL)_containsRemovableGraphicInGraphics:(id)arg1;
+ (BOOL)_containsImmovableGraphicInGraphics:(id)arg1;
+ (BOOL)_containsUnlockedGraphicInGraphics:(id)arg1;
+ (BOOL)_containsLockedGraphicInGraphics:(id)arg1;
+ (double)_defaultContentsPadding;
+ (struct CGSize)_defaultMinSize;
+ (id)defaultGraphicContentsEditor;
+ (Class)defaultGraphicContentsEditorClass;
+ (Class)defaultHighlightStyleClass;
+ (Class)defaultShadowStyleClass;
+ (Class)defaultStrokeStyleClass;
+ (Class)defaultFillStyleClass;
+ (Class)defaultAuxiliaryStorageClass;
+ (int)flipKnobPosition:(int)arg1;
+ (int)flipKnobPositionHorizontally:(int)arg1;
+ (int)flipKnobPositionVertically:(int)arg1;
+ (id)defaultTrackKnobImage;
+ (id)_defaultHighlightedDisabledKnobImage;
+ (id)defaultDisabledKnobImage;
+ (id)_defaultHighlightedKnobImage;
+ (id)defaultKnobImage;
+ (id)hiddenGraphicsTintColorWithColor:(id)arg1;
+ (id)hiddenGraphicsTint;
+ (void)initialize;
- (id)uniqueID;
- (void)_setUniqueID:(id)arg1;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (BOOL)acceptsMouseMoveEvents;
- (void)setAcceptsMouseMovedEvents:(BOOL)arg1;
- (BOOL)isLayoutable;
- (void)setLayoutable:(BOOL)arg1;
- (BOOL)isRemovable;
- (void)setRemovable:(BOOL)arg1;
- (BOOL)isResizable;
- (void)setResizable:(BOOL)arg1;
- (BOOL)mouseDown:(id)arg1 inView:(id)arg2;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingWithEvent:(id)arg1 inView:(id)arg2;
- (id)contentsEditor;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (int)resizeByMovingKnob:(int)arg1 toPoint:(struct CGPoint)arg2;
- (id)cursorForKnobPosition:(int)arg1;
- (void)moveRelativeToPoint:(struct CGPoint)arg1;
- (BOOL)isMovable;
- (void)setMovable:(BOOL)arg1;
- (void)endBoundsManipulation;
- (BOOL)isManipulatingBounds;
- (void)beginBoundsManipulation;
- (void)processBoundsManipulation;
- (BOOL)isHitByPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)isHitByPoint:(struct CGPoint)arg1 inScale:(double)arg2;
- (BOOL)intersectsRect:(struct CGRect)arg1;
- (int)knobUnderPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (int)knobUnderPoint:(struct CGPoint)arg1 inScale:(double)arg2;
- (void)drawInView:(id)arg1;
- (id)_drawingCacheForDiagramView:(id)arg1;
- (void)drawHighlightInView:(id)arg1;
- (void)drawShadowInView:(id)arg1;
- (void)drawInteriorInView:(id)arg1;
- (void)drawStrokeInView:(id)arg1;
- (void)drawFillInView:(id)arg1;
- (void)drawFillInView:(id)arg1 usingFillType:(int)arg2;
- (void)drawKnobsInView:(id)arg1;
- (void)drawTrackKnobAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawKnobAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)_drawKnobImage:(id)arg1 atPoint:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)_shouldDrawFocusRingInView:(id)arg1;
- (BOOL)_shouldUseHighlightColorInView:(id)arg1;
- (BOOL)canDrawInView:(id)arg1;
- (unsigned long long)drawingMask;
- (void)setDrawingMask:(unsigned long long)arg1;
- (int)trackKnobPosition;
- (void)setTrackKnobPosition:(int)arg1;
- (void)graphicWillBeDeselectedInDiagramView:(id)arg1;
- (void)graphicWasSelectedInDiagramView:(id)arg1;
- (id)highlightPath;
- (id)hitTestPath;
- (id)strokePath;
- (id)fillPath;
- (struct CGRect)hitTestBounds;
- (struct CGRect)drawingBounds;
- (struct CGRect)drawingBoundsWithMask:(long long)arg1;
- (struct CGSize)drawingBoundsMargin;
- (id)trackKnobImage;
- (void)setTrackKnobImage:(id)arg1;
- (id)_highlightedDisabledKnobImage;
- (id)disabledKnobImage;
- (void)setDisabledKnobImage:(id)arg1;
- (id)_highlightedKnobImage;
- (id)knobImage;
- (void)setKnobImage:(id)arg1;
- (unsigned long long)knobPositionMask;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (BOOL)isDrawingCacheEnabled;
- (void)disableDrawingCache;
- (void)enableDrawingCache;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (struct CGPoint)magnetLocationForConnection:(id)arg1;
- (BOOL)canConnectAtPoint:(struct CGPoint)arg1;
- (struct CGPoint)crossingPointForConnection:(id)arg1;
- (void)invalidateAllConnections;
- (void)invalidateConnections:(id)arg1;
- (void)invalidateConnection:(id)arg1;
- (void)removeAllConnections;
- (void)removeConnectionAtIndex:(long long)arg1;
- (void)removeConnection:(id)arg1;
- (void)insertConnection:(id)arg1 atIndex:(long long)arg2;
- (void)addConnection:(id)arg1;
- (id)_connections;
- (id)connections;
- (BOOL)acceptsConnections;
- (void)setAcceptsConnections:(BOOL)arg1;
- (BOOL)isLocked;
- (void)setLocked:(BOOL)arg1;
- (BOOL)isFlippedVertically;
- (void)setFlippedVertically:(BOOL)arg1;
- (BOOL)isFlippedHorizontally;
- (void)setFlippedHorizontally:(BOOL)arg1;
- (void)flipVertically;
- (void)flipHorizontally;
- (BOOL)heightTracksContents;
- (void)setHeightTracksContents:(BOOL)arg1;
- (BOOL)widthTracksContents;
- (void)setWidthTracksContents:(BOOL)arg1;
- (BOOL)autoresizesContentsToFit;
- (void)setAutoresizesContentsToFit:(BOOL)arg1;
- (BOOL)sizeToFit;
- (BOOL)sizeToFitWithTrackingMask:(unsigned long long)arg1;
- (BOOL)isHidden;
- (void)setHidden:(BOOL)arg1;
- (id)shadowColor;
- (void)setShadowColor:(id)arg1;
- (double)shadowBlurRadius;
- (void)setShadowBlurRadius:(double)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowOffset:(struct CGSize)arg1;
- (BOOL)drawsShadow;
- (void)setDrawsShadow:(BOOL)arg1;
- (id)strokeColor;
- (void)setStrokeColor:(id)arg1;
- (id)strokeLineDashPattern;
- (void)setStrokeLineDashPattern:(id)arg1;
- (unsigned long long)strokeLineJoinStyle;
- (void)setStrokeLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)strokeLineCapStyle;
- (void)setStrokeLineCapStyle:(unsigned long long)arg1;
- (double)_strokeLineWidthForDrawing;
- (double)strokeLineWidth;
- (void)setStrokeLineWidth:(double)arg1;
- (BOOL)strokeShouldAntialias;
- (void)setStrokeShouldAntialias:(BOOL)arg1;
- (BOOL)drawsStroke;
- (void)setDrawsStroke:(BOOL)arg1;
- (id)gradientColor;
- (void)setGradientColor:(id)arg1;
- (double)gradientAngle;
- (void)setGradientAngle:(double)arg1;
- (int)fillType;
- (void)setFillType:(int)arg1;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
- (BOOL)drawsFill;
- (void)setDrawsFill:(BOOL)arg1;
- (id)allDrawingStyles;
- (id)_drawingStyleForClass:(Class)arg1;
- (void)_setDrawingStyle:(id)arg1 forClass:(Class)arg2;
- (id)_drawingStyleOrDefaultForClass:(Class)arg1;
- (int)contentsVerticalAlignment;
- (void)setContentsVerticalAlignment:(int)arg1;
- (unsigned long long)contentsHorizontalAlignment;
- (void)setContentsHorizontalAlignment:(unsigned long long)arg1;
- (double)contentsPadding;
- (void)setContentsPadding:(double)arg1;
- (struct CGRect)contentsBounds;
- (BOOL)drawsContents;
- (void)setDrawsContents:(BOOL)arg1;
- (id)contents;
- (void)setContents:(id)arg1;
- (BOOL)canCacheDrawingResult;
- (BOOL)canAcceptConnections;
- (BOOL)canLayout;
- (BOOL)canRemove;
- (BOOL)canResize;
- (BOOL)canEdit;
- (BOOL)canMove;
- (BOOL)canLock;
- (BOOL)canFlipVertically;
- (BOOL)canFlipHorizontally;
- (BOOL)canHide;
- (BOOL)canDrawShadow;
- (BOOL)canDrawStroke;
- (BOOL)canDrawFill;
- (BOOL)canDrawContents;
- (struct CGSize)minSize;
- (void)setMinSize:(struct CGSize)arg1;
- (struct CGPoint)cascadeTopLeftFromPoint:(struct CGPoint)arg1;
- (struct CGPoint)centerOfBounds;
- (void)setCenterOfBounds:(struct CGPoint)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (struct CGRect)bounds;
- (void)setBounds:(struct CGRect)arg1;
- (void)didChange;
- (void)didChange:(unsigned long long)arg1;
- (void)invalidateAllDrawingCaches;
- (void)invalidateDrawingCacheInView:(id)arg1;
- (id)undoManager;
- (id)diagramStorage;
- (void)_setDiagramStorage:(id)arg1;
- (id)delegate;
- (id)_delegate;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface XDGraphicAuxiliaryStorage : NSObject
{
    id _graphic;
    XDDiagramView *_diagramView;
}

+ (void)initialize;
- (id)diagramView;
- (void)_setDiagramView:(id)arg1;
- (id)graphic;
- (void)_setGraphic:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithGraphic:(id)arg1 diagramView:(id)arg2;

@end

@interface XDGraphicContentsEditor : NSObject
{
    XDDiagramView *_diagramView;
}

+ (void)initialize;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (id)diagramView;
- (void)_setDiagramView:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDGraphicFinder : NSObject
{
    XDTableView *_tableView;
    NSSearchField *_searchField;
}

+ (void)initialize;
- (void)_searchFieldAction:(id)arg1;
- (void)_tableViewAction:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDGraphicID : NSObject <NSCoding, NSCopying>
{
    struct __CFUUID *_uuid;
}

+ (void)initialize;
- (id)uuidString;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithUUIDString:(id)arg1;

@end

@interface XDGraphicLayouter : XDGraphLayouter
{
    XDDiagramView *_diagramView;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)layoutGraphics:(id)arg1 inView:(id)arg2;
- (id)diagramView;
- (void)endLayouting;
- (void)beginLayouting;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDGraphicsLayer : NSObject <NSCoding>
{
    XDDiagramStorage *_diagramStorage;
    NSString *_title;
}

+ (void)initialize;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)diagramStorage;
- (void)_setDiagramStorage:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDGraphicTextContainer : NSTextContainer
{
    id _delegate;
    struct _XDGraphicTextContainerFlags _gtcFlags;
}

+ (void)initialize;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 sweepDirection:(unsigned long long)arg2 movementDirection:(unsigned long long)arg3 remainingRect:(struct CGRect *)arg4;
- (BOOL)isSimpleRectangularTextContainer;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface XDGraphicTextEditor : XDGraphicContentsEditor <NSTextViewDelegate>
{
    NSTextView *_textView;
    NSTextContainer *_textContainer;
    NSLayoutManager *_layoutManager;
}

+ (Class)defaultTextStorageClass;
+ (Class)defaultLayoutManagerClass;
+ (Class)defaultTextContainerClass;
+ (Class)defaultTextViewClass;
+ (void)initialize;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)abortEditing;
- (void)endEditing;
- (void)startEditingGraphic:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface XDGraphicTool : XDCreationTool
{
}

+ (Class)graphicClass;
+ (id)defaultIdentifier;
+ (void)initialize;
- (id)imageForDiagramToolbarItem;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDGraphLayouter : NSObject <XDComponentIdentifying>
{
    NSString *_identifier;
    NSMutableArray *_graphNodes;
    NSMutableArray *_graphEdges;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)layoutGraph;
- (void)endLayouting;
- (void)processLayouting;
- (void)beginLayouting;
- (void)removeAllGraphEdges;
- (void)removeGraphEdgeAtIndex:(long long)arg1;
- (void)removeGraphEdge:(id)arg1;
- (void)insertGraphEdge:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphEdge:(id)arg1;
- (id)graphEdges;
- (void)removeAllGraphNodes;
- (void)removeGraphNodeAtIndex:(long long)arg1;
- (void)removeGraphNode:(id)arg1;
- (void)insertGraphNode:(id)arg1 atIndex:(long long)arg2;
- (void)addGraphNode:(id)arg1;
- (id)graphNodes;
- (SEL)action;
- (id)target;
- (unsigned long long)keyEquivalentModifierMask;
- (id)keyEquivalent;
- (id)label;
- (id)identifier;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDGraphLayouterManager : XDComponentManager
{
}

+ (BOOL)sharedGraphLayouterManagerExists;
+ (id)sharedGraphLayouterManager;
+ (Class)_sharedGraphLayouterManagerClass;
+ (id)componentFileExtension;
+ (void)initialize;

@end

@interface XDHighlightStyle : XDDrawingStyle
{
    NSColor *_highlightColor;
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)highlightColor;
- (void)setHighlightColor:(id)arg1;
- (id)defaultColor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDLineDashPattern : NSObject <NSCoding, NSCopying>
{
    NSString *_name;
    double *_pattern;
    long long _count;
    double _phase;
    double _lastCachedLineWidth;
    double *_lastCachedPattern;
}

+ (id)lineDashPatternWithLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
+ (id)registeredLineDashPatterns;
+ (id)registeredLineDashPatternForIdentifier:(id)arg1;
+ (void)unregisterLineDashPatternForIdentifier:(id)arg1;
+ (void)registerLineDashPattern:(id)arg1 forIdentifier:(id)arg2;
+ (void)initialize;
- (const double *)lineDashPatternForLineWidth:(double)arg1;
- (double)lineDashPhase;
- (long long)lineDashPatternCount;
- (const double *)lineDashPattern;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (id)lineDashPatternName;
- (void)setLineDashPatternName:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToLineDashPattern:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;

@end

@interface XDLineEnd : NSObject <NSCoding, NSCopying>
{
    XDGraphic *_graphic;
    NSString *_identifier;
    NSString *_name;
    struct CGPoint _origin;
    struct CGPoint _slope;
    double _gap;
    double _width;
    double _lineGap;
    NSBezierPath *_bezierPath;
    NSAffineTransform *_cachedTransform;
    NSBezierPath *_cachedBezierPath;
    struct _XDLineEndFlags _leFlags;
}

+ (id)lineEndWithIdentifier:(id)arg1;
+ (void)unregisterLineEnd:(id)arg1;
+ (void)registerLineEnd:(id)arg1;
+ (id)registeredLineEnds;
+ (void)initialize;
- (struct CGRect)drawingBounds;
- (struct CGRect)bounds;
- (id)bezierPath;
- (void)setBezierPath:(id)arg1;
- (id)transform;
- (struct CGPoint)lineOrigin;
- (double)lineGap;
- (void)setLineGap:(double)arg1;
- (double)width;
- (void)setWidth:(double)arg1;
- (double)gap;
- (void)setGap:(double)arg1;
- (BOOL)isFilled;
- (void)setFilled:(BOOL)arg1;
- (struct CGPoint)slope;
- (void)setSlope:(struct CGPoint)arg1;
- (struct CGPoint)origin;
- (void)setOrigin:(struct CGPoint)arg1;
- (void)_invalidateCache;
- (id)displayName;
- (id)name;
- (void)setName:(id)arg1;
- (id)identifier;
- (void)_setIdentifier:(id)arg1;
- (id)graphic;
- (void)setGraphic:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDLineGraphic : XDGraphic <XDGraphEdge>
{
    XDLineEnd *_headLineEnd;
    XDLineEnd *_tailLineEnd;
    XDConnection *_headConnection;
    XDConnection *_tailConnection;
    struct CGSize _headStemSize;
    struct CGSize _tailStemSize;
    double _orthogonalPivotPosition;
    struct _XDLineGraphicFlags _lgFlags;
}

+ (void)initialize;
- (id)cursorForKnobPosition:(int)arg1;
- (BOOL)isLayoutable;
- (BOOL)isMovable;
- (BOOL)isHitByPoint:(struct CGPoint)arg1 inScale:(double)arg2;
- (BOOL)intersectsRect:(struct CGRect)arg1;
- (void)drawStrokeInView:(id)arg1;
- (id)highlightPath;
- (id)hitTestPath;
- (id)strokePath;
- (id)_bezierPathWithHeadLineEnd:(id)arg1 tailLineEnd:(id)arg2 appendLineEndPaths:(BOOL)arg3;
- (id)fillPath;
- (void)connectionDidMove:(id)arg1;
- (void)_connectionDidMove:(id)arg1;
- (struct CGPoint)crossingPointForConnection:(id)arg1;
- (unsigned long long)knobPositionMask;
- (BOOL)canCacheDrawingResult;
- (BOOL)canEdit;
- (BOOL)canDrawFill;
- (BOOL)canDrawContents;
- (id)tailGraphNode;
- (id)headGraphNode;
- (id)tailGraphic;
- (id)headGraphic;
- (id)tailConnection;
- (void)setTailConnection:(id)arg1;
- (id)headConnection;
- (void)setHeadConnection:(id)arg1;
- (void)flipVertically;
- (void)flipHorizontally;
- (struct CGRect)hitTestBounds;
- (struct CGSize)drawingBoundsMargin;
- (void)setBounds:(struct CGRect)arg1;
- (id)tailLineEnd;
- (void)setTailLineEnd:(id)arg1;
- (id)headLineEnd;
- (void)setHeadLineEnd:(id)arg1;
- (void)_validateLineEnds;
- (struct CGPoint)_tailSlope;
- (struct CGPoint)_headSlope;
- (double)orthogonalPivotPosition;
- (void)setOrthogonalPivotPosition:(double)arg1;
- (struct CGSize)tailStemSize;
- (void)setTailStemSize:(struct CGSize)arg1;
- (struct CGSize)headStemSize;
- (void)setHeadStemSize:(struct CGSize)arg1;
- (int)lineType;
- (void)setLineType:(int)arg1;
- (int)tailKnobPosition;
- (int)headKnobPosition;
- (struct CGPoint)tailPoint;
- (struct CGPoint)headPoint;
- (void)_setDiagramStorage:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDLineGraphicTool : XDCreationTool
{
    struct _XDLineGraphicToolFlags _lgtFlags;
}

+ (Class)graphicClass;
+ (id)defaultIdentifier;
+ (void)initialize;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (void)willAddLineInDiagramView:(id)arg1;
- (BOOL)shouldAddLineInDiagramView:(id)arg1;
- (void)modifierFlagsChangedTo:(unsigned long long)arg1 inDiagramView:(id)arg2;
- (void)willSetLineHeadGraphic:(id)arg1 inDiagramView:(id)arg2;
- (BOOL)shouldSetLineHeadGraphic:(id)arg1 inDiagramView:(id)arg2;
- (void)willStartLineWithTailGraphic:(id)arg1 inDiagramView:(id)arg2;
- (BOOL)shouldStartLineWithTailGraphic:(id)arg1 inDiagramView:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)imageForDiagramToolbarItem;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDMagnet : NSObject <NSCoding, NSCopying>
{
    struct CGPoint _location;
    void *_magnetReserved;
}

+ (id)_defaultHighlightedMagnetImage;
+ (id)defaultMagnetImage;
+ (void)initialize;
- (id)_highlightedMagnetImage;
- (id)magnetImage;
- (void)setMagnetImage:(id)arg1;
- (struct CGPoint)location;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithLocation:(struct CGPoint)arg1;

@end

@interface XDOutlineView : NSOutlineView
{
    id _tableColumnProvider;
    NSMenu *_tableHeaderContextMenu;
    struct _XDOutlineViewFlags _xdOVFlags;
}

+ (void)initialize;
- (void)keyDown:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_tableHeaderContextMenuItemAction:(id)arg1;
- (void)showAllTableColumns:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)optionClickEditsAnyCell;
- (void)setOpetionClickEditsAnyCell:(BOOL)arg1;
- (BOOL)optionClickCausesEditing;
- (void)setOptionClickCausesEditing:(BOOL)arg1;
- (void)reloadTableColumns;
- (void)_synchronizeTableHeaderContextMenu;
- (id)_tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnProvider;
- (void)setTableColumnProvider:(id)arg1;
- (void)_tableColumnProviderRemoveTableColumn:(id)arg1;
- (void)_tableColumnProviderAddTableColumn:(id)arg1;
- (id)_tableColumnProviderAllowedTableColumnIdentifers;
- (id)_tableColumnProviderDefaultTableColumnIdentifiers;
- (id)_tableColumnProviderOutlineTableColumnIdentifier;
- (void)insertTableColumn:(id)arg1 atIndex:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface XDPMImporter : NSObject
{
    NSMutableDictionary *_allClasses;
    NSMutableDictionary *_allEntities;
    NSMutableDictionary *_allPFEntities;
}

+ (id)importMOMAtPath:(id)arg1 intoModel:(id)arg2;
- (id)importMOM:(id)arg1 intoModel:(id)arg2;
- (id)init;

@end

@interface XDScrollView : NSScrollView
{
    NSMutableArray *_vScrollerViews;
    NSMutableArray *_hScrollerViews;
    double _vScrollerMargin;
    double _hScrollerMargin;
    NSView *_vScrollerAccessoryView;
    NSView *_hScrollerAccessoryView;
    double _vScrollerAccessoryViewThickness;
    double _hScrollerAccessoryViewThickness;
    struct _XDScrollViewFlags _svFlags;
}

+ (double)defaultReservedThicknessForHorizontalScrollerAccessoryView;
+ (void)setDefaultReservedThicknessForHorizontalScrollerAccessoryView:(double)arg1;
+ (double)defaultReservedThicknessForVerticalScrollerAccessoryView;
+ (void)setDefaultReservedThicknessForVerticalScrollerAccessoryView:(double)arg1;
+ (double)defaultHorizontalScrollerMargin;
+ (void)setDefaultHorizontalScrollerMargin:(double)arg1;
+ (double)defaultVerticalScrollerMargin;
+ (void)setDefaultVerticalScrollerMargin:(double)arg1;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawBorderForHorizontalScrollerViews;
- (void)_drawBorderForVerticalScrollerViews;
- (void)tile;
- (void)tileHorizontalScrollerViews;
- (void)tileVerticalScrollerViews;
- (double)reservedThicknessForHorizontalScrollerAccessoryView;
- (void)setReservedThicknessForHorizontalScrollerAccessoryView:(double)arg1;
- (double)reservedThicknessForVerticalScrollerAccessoryView;
- (void)setReservedThicknessForVerticalScrollerAccessoryView:(double)arg1;
- (id)horizontalScrollerAccessoryView;
- (void)setHorizontalScrollerAccessoryView:(id)arg1;
- (id)verticalScrollerAccessoryView;
- (void)setVerticalScrollerAccessoryView:(id)arg1;
- (int)_horizontalScrollerAccessoryViewPosition;
- (int)horizontalScrollerAccessoryViewPosition;
- (void)setHorizontalScrollerAccessoryViewPosition:(int)arg1;
- (int)_verticalScrollerAccessorViewPosition;
- (int)verticalScrollerAccessoryViewPosition;
- (void)setVerticalScrollerAccessoryViewPosition:(int)arg1;
- (BOOL)hasHorizontalScrollerAccessoryView;
- (void)setHasHorizontalScrollerAccessoryView:(BOOL)arg1;
- (BOOL)hasVerticalScrollerAccessoryView;
- (void)setHasVerticalScrollerAccessoryView:(BOOL)arg1;
- (void)removeAllHorizontalScrollerViews;
- (void)removeHorizontalScrollerViewAtIndex:(long long)arg1;
- (void)removeHorizontalScrollerView:(id)arg1;
- (void)insertHorizontalScrollerView:(id)arg1 atIndex:(long long)arg2;
- (void)addHorizontalScrollerView:(id)arg1;
- (void)removeAllVerticalScrollerViews;
- (void)removeVerticalScrollerViewAtIndex:(long long)arg1;
- (void)removeVerticalScrollerView:(id)arg1;
- (void)insertVerticalScrollerView:(id)arg1 atIndex:(long long)arg2;
- (void)addVerticalScrollerView:(id)arg1;
- (id)_horizontalScrollerViews;
- (id)_verticalScrollerViews;
- (id)horizontalScrollerViews;
- (id)verticalScrollerViews;
- (int)_horizontalScrollerViewsPosition;
- (int)horizontalScrollerViewsPosition;
- (void)setHorizontalScrollerViewsPosition:(int)arg1;
- (int)_verticalScrollerViewsPosition;
- (int)verticalScrollerViewsPosition;
- (void)setVerticalScrollerViewsPosition:(int)arg1;
- (BOOL)hasHorizontalScrollerViews;
- (void)setHasHorizontalScrollerViews:(BOOL)arg1;
- (BOOL)hasVerticalScrollerViews;
- (void)setHasVerticalScrollerViews:(BOOL)arg1;
- (double)horizontalScrollerMargin;
- (void)setHorizontalScrollerMargin:(double)arg1;
- (double)verticalScrollerMargin;
- (void)setVerticalScrollerMargin:(double)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XDSelectionTool : XDDiagramTool
{
    XDGraphic *_mouseOverGraphic;
    struct CGRect _rubberbandRect;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (void)drawRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (BOOL)dragSelectedGraphicsWithEvent:(id)arg1 inView:(id)arg2;
- (void)rubberbandSelectionWithEvent:(id)arg1 inView:(id)arg2;
- (BOOL)moveSelectedGraphicsWithEvent:(id)arg1 inView:(id)arg2;
- (void)trackKnob:(int)arg1 ofGraphic:(id)arg2 withEvent:(id)arg3 inView:(id)arg4;
- (void)mouseMoved:(id)arg1 inView:(id)arg2;
- (void)_diagramStorageWillRemoveGraphic:(id)arg1;
- (void)resignCurrentDiagramTool;
- (void)becomeCurrentDiagramTool;
- (id)imageForDiagramToolbarItem;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDShadowStyle : XDDrawingStyle
{
    NSShadow *_shadow;
    struct _XDShadowStyleFlags _ssFlags;
}

+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)shadowColor;
- (void)setShadowColor:(id)arg1;
- (double)shadowBlurRadius;
- (void)setShadowBlurRadius:(double)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowOffset:(struct CGSize)arg1;
- (BOOL)drawsShadow;
- (void)setDrawsShadow:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDShape : NSObject <NSCopying, XDComponentIdentifying>
{
    NSString *_identifier;
    XDGraphic *_graphic;
    NSString *_name;
    NSBezierPath *_fillPath;
    NSBezierPath *_strokePath;
}

+ (id)defaultIdentifier;
+ (void)initialize;
- (id)strokePath;
- (void)setStrokePath:(id)arg1;
- (id)fillPath;
- (void)setFillPath:(id)arg1;
- (id)displayName;
- (id)name;
- (void)setName:(id)arg1;
- (id)graphic;
- (void)setGraphic:(id)arg1;
- (id)identifier;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XDShapedGraphic : XDGraphic
{
    XDShape *_shape;
}

+ (struct CGSize)_defaultMinSize;
+ (void)initialize;
- (struct CGRect)textContainer:(id)arg1 lineFragmentRectForProposedRect:(struct CGRect)arg2 sweepDirection:(unsigned long long)arg3 movementDirection:(unsigned long long)arg4 remainingRect:(struct CGRect *)arg5;
- (id)strokePath;
- (id)fillPath;
- (id)shape;
- (void)setShape:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XDShapeManager : XDComponentManager
{
}

+ (BOOL)sharedShapeManagerExists;
+ (id)sharedShapeManager;
+ (Class)_sharedShapeManagerClass;
+ (void)unregisterShape:(id)arg1;
+ (void)registerShape:(id)arg1;
+ (id)registeredShapes;
+ (void)initialize;
- (id)componentWithIdentifier:(id)arg1;

@end

@interface XDStrokeStyle : XDDrawingStyle
{
    double _lineWidth;
    XDLineDashPattern *_lineDashPattern;
    NSColor *_strokeColor;
    struct _XDStrokeStyleFlags _ssFlags;
}

+ (id)defaultStrokeColor;
+ (id)defaultLineDashPattern;
+ (void)initialize;
- (void)drawGraphic:(id)arg1 inView:(id)arg2;
- (id)strokeColor;
- (void)setStrokeColor:(id)arg1;
- (id)lineDashPattern;
- (void)setLineDashPattern:(id)arg1;
- (unsigned long long)lineJoinStyle;
- (void)setLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)lineCapStyle;
- (void)setLineCapStyle:(unsigned long long)arg1;
- (double)lineWidth;
- (void)setLineWidth:(double)arg1;
- (BOOL)shouldAntialias;
- (void)setShouldAntialias:(BOOL)arg1;
- (BOOL)drawsStroke;
- (void)setDrawsStroke:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1;

@end

@interface XDTableView : NSTableView
{
    id _tableColumnProvider;
    NSMenu *_tableHeaderContextMenu;
    BOOL _forwardsScrollWheelToDelegate;
    struct _XDTableViewFlags _xdTVFlags;
}

+ (void)initialize;
@property BOOL forwardsScrollWheelToDelegate; // @synthesize forwardsScrollWheelToDelegate=_forwardsScrollWheelToDelegate;
- (BOOL)becomeFirstResponder;
- (void)keyDown:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_tableHeaderContextMenuItemAction:(id)arg1;
- (void)showAllTableColumns:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)optionClickEditsAnyCell;
- (void)setOpetionClickEditsAnyCell:(BOOL)arg1;
- (BOOL)optionClickCausesEditing;
- (void)setOptionClickCausesEditing:(BOOL)arg1;
- (void)reloadTableColumns;
- (void)_synchronizeTableHeaderContextMenu;
- (id)_tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnWithIdentifier:(id)arg1;
- (id)tableColumnProvider;
- (void)setTableColumnProvider:(id)arg1;
- (void)_tableColumnProviderRemoveTableColumn:(id)arg1;
- (void)_tableColumnProviderAddTableColumn:(id)arg1;
- (id)_tableColumnProviderAllowedTableColumnIdentifers;
- (id)_tableColumnProviderDefaultTableColumnIdentifiers;
- (void)insertTableColumn:(id)arg1 atIndex:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)loadStateFromDictionary:(id)arg1;
- (id)stateDictionary;

@end

@interface XDTableHeaderView : NSTableHeaderView
{
    BOOL _drawsEdgeSeparatorLines;
}

@property BOOL drawsEdgeSeparatorLines; // @synthesize drawsEdgeSeparatorLines=_drawsEdgeSeparatorLines;
- (BOOL)_drawingEndSeparator;
- (void)scrollWheel:(id)arg1;

@end

@interface IDEDMNavigableItem : IDEKeyDrivenNavigableItem
{
    int _representedObjectImageCapability;
}

+ (id)keyPathsForValuesAffectingName;
- (unsigned long long)indexOfChildItemForIdentifier:(id)arg1;
- (id)identifierForChildItem:(id)arg1;
- (id)image;
- (id)contentDocumentLocation;
- (Class)documentLocationClass;
- (id)name;

@end

@interface IDEDataModelEntitySyncInspectorController : IDEDataModelInspectorController <IDEInspectorAccessibilitySupport>
{
}

+ (id)keyPathsForValuesAffectingParentRelationship;
+ (id)keyPathsForValuesAffectingPossibleParentRelationships;
+ (id)keyPathsForValuesAffectingProposedDataClassNames;
@property(retain) CDMRelationship *parentRelationship;
@property(readonly) NSArray *possibleParentRelationships;
@property(readonly) NSArray *proposedDataClassNames;
- (id)activeEntities;
@property(readonly) BOOL entityParentRelationshipsPopupNotEmpty;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;

@end

@interface IDEDataModelPropertySyncInspectorController : IDEInspectorViewController
{
}

@end

@interface IDEDMArrayController : NSArrayController
{
    id <IDEDMArrayControllerDelegate> _delegate;
}

@property(retain) id <IDEDMArrayControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)rearrangeObjects;

@end

@interface IDEDataModelInspectorController : IDEInspectorViewController
{
}

+ (id)keyPathsForValuesAffectingSelectedObjects;
+ (id)keyPathsForValuesAffectingSelectedModel;
@property(readonly) NSArray *selectedObjects;
@property(readonly) CDMModel *selectedModel;

@end

@interface IDEDMEditorController : IDEViewController <DVTStatefulObject>
{
    IDEDMSubViewControllerStateManager *_subViewControllerStateManager;
}

- (void)invalidate;
- (void)takeFocus;
- (void)setStateToken:(id)arg1;
@property(readonly) NSArray *allSubViewControllers;
@property(readonly) NSArray *selection;
@property(readonly) NSString *identifier;
- (void)loadView;
- (id)nibBundle;

@end

@interface IDEDMSubViewControllerStateManager : NSObject
{
    DVTStateToken *_token;
    IDEDMEditorController *_parent;
}

@property(readonly) DVTStateToken *token; // @synthesize token=_token;
- (id)initWithToken:(id)arg1 parent:(id)arg2;
- (void)_setupStateToken;

@end

@interface IDEDMEditorSourceListController : IDEDMEditorController <DVTOutlineViewDelegate>
{
    IDEDMEditor *parentEditor;
    DVTImageAndTextColumn *primaryColumn;
    DVTOutlineView *sourceListOutlineView;
    NSTreeController *sourceListTreeController;
    DVTBorderedView *borderedView;
    NSArray *_shownSourceListSections;
    NSArray *_allSourceListSections;
    NSArray *_selectedSourceListIndexPaths;
    NSArray *_sourceListSectionObservationTokens;
    NSArray *_sourceListOutlineViewPreviousSelection;
    NSTextFieldCell *_sourceListTitleCell;
    NSTextFieldCell *_sourceListItemCell;
}

+ (id)keyPathsForValuesAffectingSelection;
+ (id)keyPathsForValuesAffectingSelectedTopLevelObjects;
+ (id)keyPathsForValuesAffectingModelRoot;
@property(readonly) NSTextFieldCell *sourceListTitleCell; // @synthesize sourceListTitleCell=_sourceListTitleCell;
@property(readonly) NSTextFieldCell *sourceListItemCell; // @synthesize sourceListItemCell=_sourceListItemCell;
@property(retain) NSArray *selectedSourceListIndexPaths; // @synthesize selectedSourceListIndexPaths=_selectedSourceListIndexPaths;
@property(retain) NSArray *shownSourceListSections; // @synthesize shownSourceListSections=_shownSourceListSections;
@property(retain) NSArray *allSourceListSections; // @synthesize allSourceListSections=_allSourceListSections;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)editNameForModelObject:(id)arg1;
- (BOOL)deleteTopLevelObjects:(id)arg1;
- (void)editNameForTopLevelModelObject:(id)arg1;
@property(readonly) NSArray *selection;
- (id)selectedTopLevelObjectsWithClass:(Class)arg1;
@property(readonly) NSArray *selectedTopLevelObjects;
- (void)selectTopLevelObjects:(id)arg1;
- (void)takeFocus;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (void)modelChanged;
- (void)loadView;
- (void)_setupBorderedView;
- (void)_childrenKeyPathChanged;
@property(readonly) NSString *treeControllerChildrenKeyPath;
- (void)_configureShownSections;
- (void)setupSourceListSections;
- (void)_makeSourceListOutlineViewFirstResponderAndSelectObjects:(id)arg1;
- (id)createSourceListSections;
- (id)shownSourceListSectionIdentifiers;
- (void)setupSourceListAndCells;
- (id)createSourceListItemCell;
- (id)createSourceListTitleCell;
@property(readonly) id <IDEDMModelRootObject> modelRoot;

@end

@interface IDEMappingModelEditorSourceListController : IDEDMEditorSourceListController
{
}

- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (id)shownSourceListSectionIdentifiers;
- (id)createSourceListSections;
- (void)setupSourceListAndCells;
- (id)mappingModel;
- (id)parentEditor;
- (id)identifier;
- (id)nibName;

@end

@interface IDEDataModelIndexQueryProvider : IDEIndexGenericQueryProvider
{
}

+ (id)locationForURL:(id)arg1 locator:(id)arg2;

@end

@interface IDEDataModelIssueCallback : XDGenericErrorCallback
{
    IDEIssueProvider *_provider;
    NSMutableArray *_issues;
    NSDictionary *_settings;
}

- (void)createWarningForElement:(id)arg1 withMessage:(id)arg2 category:(int)arg3 documentURL:(id)arg4;
- (void)createErrorForElement:(id)arg1 withMessage:(id)arg2 category:(int)arg3 documentURL:(id)arg4;
- (void)addIssueForObject:(id)arg1 withMessage:(id)arg2 category:(id)arg3 severity:(unsigned long long)arg4 documentURL:(id)arg5;
- (id)targetVersion;
- (id)issues;
- (id)initWithProvider:(id)arg1 settings:(id)arg2;

@end

@interface IDEDataModelIssueProvider : IDEIssueProvider
{
    IDEContainerQuery *filesQuery;
    NSMutableSet *watchedUnopenFilePaths;
    NSMutableSet *openDocumentFilePaths;
    NSOperationQueue *backgroundWarningCalculationQueue;
    id <DVTObservingToken> kvoMatchesToken;
    id <DVTObservingToken> kvoDocumentsToken;
    id <DVTObservingToken> kvoConfigurationToken;
}

+ (int)providerType;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)documentWarningsChanged:(id)arg1;
- (void)generateIssuesForDocument:(id)arg1 withFilePath:(id)arg2;
- (void)generateIssuesForDocumentAtFilePath:(id)arg1;
- (void)updateOpenDocuments;
- (void)generateIssuesForFile:(id)arg1;
- (void)configureFileWatchers;
- (id)issuesForModel:(id)arg1 fileURL:(id)arg2 usingSettings:(id)arg3;
- (id)settingsForFile:(id)arg1;
- (id)flagStringForName:(id)arg1;
- (id)propertyStringForName:(id)arg1;
- (void)finalize;
- (void)invalidate;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;

@end

@interface IDECDDataModelTemplate : IDETemplate
{
}

+ (id)additionalAvailableTemplatesOfTemplateKind:(id)arg1;
+ (id)templateInfoDictionary;
- (id)templateIcon;

@end

@interface IDECDDataModelTemplateFactory : IDETemplateFactory
{
}

- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(id)arg3;
- (id)proposedFilePathsForContext:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (id)_filePathsForRootModelFilePath:(id)arg1;

@end

@interface IDECDDataModelImportItem : NSObject
{
    IDEIndexClassSymbol *_classSymbol;
    BOOL _shouldImport;
}

@property BOOL shouldImport; // @synthesize shouldImport=_shouldImport;
@property(readonly) IDEIndexClassSymbol *classSymbol; // @synthesize classSymbol=_classSymbol;
@property(readonly) NSString *name;
- (id)initWithClassSymbol:(id)arg1;

@end

@interface IDECDDataModelAssistantContext : IDEAssistantContext
{
}

@end

@interface IDECDDataModelAssistant : IDEAssistant
{
    NSArray *_availibleImportItems;
    BOOL _animateProgressIndicator;
    id <DVTObservingToken> _workspaceValidObservationToken;
    id _indexDidChangeNotificationObserver;
}

@property BOOL animateProgressIndicator; // @synthesize animateProgressIndicator=_animateProgressIndicator;
@property NSArray *availibleImportItems; // @synthesize availibleImportItems=_availibleImportItems;
- (id)nextAssistantIdentifier;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)canFinish;
- (void)viewDidInstall;
- (void)itemsToImportChanged:(id)arg1;
- (void)_setContextForTemplateInstantiation;
- (void)_setupAvailibleImportItems;
- (BOOL)_shouldIncludeIndexSymbol:(id)arg1;
- (id)nibBundle;
- (id)nibName;

@end

@interface IDECDMappingModelTemplate : IDETemplate
{
}

+ (id)additionalAvailableTemplatesOfTemplateKind:(id)arg1;
+ (id)templateInfoDictionary;
- (id)templateIcon;

@end

@interface IDECDMappingModelTemplateFactory : IDETemplateFactory
{
}

- (id)proposedFilePathsForContext:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(id)arg3;
- (id)_filePathsForRootModelFilePath:(id)arg1;

@end

@interface IDEDataModelClassUMLRepresentation : NSObject
{
    IDEIndexClassSymbol *_classSymbol;
    NSArray *_ownedAttributes;
    NSArray *_ownedOperations;
}

@property(readonly) IDEIndexClassSymbol *classSymbol; // @synthesize classSymbol=_classSymbol;
@property(readonly) NSArray *ownedOperations; // @synthesize ownedOperations=_ownedOperations;
@property(readonly) NSArray *ownedAttributes; // @synthesize ownedAttributes=_ownedAttributes;
@property(readonly) IDEDataModelClassUMLRepresentation *parentClass;
@property(readonly) NSString *name;
- (id)initWithClassSymbol:(id)arg1;
- (id)_generateOwnedAttributes;
- (id)_generateOwnedOperations;

@end

@interface IDEDataModelAttributeUMLRepresentation : NSObject
{
    NSString *_name;
    IDEDataModelDataTypeUMLRepresentation *_type;
    IDEDataModelClassUMLRepresentation *_ownerClass;
}

@property(readonly) IDEDataModelClassUMLRepresentation *ownerClass; // @synthesize ownerClass=_ownerClass;
@property(readonly) IDEDataModelDataTypeUMLRepresentation *type; // @synthesize type=_type;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)initWithName:(id)arg1 ownerClass:(id)arg2;
- (id)_typeNameForName:(id)arg1 ownerClass:(id)arg2;

@end

@interface IDEDataModelDataTypeUMLRepresentation : NSObject
{
    NSString *_name;
}

@property(readonly) NSString *name; // @synthesize name=_name;
- (id)initWithName:(id)arg1;

@end

@interface IDEMappingModelChooserAssistantContext : IDEAssistantContext
{
}

@end

@interface IDEMappingModelChooserAssistant : IDEAssistant <IDEFilePickerViewDelegate>
{
    IDEFilePickerView *filePickerView;
    id <DVTObservingToken> _selectedItemsObservingToken;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingValidModelSelected;
+ (id)keyPathsForValuesAffectingSelectedModelFileReference;
- (void)viewWillUninstall;
- (void)loadView;
- (BOOL)canGoForward;
@property(readonly) BOOL validModelSelected;
@property(readonly) IDEFileReference *selectedModelFileReference;
@property(readonly) NSString *storageKey;
- (BOOL)shouldAllowSelectionOfURL:(id)arg1;
- (void)filePickerView:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forTableColumn:(id)arg4 item:(id)arg5;
- (void)_configureFilePickerView;
- (void)_recordFileReference;
- (BOOL)canFinish;
- (BOOL)canGoBack;
@property(readonly) NSString *labelText;
- (id)nibBundle;
- (id)nibName;

@end

@interface IDEMappingModelSourceChooserAssistantContext : IDEMappingModelChooserAssistantContext
{
}

@end

@interface IDEMappingModelSourceChooserAssistant : IDEMappingModelChooserAssistant
{
}

- (id)nextAssistantIdentifier;
- (id)labelText;
- (id)storageKey;

@end

@interface IDEMappingModelTargetChooserAssistantContext : IDEMappingModelChooserAssistantContext
{
}

@end

@interface IDEMappingModelTargetChooserAssistant : IDEMappingModelChooserAssistant
{
}

- (BOOL)shouldAllowSelectionOfURL:(id)arg1;
- (id)nextAssistantIdentifier;
- (id)labelText;
- (id)storageKey;

@end

@interface IDEMappingModelGeniusResultsFinder : IDEDMGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(id *)arg1 phaseTwoBlock:(void)arg2 phaseThreeBlock:(id *)arg3;
- (id)_geniusLocationsForMappingModelDocument:(id)arg1 withWorkspaceContainerQueryMatches:(id)arg2;
- (id)geniusQueryMatches;
- (id)_locationForURL:(id)arg1 inQueryResults:(id)arg2 matchOnlyLastComponent:(BOOL)arg3;
- (id)geniusCategoryIdentifier;

@end

@interface IDEDMGeniusResultsFinder : IDEIndexGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (id)locationsFromSymbol:(id)arg1;
- (id)geniusResultsFromLocations:(id)arg1;
- (id)uniqueGeniusLocations:(id)arg1 originalDocumentLocation:(id)arg2;
- (id)geniusCategoryIdentifier;

@end

@interface IDEDMPropertyPasteHandler : IDESpecialPasteboardHandler
{
}

- (id)specialPasteMenuItemTitleFromPasteboard:(id)arg1;
- (id)specialPasteboardDataFromPasteboard:(id)arg1 error:(id *)arg2;
- (BOOL)isPastingInterface:(id)arg1;
- (BOOL)isPastingImplementation:(id)arg1;

@end

@interface IDECDManagedObjectTemplateFactory : IDETemplateTextSubstitutionFactory
{
}

- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(id)arg3;
- (id)additionalMacrosForContext:(id)arg1;
- (void)setClassName:(id)arg1 forEntity:(id)arg2;

@end

@interface IDECDManagedObjectEntityAssistant : IDEAssistant
{
    NSArray *availableEntities;
    NSSet *selectedEntityItems;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
@property NSSet *selectedEntityItems; // @synthesize selectedEntityItems;
@property NSArray *availableEntities; // @synthesize availableEntities;
- (id)nextAssistantIdentifier;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)canFinish;
- (void)viewDidInstall;
- (void)setupAvailableEntities;
- (void)entitiesChanged:(id)arg1;
- (void)setContextForTemplateInstantiation;
- (id)nibBundle;
- (id)nibName;

@end

@interface IDECDManagedObjectDataModelAssistant : IDEAssistant
{
    NSArray *availableFiles;
    NSSet *selectedFileItems;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
@property NSSet *selectedFileItems; // @synthesize selectedFileItems;
@property NSArray *availableFiles; // @synthesize availableFiles;
- (id)nextAssistantIdentifier;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)canFinish;
- (void)viewDidInstall;
- (void)setupAvailableFiles;
- (void)filesChanged:(id)arg1;
- (void)setContextForTemplateInstantiation;
- (id)nibBundle;
- (id)nibName;

@end

@interface IDECDDataModelEntityItem : NSObject
{
    CDMEntity *entity;
    BOOL shouldUse;
}

@property BOOL shouldUse; // @synthesize shouldUse;
@property(readonly) CDMEntity *entity; // @synthesize entity;
- (id)initWithEntity:(id)arg1 shouldUse:(BOOL)arg2;

@end

@interface IDECDDataModelFileItem : NSObject
{
    DVTFilePath *filePath;
    BOOL shouldUse;
}

@property BOOL shouldUse; // @synthesize shouldUse;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath;
@property(readonly) NSString *name;
- (id)initWithFilePath:(id)arg1 shouldUse:(BOOL)arg2;

@end

@interface IDECDManagedObjectAssistantContext : IDETemplateInstantiationContext <NSCopying>
{
    NSSet *files;
    NSSet *entities;
    CDMEntity *entity;
}

@property(retain) CDMEntity *entity; // @synthesize entity;
@property(retain) NSSet *entities; // @synthesize entities;
@property(retain) NSSet *files; // @synthesize files;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDECDManagedObjectCompletionAssistant : Xcode3FileTemplateCompletionAssistant <NSOpenSavePanelDelegate>
{
    BOOL usePrimitiveDataTypes;
    BOOL replaceFiles;
}

+ (id)keyPathsForValuesAffectingAllowPrimitiveDataTypes;
@property BOOL usePrimitiveDataTypes; // @synthesize usePrimitiveDataTypes;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned int)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (id)configuredSavePanel;
- (id)configuredOpenPanel;
@property(readonly) BOOL allowPrimitiveDataTypes;

@end

@interface IDEDataModelRefactoringFileChange : IDERefactoringFileChange
{
    NSString *_srcEntityClassName;
    NSString *_dstEntityClassName;
    NSString *_srcPropertyName;
    NSString *_dstPropertyName;
}

@property(copy) NSString *destinationPropertyName; // @synthesize destinationPropertyName=_dstPropertyName;
@property(copy) NSString *sourcePropertyName; // @synthesize sourcePropertyName=_srcPropertyName;
@property(copy) NSString *destinationEntityClassName; // @synthesize destinationEntityClassName=_dstEntityClassName;
@property(copy) NSString *sourceEntityClassName; // @synthesize sourceEntityClassName=_srcEntityClassName;
- (BOOL)applyChange;
- (BOOL)_applyChangeToEntity:(id)arg1;

@end

@interface IDEDataModelRefactoringFileChangeSet : IDERefactoringFileChangeSet
{
    CDMModel *_dataModel;
}

+ (id)changeSetForFileAtPath:(id)arg1 transformation:(id)arg2 error:(id *)arg3;
@property CDMModel *dataModel; // @synthesize dataModel=_dataModel;
- (void)writeTempResults;
- (BOOL)writesOwnTempResults;
- (BOOL)resultIsEditable;
- (BOOL)applyChangesWithError:(id *)arg1;
- (id)initWithFilePath:(id)arg1;
- (BOOL)_saveModelToFilePath:(id)arg1;
- (void)_loadModelAtFilePath:(id)arg1;

@end

@interface IDEDataModelVersioningManager : NSObject
{
}

+ (void)createVersionedDataModelAtPath:(id)arg1 forDocumentAtPath:(id)arg2 context:(id)arg3 whenDone:(id)arg4;
+ (void)createUnversionedDataModelAtPath:(id)arg1 instantiatedPath:(id)arg2 representedFilePath:(id)arg3 whenDone:(id)arg4;

@end

@interface IDECDDataModelTemplateCompletionAssistant : Xcode3FileTemplateCompletionAssistant
{
}

- (id)configuredSavePanel;

@end

@interface IDEDataModelDocumentResultsFinder : IDEDMGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(id *)arg1 phaseTwoBlock:(void)arg2 phaseThreeBlock:(id *)arg3;
- (id)_geniusLocationsForModelObject:(id)arg1;
- (id)_geniusSymbolsForEntity:(id)arg1;
- (id)_classSymbolsForEntity:(id)arg1;
- (id)geniusCategoryIdentifier;

@end

@interface IDEDataModelRelationshipResultsFinder : IDEDMGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(id *)arg1 phaseTwoBlock:(void)arg2 phaseThreeBlock:(id *)arg3;
- (id)_geniusLocationsForModelObject:(id)arg1;
- (id)_geniusSymbolsForEntity:(id)arg1;
- (id)_classSymbolsForEntity:(id)arg1;
- (id)geniusCategoryIdentifier;

@end

@interface IDECDDataModelVersionAssistant : IDEAssistant
{
    NSString *versionName;
    NSArray *modelNames;
    NSString *selectedModel;
}

@property(retain) NSString *selectedModel; // @synthesize selectedModel;
@property(retain) NSArray *modelNames; // @synthesize modelNames;
@property(retain) NSString *versionName; // @synthesize versionName;
- (void)finishWithCompletionBlock:(id)arg1;
- (void)setPathForSelectedModel;
- (void)setPathForCloneModel;
- (BOOL)alwaysShowFinish;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (void)viewDidInstall;
- (id)availableModelsAtPath:(id)arg1;
- (long long)destinationIndex;
- (id)destinationGroup;
- (id)documentFilePath;

@end

@interface IDEDataModelVersionedInspectorItem : NSObject
{
    IDEFileReference *_fileReference;
}

@property(readonly) IDEFileReference *fileReference; // @synthesize fileReference=_fileReference;
- (id)initWithFileReference:(id)arg1;
@property(readonly) NSString *name;

@end

@interface IDEVersionedDataModelDocumentInspector : IDEDataModelInspectorController <IDEInspectorAccessibilitySupport>
{
    NSArray *macOSXDeploymentVersionMenuItems;
    NSArray *iOSDeploymentVersionMenuItems;
    NSArrayController *versionsArrayController;
    NSArray *_items;
}

+ (id)keyPathsForValuesAffectingIOSDeploymentTargetTitle;
@property(copy) NSArray *iOSDeploymentVersionMenuItems; // @synthesize iOSDeploymentVersionMenuItems;
@property(copy) NSArray *macOSXDeploymentVersionMenuItems; // @synthesize macOSXDeploymentVersionMenuItems;
- (void)setContent:(id)arg1;
@property(readonly) NSArray *items;
- (id)generateItems;
@property(retain) IDEDataModelVersionedInspectorItem *currentInspectorItem;
- (void)setCurrentReference:(id)arg1;
- (id)currentReference;
- (id)_versionGroup;
- (void)refreshTargetMenus;
@property(readonly) NSString *iOSDeploymentTargetTitle;
@property(readonly) NSString *macOSXDeploymentTargetTitle;
- (void)takeDocumentDependency:(id)arg1;
@property(readonly) BOOL iOSDevelopmentEnabled;
- (void)loadView;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;

@end

@interface IDEDataModelDocumentInspector : IDEDataModelInspectorController
{
    NSArray *developmentVersionMenuItems;
}

+ (id)keyPathsForValuesAffectingDevelopmentVersionTitle;
+ (id)keyPathsForValuesAffectingModelVersionIdentifier;
@property(copy) NSArray *developmentVersionMenuItems; // @synthesize developmentVersionMenuItems;
- (void)setContent:(id)arg1;
- (void)refreshTargetMenus;
@property(readonly) NSString *developmentVersionTitle;
- (void)takeDocumentDependency:(id)arg1;
- (void)setModelVersionIdentifier:(id)arg1;
- (id)modelVersionIdentifier;

@end

@interface IDEApplication (IDEDataModelDocumentScripting)
- (id)sdefSupport_modelDocuments;
- (id)sdefSupport_dataModelDocuments;
@end

@interface CDMFetchRequest (IDEFetchRequestEditor)
+ (id)keyPathsForValuesAffectingPredicate;
- (void)setPredicate:(id)arg1;
- (id)predicate;
@end

@interface CDMEntity (IDEFetchRequestEditor)
- (id)predicateRowTemplates;
- (id)standardRowTemplates;
@end

@interface CDMModel (CDMNavigableIdentification) <IDEDataModelSourceObject, IDEDMModelRootObject>
+ (id)orderedLocationKeys;
+ (id)keyPathsForValuesAffectingHierarchyTreeControllerChildren;
+ (id)keyPathsForValuesAffectingRootsOfEntityTree;
+ (id)keyPathsForValuesAffectingTreeControllerChildren;
+ (id)keyPathsForValuesAffectingStructuralChildren;
+ (id)keyPathsForValuesAffectingTopLevelObjects;
- (void)removeTopLevelObject:(id)arg1;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;
@property(readonly) NSImage *representativeIcon;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSArray *hierarchyTreeControllerChildren;
- (id)treeControllerChildren;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;

// Remaining properties
@property(readonly) NSString *name; // @dynamic name;
@end

@interface CDMEntity (CDMNavigableIdentification) <IDEDataModelSourceObject>
+ (id)orderedLocationKeys;
+ (id)keyPathsForValuesAffectingHierarchyTreeControllerChildren;
+ (id)keysPathForValuesAffectingStructuralChildren;
+ (id)keyPathsForValuesAffectingEntityNavigableChildren;
@property(readonly) NSArray *hierarchyTreeControllerChildren;
- (id)treeControllerChildren;
@property(readonly) NSImage *representativeIcon;
@property(readonly) NSArray *structuralChildren;
- (id)entityNavigableChildren;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) id <IDEDMSourceObject> sourceObject;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSString *name; // @dynamic name;
@end

@interface CDMProperty (CDMNavigableIdentification) <IDEDataModelObject>
@property(readonly) NSArray *hierarchyTreeControllerChildren;
- (id)treeControllerChildren;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;
@property(readonly) id <IDEDMSourceObject> sourceObject;

// Remaining properties
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier; // @dynamic ideModelObjectTypeIdentifier;
@property(readonly) NSString *name; // @dynamic name;
@property(readonly) NSImage *representativeIcon; // @dynamic representativeIcon;
@end

@interface CDMFetchedProperty (CDMNavigableIdentification) <IDEDataModelObject>
@property(readonly) NSImage *representativeIcon;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSArray *hierarchyTreeControllerChildren; // @dynamic hierarchyTreeControllerChildren;
@property(readonly) NSString *name; // @dynamic name;
@property(readonly) id <IDEDMModelObject> parentObject; // @dynamic parentObject;
@property(readonly) id <IDEDMSourceObject> sourceObject; // @dynamic sourceObject;
@property(readonly) NSArray *structuralChildren; // @dynamic structuralChildren;
@end

@interface CDMAttribute (CDMNavigableIdentification) <IDEDataModelObject>
+ (id)keyPathsForValuesAffectingRepresentativeIcon;
@property(readonly) NSImage *representativeIcon;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSArray *hierarchyTreeControllerChildren; // @dynamic hierarchyTreeControllerChildren;
@property(readonly) NSString *name; // @dynamic name;
@property(readonly) id <IDEDMModelObject> parentObject; // @dynamic parentObject;
@property(readonly) id <IDEDMSourceObject> sourceObject; // @dynamic sourceObject;
@property(readonly) NSArray *structuralChildren; // @dynamic structuralChildren;
@end

@interface CDMRelationship (CDMNavigableIdentification) <IDEDataModelObject>
+ (id)keyPathsForValuesAffectingRepresentativeIcon;
@property(readonly) NSImage *representativeIcon;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSArray *hierarchyTreeControllerChildren; // @dynamic hierarchyTreeControllerChildren;
@property(readonly) NSString *name; // @dynamic name;
@property(readonly) id <IDEDMModelObject> parentObject; // @dynamic parentObject;
@property(readonly) id <IDEDMSourceObject> sourceObject; // @dynamic sourceObject;
@property(readonly) NSArray *structuralChildren; // @dynamic structuralChildren;
@end

@interface CDMFetchRequest (CDMNavigableIdentification) <IDEDataModelSourceObject>
@property(readonly) NSArray *hierarchyTreeControllerChildren;
- (id)treeControllerChildren;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;
@property(readonly) NSImage *representativeIcon;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSString *name; // @dynamic name;
@end

@interface CDMConfiguration (CDMNavigableIdentification) <IDEDataModelSourceObject>
+ (id)orderedLocationKeys;
+ (id)keysPathForValuesAffectingStructuralChildren;
@property(readonly) NSArray *hierarchyTreeControllerChildren;
- (id)treeControllerChildren;
@property(readonly) NSArray *structuralChildren;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSImage *representativeIcon;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSString *name; // @dynamic name;
@end

@interface XDDevMappingModel (XDDevMappingModelNavigableIdentification) <IDEMappingModelObject, IDEDMModelRootObject>
+ (id)orderedLocationKeys;
+ (id)keyPathsForValuesAffectingStructuralChildren;
+ (id)keyPathsForValuesAffectingTopLevelObjects;
- (void)removeTopLevelObject:(id)arg1;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSImage *representativeIcon;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;
@property(readonly) NSString *name;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;
@property(readonly) NSArray *topLevelObjects;
@end

@interface XDDevEntityMapping (XDDevEntityMappingNavigableIdentification) <IDEMappingModelSourceObject>
+ (id)orderedLocationKeys;
+ (id)keyPathsForValuesAffectingStructuralChildren;
+ (id)keyPathsForValuesAffectingSortedPropertyMappings;
+ (id)keyPathsForValuesAffectingEntityMappingNavigableChildren;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;
- (id)model;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSArray *sortedPropertyMappings;
@property(readonly) NSImage *representativeIcon;
- (id)treeControllerChildren;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;
- (id)entityMappingNavigableChildren;

// Remaining properties
@property(readonly) XDDevMappingModel *mappingModel; // @dynamic mappingModel;
@property(readonly) NSString *name; // @dynamic name;
@end

@interface XDDevRelationshipMapping (XDDevRelationshipMappingNavigableIdentification) <IDEMappingModelObject>
+ (id)keyPathsForValuesAffectingRepresentativeIcon;
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSImage *representativeIcon;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSString *name; // @dynamic name;
@end

@interface XDDevAttributeMapping (XDDevAttributeMappingNavigableIdentification) <IDEMappingModelObject>
@property(readonly) id <IDEDMModelObject> parentObject;
@property(readonly) NSArray *structuralChildren;
@property(readonly) id <IDEDMSourceObject> sourceObject;
@property(readonly) NSImage *representativeIcon;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;

// Remaining properties
@property(readonly) NSString *name; // @dynamic name;
@end

@interface NSAffineTransform (XDDiagramAppKitExtensions)
+ (id)_diagram_transformWithScaleXBy:(double)arg1 yBy:(double)arg2;
+ (id)_diagram_transformWithTranslateXBy:(double)arg1 yBy:(double)arg2;
@end

@interface NSBezierPath (XDDiagramAppKitExtensions)
+ (id)_diagram_bezierPathFromDictionaryRepresentation:(id)arg1;
- (BOOL)_diagram_intersectionPoint:(struct CGPoint *)arg1 withLineFromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (BOOL)_diagram_intersectsRect:(struct CGRect)arg1;
- (BOOL)_diagram_isStrokeHitByPoint:(struct CGPoint)arg1;
@end

@interface NSCursor (XDDiagramAppKitExtensions)
+ (id)_diagram_resizeUpperLeftLowerRightCursor;
+ (id)_diagram_resizeLowerLeftUpperRightCursor;
+ (id)_diagram_resizeUpDownCursor;
+ (id)_diagram_resizeLeftRightCursor;
+ (id)_diagram_resizeCursor;
@end

@interface NSGraphicsContext (XDDiagramAppKitExtensions)
- (void)_diagram_setLineWidth:(double)arg1;
@end

@interface NSImage (XDDiagramAppKitExtensions)
+ (id)_diagram_imageNamed:(id)arg1 inBundleWithIdentifier:(id)arg2;
+ (id)_diagram_imageNamed:(id)arg1 inBundle:(id)arg2;
@end

@interface NSUserDefaults (XDDiagramFoundationExtensions)
- (void)_diagram_registerDefaultsWithContentsOfFile:(id)arg1;
@end

@interface NSEntityDescription (fetchedPropertiesByNameCategory)
- (BOOL)cdm_isFetchedPropertyInherited:(id)arg1;
- (BOOL)cdm_isRelationshipInherited:(id)arg1;
- (BOOL)cdm_isAttributeInherited:(id)arg1;
- (id)fetchedPropertiesByName;
@end

@interface XDPMProperty (UIExtension)
- (id)valueForUndefinedKey:(id)arg1;
@end

@interface XDPMFetchRequest (UIExtension)
- (id)valueForUndefinedKey:(id)arg1;
@end

@interface XDUMLElementImp (SyncServicesExtensions)
- (void)setExcludeFromDataChangeAlert:(BOOL)arg1;
- (BOOL)excludeFromDataChangeAlert;
- (void)setSyncable:(BOOL)arg1;
- (BOOL)syncable;
- (BOOL)_boolValueForKeyInUserInfo:(id)arg1 defaultValue:(BOOL)arg2;
@end

@interface XDPMEntity (SyncServicesExtensions)
+ (id)syncUserInfoKeys;
- (void)setParentRelationshipName:(id)arg1;
- (id)parentRelationshipName;
- (void)setDataClassName:(id)arg1;
- (id)dataClassName;
- (id)displayedSyncName;
- (void)setSyncName:(id)arg1;
- (id)syncName;
- (id)defaultSyncName;
- (BOOL)syncable;
@end

@interface XDPMProperty (SyncServicesExtensions)
+ (id)keyPathsForValuesAffectingUserInfo;
+ (id)keyPathsForValuesAffectingExcludeFromDataChangeAlert;
+ (id)keyPathsForValuesAffectingSyncable;
+ (id)keyPathsForValuesAffectingIsSyncIdentityProperty;
- (BOOL)enableConflictResolutionPopUps;
- (void)setPreferredRecord:(id)arg1;
- (void)setPreferredClientType:(id)arg1;
- (void)_setAutomaticResolutionValue:(id)arg1 forKey:(id)arg2;
- (id)preferredRecord;
- (id)preferredClientType;
- (id)_automaticResolutionValueForKey:(id)arg1;
- (void)setIsSyncIdentityProperty:(unsigned long long)arg1;
- (unsigned long long)isSyncIdentityProperty;
- (void)setSyncable:(BOOL)arg1;
- (BOOL)syncable;
@end

@interface NSTreeController (CDMAdditions)
- (id)cdm_indexPathToObject:(id)arg1;
- (void)cdm_setSelectedObjects:(id)arg1;
- (id)cdm_indexPathFromIndexPath:(id)arg1 inChildren:(id)arg2 childCount:(unsigned int)arg3 toObject:(id)arg4;
@end

