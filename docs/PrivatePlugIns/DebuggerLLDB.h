/*
 *     Generated by class-dump 3.3.3 (64 bit) (Debug version compiled Aug 11 2011 13:55:57).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct Breakpoint;

struct DBGLLDBPThreadMutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } m_mutex;
};

struct Debugger;

struct InputReader;

struct Module;

struct NSObject {
    Class _field1;
};

struct Process;

struct SBBreakpoint {
    struct SharingPtr<lldb_private::Breakpoint> _field1;
};

struct SBBroadcaster;

struct SBCommunication;

struct SBDebugger {
    struct SharingPtr<lldb_private::Debugger> m_opaque_sp;
};

struct SBFrame {
    struct SharingPtr<lldb_private::StackFrame> m_opaque_sp;
};

struct SBInputReader {
    struct SharingPtr<lldb_private::InputReader> m_opaque_sp;
    void *m_callback_function;
    void *m_callback_baton;
};

struct SBModule {
    struct SharingPtr<lldb_private::Module> m_opaque_sp;
};

struct SBProcess {
    struct SharingPtr<lldb_private::Process> m_opaque_sp;
};

struct SBTarget {
    struct SharingPtr<lldb_private::Target> m_opaque_sp;
};

struct SBThread {
    struct SharingPtr<lldb_private::Thread> m_opaque_sp;
};

struct SBValue {
    struct SharingPtr<lldb_private::ValueObject> m_opaque_sp;
};

struct SBValueList {
    struct auto_ptr<lldb_private::ValueObjectList> m_opaque_ap;
};

struct SharingPtr<lldb_private::Breakpoint> {
    struct Breakpoint *_field1;
    struct shared_count *_field2;
};

struct SharingPtr<lldb_private::Debugger> {
    struct Debugger *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::InputReader> {
    struct InputReader *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::Module> {
    struct Module *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::Process> {
    struct Process *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::StackFrame> {
    struct StackFrame *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::Target> {
    struct Target *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::Thread> {
    struct Thread *ptr_;
    struct shared_count *cntrl_;
};

struct SharingPtr<lldb_private::ValueObject> {
    struct ValueObject *ptr_;
    struct shared_count *cntrl_;
};

struct StackFrame;

struct Target;

struct Thread;

struct ValueObject;

struct ValueObjectList;

struct auto_ptr<lldb::SBBroadcaster> {
    struct SBBroadcaster *_M_ptr;
};

struct auto_ptr<lldb::SBCommunication> {
    struct SBCommunication *_M_ptr;
};

struct auto_ptr<lldb_private::ValueObjectList> {
    struct ValueObjectList *_M_ptr;
};

struct shared_count;

#pragma mark -

/*
 * File: /Developer/Library/Xcode/PrivatePlugIns/DebuggerLLDB.ideplugin/Contents/MacOS/DebuggerLLDB
 * UUID: 88720B7D-7412-3674-98F0-E94F5BD72C2C
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 569.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 *       Run path: @loader_path/../../../
 *               = /Developer/Library/Xcode/PrivatePlugIns
 *       Run path: @loader_path/../../Library/PrivateFrameworks/
 *               = /Developer/Library/Xcode/PrivatePlugIns/DebuggerLLDB.ideplugin/Library/PrivateFrameworks
 */

@protocol DBGDebugSessionBreakpointDelegate
- (void)activationStateChanged:(BOOL)arg1 forBreakpoints:(id)arg2;
- (BOOL)deleteBreakpoint:(id)arg1;
- (BOOL)createBreakpoint:(id)arg1;
@end

@protocol DBGDebugSessionBreakpointLocationDelegate
- (void)breakpointEnablementChanged:(id)arg1;
- (void)breakpointIgnoreCount:(id)arg1;
- (void)breakpointConditionChanged:(id)arg1;
@end

@protocol DBGLLDBAsyncAction
- (id)description;
- (void)cancel;
- (void)execute;
@end

@protocol IDEConsoleAdaptorDelegateProtocol

@optional
- (id)parseConsoleOutputFromOriginalOutput:(id)arg1;
- (id)parseConsoleInputFromOriginalInput:(id)arg1;
@end

// Not exported
@interface DBGLLDBCodeModule : DBGCodeModule
{
    struct SBModule _lldbModule;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithPathString:(id)arg1 uuid:(id)arg2 lldbModule:(struct SBModule)arg3;

@end

// Not exported
@interface DBGLLDBProcess : DBGProcess
{
    struct SBProcess _lldbProcess;
    NSMutableArray *_previousFoundationThreads;
    BOOL _needSharedLibraryUpdate;
    BOOL _isDoingAsyncAttach;
}

@property BOOL isDoingAsyncAttach; // @synthesize isDoingAsyncAttach=_isDoingAsyncAttach;
@property BOOL needSharedLibraryUpdate; // @synthesize needSharedLibraryUpdate=_needSharedLibraryUpdate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)_isExcpetionBreakpoint:(unsigned long long)arg1;
- (void)_updateFoundationThreadStateAndStopReason:(id)arg1 fromLLDBThread:(struct SBThread)arg2;
- (void)clearThreadAndStackStates;
- (id)lldbSession;
- (void)rawMemoryDataForAddressExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(id)arg3;
- (id)updateThreadListAndGetCurrentThread:(id *)arg1;
- (void)updateSharedLibraries;
- (id)initWithDebugSession:(id)arg1 lldbProcess:(struct SBProcess)arg2;

@end

// Not exported
@interface DBGLLDBThread : DBGThread
{
    struct SBThread _lldbThread;
    NSMutableArray *_rawFrames;
}

@property(readonly) NSMutableArray *rawFrames; // @synthesize rawFrames=_rawFrames;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)requestUnsuspend;
- (void)requestSuspend;
- (id)lldbSession;
- (void)threadDidStop;
- (void)requestStackFrames:(unsigned long long)arg1 resultHandler:(id)arg2;
- (BOOL)refreshStackFrames;
- (id)getFramesFromLLDB;
- (id)initWithParentProcess:(id)arg1 uniqueID:(id)arg2 lldbThread:(struct SBThread)arg3;

@end

// Not exported
@interface DBGLLDBStackFrame : DBGStackFrame
{
    struct SBFrame _lldbFrame;
    struct SBValueList _lldbVariables;
    struct SBValueList _lldbRegisters;
    NSArray *_variables;
    NSArray *_locals;
    NSArray *_arguments;
    NSArray *_fileStatics;
    NSArray *_registers;
}

@property(copy) NSArray *fileStatics; // @synthesize fileStatics=_fileStatics;
@property(copy) NSArray *registers; // @synthesize registers=_registers;
@property(copy) NSArray *arguments; // @synthesize arguments=_arguments;
@property(copy) NSArray *locals; // @synthesize locals=_locals;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)lldbSession;
- (id)disassemble;
- (void)getRegistersFromLLDB;
- (void)getFileStaticsFromLLDB;
- (void)getLocalsFromLLDB;
- (void)getArgumentsFromLLDB;
- (id)evaluateExpression:(const char *)arg1;
- (void)requestDataValueForExpression:(id)arg1 atBlockStartAddress:(id)arg2 onQueue:(struct dispatch_queue_s *)arg3 withResultBlock:(id)arg4;
- (id)_fixExpressionCast:(id)arg1;
- (void)requestDataValueForSymbol:(id)arg1 atLocation:(id)arg2 onQueue:(struct dispatch_queue_s *)arg3 withResultBlock:(id)arg4;
- (id)findSymbol:(id)arg1 atLocation:(id)arg2;
- (void)requestDisassembly:(id)arg1;
- (void)getFrameVariables;
- (id)initWithParentThread:(id)arg1 frameNumber:(id)arg2 framePointer:(id)arg3 name:(id)arg4 lldbFrame:(struct SBFrame)arg5;

@end

// Not exported
@interface DBGLLDBDataValue : DBGDataValue
{
    DBGLLDBDataValue *_parent;
    DBGLLDBDataType *_dbgStaticType;
    DBGLLDBStackFrame *_frame;
    struct SBValue _lldbValueObject;
    NSArray *_childValues;
    NSString *_name_str;
    NSString *_type_str;
    NSString *_value_str;
    NSString *_summary_str;
    NSString *_expr_path_str;
    unsigned int _value_has_changed:2;
    unsigned int _old_value_has_changed:2;
    unsigned int _summary_has_changed:2;
    unsigned int _dyntype_has_changed:2;
    unsigned int _is_pointer_type:2;
    unsigned int _in_scope:2;
    unsigned int _requested_value:1;
    unsigned int _requested_summary:1;
    unsigned int _requested_children:1;
    int _num_children;
}

+ (id)dataValueFormatForLLDBFormat:(int)arg1;
+ (id)invalid;
- (void)setValue:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setFormat:(id)arg1;
- (id)format;
- (const char *)valueAsCString;
- (const char *)summaryAsCString;
- (const char *)typeAsCString;
- (void)getValuesFromLLDB;
- (unsigned long long)indexOfChildValueWithName:(id)arg1;
- (BOOL)childValuesCountValid;
- (id)childValues;
- (BOOL)hasChildValues;
- (void)clear;
- (BOOL)isPointer;
- (BOOL)inScope;
- (void)privateSetSummary:(id)arg1;
- (id)summary;
- (id)value;
- (id)typeDescription;
- (id)name;
- (id)parent;
- (BOOL)dynamicTypeHasChanged;
- (BOOL)summaryHasChanged;
- (BOOL)valueHasChanged;
- (void)setValueHasChanged:(BOOL)arg1;
- (id)blockStartAddress;
- (id)dynamicType;
- (id)staticType;
- (id)expressionPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLLDBValueObject:(struct SBValue)arg1 forStackFrame:(id)arg2 withParent:(id)arg3;
@property(readonly) NSString *description;
- (id)init;

@end

// Not exported
@interface DBGLLDBLauncher : IDERunOperationPathWorker <IDEConsoleAdaptorDelegateProtocol>
{
    struct SBDebugger m_debugger;
    NSFileHandle *_consoleAdaptorDebuggerInputFile;
    IDEConsoleAdaptor *_consoleAdaptorDebugger;
    IDEPseudoTerminal *_targetPty;
    DBGLLDBSession *_debugSession;
    struct DBGLLDBPThreadMutex _mutex;
    struct auto_ptr<lldb::SBCommunication> m_lldb_comm_ap;
    BOOL _terminateCalled;
    struct SBInputReader m_console_reader;
    NSString *m_prompt;
}

+ (void)initialize;
@property(readonly) IDEConsoleAdaptor *consoleAdaptorDebugger; // @synthesize consoleAdaptorDebugger=_consoleAdaptorDebugger;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (id)executableArguments;
- (id)parseConsoleOutputFromOriginalOutput:(id)arg1;
- (id)parseConsoleInputFromOriginalInput:(id)arg1;
- (void)sendSTDIN:(id)arg1;
- (void)executeLLDBCommands:(id)arg1;
- (BOOL)consoleInputReaderIsActive;
- (void)resetPrompt:(const char *)arg1;
- (void)clearPrompt;
- (void)refreshPrompt;
- (void)createDebuggerConsole;
- (void)setFinishedRunning;
- (void)_cleanUp;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

@end

// Not exported
@interface DBGLLDBSession : DBGDebugSession <IDEConsoleAdaptorDelegateProtocol, DBGDebugSessionBreakpointDelegate, DBGDebugSessionBreakpointLocationDelegate>
{
    struct SBTarget _lldbTarget;
    DBGLLDBProcess *_dbgLLDBProcess;
    struct auto_ptr<lldb::SBBroadcaster> _broadcasterAP;
    struct DBGLLDBPThreadMutex _resumeActionsMutex;
    NSMutableArray *_resumeActions;
    struct DBGLLDBPThreadMutex _asyncActionsMutex;
    NSMutableArray *_asyncActions;
    struct _opaque_pthread_t {
        long long _field1;
        struct __darwin_pthread_handler_rec *_field2;
        char _field3[1168];
    } *_sessionThread;
    NSString *_introspection_dylib_image_path;
    unsigned int _introspection_dylib_image_token;
    BOOL _introspection_dylib_pending;
    BOOL _introspection_dylib_loaded;
    BOOL _supportsUnicharDataFormatters;
}

@property BOOL supportsUnicharDataFormatters; // @synthesize supportsUnicharDataFormatters=_supportsUnicharDataFormatters;
@property(readonly) DBGLLDBProcess *lldbProcess; // @synthesize lldbProcess=_dbgLLDBProcess;
@property BOOL introspection_dylib_pending; // @synthesize introspection_dylib_pending=_introspection_dylib_pending;
@property BOOL introspection_dylib_loaded; // @synthesize introspection_dylib_loaded=_introspection_dylib_loaded;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)supportsWatchpoints;
- (void)loadIntrospectionDylibIfNeeded;
- (id)fetchPathToInstrospectionSupportDyLib;
- (id)supportedDataValueFormatsForDataValue:(id)arg1;
- (BOOL)consoleShouldTrackInputHistory;
- (void)loadDebugSymbolsForSharedLibrary:(id)arg1;
- (BOOL)supportsMultiPC;
- (void)breakpointEnablementChanged:(id)arg1;
- (void)breakpointIgnoreCount:(id)arg1;
- (void)breakpointConditionChanged:(id)arg1;
- (void)activationStateChanged:(BOOL)arg1 forBreakpoints:(id)arg2;
- (void)enableBreakpoint:(id)arg1;
- (void)disableBreakpoint:(id)arg1;
- (BOOL)deleteBreakpoint:(id)arg1;
- (struct SBBreakpoint)_createBreakpointFromAddressBreakpoint:(id)arg1;
- (struct SBBreakpoint)_createBreakpointFromExceptionBreakpoint:(id)arg1;
- (struct SBBreakpoint)_createBreakpointFromSymbolicBreakpoint:(id)arg1;
- (struct SBBreakpoint)_createBreakpointFromFileBreakpoint:(id)arg1;
- (BOOL)createBreakpoint:(id)arg1;
- (void)_delayedSetThreadsNil;
- (id)getNextControlAction;
- (unsigned long long)pendingAsyncActionCount;
- (unsigned long long)pendingControlActionCount;
- (id)getNextAsyncAction;
- (void)cancelAllAsyncActions;
- (void)appendAsyncAction:(id)arg1;
- (void)completeString:(id)arg1 resultHandler:(id)arg2;
- (void)printDescriptionOfDataValueToConsole:(id)arg1 runAllThreads:(BOOL)arg2;
- (id)requestDataContainerForSymbol:(id)arg1 atLocation:(id)arg2;
- (void)_performBreakpointActions:(id)arg1;
- (void)_removeBreakpointHitCallback:(unsigned long long)arg1;
- (void)_addBreakpointHitCallback:(struct SBBreakpoint)arg1;
- (void)requestMovePCInStackFrame:(id)arg1 toLineNumber:(unsigned long long)arg2;
- (BOOL)debuggerSupportsPCDragging;
- (void)requestContinueToLocation:(id)arg1 inContext:(struct NSObject *)arg2;
- (void)requestStepIntoCallSymbol:(id)arg1 atLocation:(id)arg2 inContext:(struct NSObject *)arg3;
- (void)requestStepOverSuspendOtherThreads:(struct NSObject *)arg1;
- (void)requestStop:(struct NSObject *)arg1;
- (void)requestContinue:(struct NSObject *)arg1;
- (void)requestPause:(struct NSObject *)arg1;
- (void)requestStepOut:(struct NSObject *)arg1;
- (void)requestStepOverInstruction:(struct NSObject *)arg1;
- (void)requestStepOverLine:(struct NSObject *)arg1;
- (void)requestStepIntoInstruction:(struct NSObject *)arg1;
- (void)requestStepInSuspendOtherThreads:(struct NSObject *)arg1;
- (void)requestStepIn:(struct NSObject *)arg1;
- (void)appendProcessControlAction:(int)arg1 scope:(int)arg2 thread:(id)arg3 arg:(unsigned long long)arg4 location:(id)arg5;
- (BOOL)currentThreadIsSessionThread;
- (void)trackProcess:(id)arg1;
@property(readonly) DBGLLDBLauncher *launcher;
- (id)navigableItem_name;
- (void)cleanUp;
- (id)initWithDebugLauncher:(id)arg1 andTarget:(struct SBTarget)arg2;

@end

// Not exported
@interface DBGLLDBDataType : DBGDataType
{
    void *_lldbType;
}

- (BOOL)isUnknownType;
- (BOOL)isPointer;
- (id)initWithTypename:(id)arg1 withType:(void *)arg2;

@end

// Not exported
@interface DBGLLDBProcessControl : NSObject
{
    int _action;
    int _scope;
    DBGLLDBThread *_thread;
    unsigned long long _arg0;
    DVTTextDocumentLocation *_location;
}

@property(readonly) DVTTextDocumentLocation *location; // @synthesize location=_location;
@property(readonly) unsigned long long argument; // @synthesize argument=_arg0;
@property(readonly) DBGLLDBThread *thread; // @synthesize thread=_thread;
@property(readonly) int scope; // @synthesize scope=_scope;
@property(readonly) int action; // @synthesize action=_action;
- (id)initWithAction:(int)arg1 scope:(int)arg2 thread:(id)arg3 arg:(unsigned long long)arg4 location:(id)arg5;
- (id)initWithAction:(int)arg1 scope:(int)arg2 thread:(id)arg3 arg:(unsigned long long)arg4;

@end

// Not exported
@interface DBGLLDBAsyncActionExpr : NSObject <DBGLLDBAsyncAction>
{
    DBGLLDBStackFrame *_frame;
    NSString *_expression;
    struct dispatch_queue_s *_queue;
    id _block;
}

- (id)description;
- (void)execute;
- (void)cancel;
- (id)initWithStackFrame:(id)arg1 usingExpression:(id)arg2 onQueue:(struct dispatch_queue_s *)arg3 withResultBlock:(id)arg4;

@end

// Not exported
@interface DBGLLDBAsyncActionCallSelector : NSObject <DBGLLDBAsyncAction>
{
    id _object;
    SEL _selector;
    id _obj_arg0;
    id _obj_arg1;
    unsigned int _num_args;
    BOOL _call_on_cancel;
}

- (void)setCallOnCancel:(BOOL)arg1;
- (id)description;
- (void)execute;
- (void)cancel;
- (id)initWithObject:(id)arg1 andSelector:(SEL)arg2 withObject:(id)arg3 withObject:(id)arg4;
- (id)initWithObject:(id)arg1 andSelector:(SEL)arg2 withObject:(id)arg3;
- (id)initWithObject:(id)arg1 andSelector:(SEL)arg2;

@end

