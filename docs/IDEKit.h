/*
 *     Generated by class-dump 3.3.3 (64 bit) (Debug version compiled Aug 11 2011 13:55:57).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct NSObject {
    Class _field1;
};

struct _IDEDebugSessionModeChange {
    char valid;
    int oldState;
    int newState;
    int oldMode;
    int newMode;
};

struct _IDEKeyBindingFieldCellFlags {
    unsigned int delegateRespondsToKeyboardShortcutIsPrefix:1;
    unsigned int delegateRespondsToAllowsMultipleKeyboardShortcut:1;
    unsigned int delegateRespondsToAlternateKeyBindings:1;
    unsigned int delegateRespondsToValidatedKeyboardShortcut:1;
    unsigned int delegateRespondsToDidEndEditing:1;
    unsigned int delegateRespondsToDidAddKeyboardShortcut:1;
    unsigned int delegateRespondsToWillRemoveKeyboardShortcut:1;
    unsigned int suppressTabAlignment:1;
    unsigned int RESERVED:24;
};

struct _IDEKeyBindingFlags {
    unsigned int isAlternate:1;
    unsigned int isGroupedAlternate:1;
    unsigned int isNavigation:1;
    unsigned int isConflicted:1;
    unsigned int isConflictedWithHotKey:1;
    unsigned int isShiftModifierMaskLocked:1;
    unsigned int isAlternateModifierMaskLocked:1;
    unsigned int isCommandModifierMaskLocked:1;
    unsigned int isControlModifierMaskLocked:1;
    unsigned int disablesPostingKeyboardShortcutsDidChangeNotification:1;
    unsigned int RESERVED:23;
};

struct _IDEKeyBindingSetFlags {
    unsigned int needsUpdateDictionary:1;
    unsigned int updatingDictionary:1;
    unsigned int RESERVED:30;
};

struct _IDEOutlineViewGroupInfo {
    struct _NSRange _field1;
    id _field2;
    struct _IDEOutlineViewGroupInfo *_field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

#pragma mark -

/*
 * File: /Developer/Library/PrivateFrameworks/IDEKit.framework/Versions/A/IDEKit
 * UUID: 13206DCE-D1B8-34F5-B049-0247EF6D4264
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 632.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 */

@protocol DVTAssertionHandling <NSObject>
- (void)handleWarningInFunction:(id)arg1 fileName:(id)arg2 lineNumber:(long long)arg3 messageFormat:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)handleWarningInMethod:(SEL)arg1 object:(id)arg2 fileName:(id)arg3 lineNumber:(long long)arg4 messageFormat:(id)arg5 arguments:(struct __va_list_tag [1])arg6;
- (void)handleFailureInFunction:(id)arg1 fileName:(id)arg2 lineNumber:(long long)arg3 messageFormat:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 fileName:(id)arg3 lineNumber:(long long)arg4 messageFormat:(id)arg5 arguments:(struct __va_list_tag [1])arg6;
@end

@protocol DVTCompletingTextViewDelegate <NSTextViewDelegate>

@optional
- (BOOL)completingTextViewHandleCancel:(id)arg1;
- (unsigned long long)textView:(id)arg1 lineEndingForWritingSelectionToPasteboard:(id)arg2 type:(id)arg3;
- (unsigned long long)textView:(id)arg1 lineEndingForReadingSelectionFromPasteboard:(id)arg2 type:(id)arg3;
- (void)textView:(id)arg1 layoutManager:(id)arg2 didLayoutGlyphsUpToCharacterIndex:(unsigned long long)arg3;
- (id)completingTextView:(id)arg1 documentLocationForWordStartLocation:(unsigned long long)arg2;
- (void)completingTextView:(id)arg1 willPassContextToStrategies:(id)arg2 atWordStartLocation:(unsigned long long)arg3;
@end

@protocol DVTDiffTextFilter <NSObject>
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

@optional
+ (id)pathToTextFileFromInputFilePath:(id)arg1 error:(id *)arg2;
+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
@end

@protocol DVTEditor <NSObject>
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
@end

@protocol DVTFilePathFieldCellDelegate

@optional
- (id)DVTFilePathFieldCell:(id)arg1 resolvedPathForPath:(id)arg2;
- (void)DVTFilePathFieldCell:(id)arg1 chooserSelectedPath:(id)arg2;
@end

@protocol DVTFilteringMenuDelegate <NSMenuDelegate>
- (void)filterItems:(id)arg1 inMenu:(id)arg2 forSearchString:(id)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
@end

@protocol DVTFindBarHostable <DVTFindBarFindable>
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;

@optional
- (BOOL)dvtFindBar:(id)arg1 validateUserInterfaceItem:(id)arg2;
- (void)dvtFindBar:(id)arg1 didWrap:(BOOL)arg2 reverse:(BOOL)arg3;
@end

@protocol DVTInvalidation <NSObject>
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTIssueDisplayingView <NSObject>
@property(copy) NSDictionary *issueInfoDictionary;
@end

@protocol DVTMessageBubbleAnnotationDelegate <DVTTextAnnotationDelegate>

@optional
- (void)didClickMessageBubbleForAnnotation:(id)arg1 onIcon:(BOOL)arg2 inTextView:(id)arg3 event:(id)arg4;
@end

@protocol DVTObservingToken <NSObject>
- (void)rescind;
@end

@protocol DVTOutlineViewDelegate <NSOutlineViewDelegate>

@optional
- (BOOL)outlineView:(id)arg1 shouldMouseHoverForTableColumn:(id)arg2 row:(long long)arg3;
- (void)outlineView:(id)arg1 concludeDragOperation:(id)arg2;
- (unsigned long long)outlineView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (void)outlineView:(id)arg1 draggingDidEnd:(id)arg2;
- (void)outlineView:(id)arg1 draggingDidUpdate:(id)arg2;
- (void)outlineView:(id)arg1 draggingDidEnter:(id)arg2;
- (BOOL)outlineView:(id)arg1 insertText:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTPreferenceSet <NSObject>
+ (id)titleForNewPreferenceSetFromTemplate;
+ (id)preferenceSetsListHeader;
+ (id)preferenceSetsFileExtension;
+ (id)defaultKeyForExcludedBuiltInPreferenceSets;
+ (id)defaultKeyForCurrentPreferenceSet;
+ (id)builtInPreferenceSetsDirectoryURL;
+ (id)systemPreferenceSet;
+ (id)preferenceSetGroupingName;
+ (id)preferenceSetsManager;
@property BOOL contentNeedsSaving;
@property(readonly, getter=isBuiltIn) BOOL builtIn;
@property DVTCustomDataSpecifier *customDataSpecifier;
@property NSImage *image;
@property(readonly) NSString *localizedName;
@property(readonly) NSString *name;
- (id)dataRepresentationWithError:(id *)arg1;
- (id)initWithCustomDataSpecifier:(id)arg1 basePreferenceSet:(id)arg2;
- (id)initWithName:(id)arg1 dataURL:(id)arg2;
@end

@protocol DVTProgressReporting <NSObject>
@property(readonly) long long progress;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(id)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
@end

@protocol DVTScopeBarHost <NSObject>
@property(readonly) NSView *scopeBarsBaseView;

@optional
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@end

@protocol DVTSourceCodeComparisonAnnotationContext <NSObject>
@property(readonly) DVTDiffSession *diffSession;
@property(readonly) DVTDiffDescriptor *diffDescriptor;
@property(readonly) int dataSourceType;
@property(readonly) NSURL *documentURL;
@end

@protocol DVTSourceExpressionSource <NSObject, DVTInvalidation>
@property(readonly) DVTSourceExpression *mouseOverExpression;
@property(readonly) struct CGRect currentSelectionFrame;
@property(readonly) DVTSourceExpression *contextMenuExpression;
@property(readonly) DVTSourceExpression *selectedExpression;

@optional
@property(readonly) DVTSourceExpression *quickHelpExpression;
- (void)unregisterMouseOverExpressionObserver:(id)arg1;
- (void)registerMouseOverExpressionObserver:(id)arg1;
- (void)unregisterSelectedExpressionObserver:(id)arg1;
- (void)registerSelectedExpressionObserver:(id)arg1;
@end

@protocol DVTSplitViewDelegate <NSSplitViewDelegate>

@optional
- (id)splitView:(id)arg1 additionalEffectiveRectsOfDividerAtIndex:(long long)arg2;
- (void)splitViewDidEndLiveResize:(id)arg1;
- (void)splitViewWillStartLiveResize:(id)arg1;
- (id)splitView:(id)arg1 needsRectanglesForViewsWithState:(id)arg2 forSize:(struct CGSize)arg3;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(id)arg1;
@end

@protocol DVTStateRepositoryDelegate <NSObject>
- (void)stateRepositoryDidChange:(id)arg1;
@end

@protocol DVTStatefulObject <NSObject>
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)setStateToken:(id)arg1;

@optional
- (void)didPullStateFromRepository;
- (void)willPushStateToRepository;
@end

@protocol DVTTabbedWindowControlling <NSObject>
- (BOOL)isInFullScreenMode;
- (BOOL)closeKeyEquivalentClosesTab;
- (void)_closeWindowIfNoTabs;
- (void)_closeTabWithoutConfirming:(id)arg1 andInvalidate:(BOOL)arg2;
- (void)_closeTabWithoutConfirming:(id)arg1;
- (double)tabBarHeight;
- (void)moveTabFromOtherWindow:(id)arg1 toIndex:(unsigned long long)arg2 andShow:(BOOL)arg3;
- (void)replaceEmptyTabWithTabs:(id)arg1;
- (void)closeOtherTabs:(id)arg1;
- (void)closeTabOrWindow:(id)arg1;
- (void)closeTab:(id)arg1;
- (void)moveTabToNewWindowFromMenu:(id)arg1;
- (void)closeOtherTabsFromMenu:(id)arg1;
- (void)closeTabFromMenu:(id)arg1;
- (void)selectTab:(id)arg1;
- (id)createTabWithViewController:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createInactiveTabWithFrameName:(id)arg1;
- (id)createInactiveTab;
- (id)createTabWithFrameName:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createTabWithFrameName:(id)arg1;
- (id)createTab;
- (unsigned long long)selectedTabIndex;
- (id)selectedTab;
- (id)orderedTabViewItems;
- (id)tabBarView;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)isTabBarVisible;
- (void)cancelUpdateTabTitlesSoon;
- (void)tabBarViewUpdateTabTitlesNow:(id)arg1;
- (void)tabBarViewUpdateTabTitlesSoon:(id)arg1;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)canReceiveDragFromTabbedWindowControlling:(id)arg1;
- (BOOL)canCreateNewTab;
- (BOOL)canCloseSelectedTab;
- (void)toggleTabBar:(id)arg1;
- (void)newTab:(id)arg1;
@end

@protocol DVTTabbedWindowCreation <NSObject>
- (id)makeTabbedWindowControllerShowingWindow:(BOOL)arg1;
@end

@protocol DVTTabbedWindowTabContentControlling <NSObject>
@property(copy) NSString *userDefinedTabLabel;
@property(readonly) NSString *tabLabel;
@property NSDocument<DVTTabbedWindowCreation> *document;
@end

@protocol DVTTableViewDelegate <NSTableViewDelegate>

@optional
- (void)tableView:(id)arg1 concludeDragOperation:(id)arg2;
- (void)tableView:(id)arg1 draggingDidEnd:(id)arg2;
- (void)tableView:(id)arg1 draggingDidUpdate:(id)arg2;
- (void)tableView:(id)arg1 draggingDidEnter:(id)arg2;
- (unsigned long long)tableView:(id)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (BOOL)tableView:(id)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTTextAnnotationDelegate <NSObject>

@optional
- (double)sidebarMarkerOpacityForAnnotation:(id)arg1;
- (BOOL)shouldMoveCursorForAnnotation:(id)arg1;
- (id)contextMenuItemsForAnnotation:(id)arg1 inTextSidebarView:(id)arg2;
- (void)didDeleteOrReplaceParagraphForAnnotation:(id)arg1;
- (void)didRemoveAnnotation:(id)arg1;
- (void)didMoveAnnotation:(id)arg1;
- (unsigned long long)annotation:(id)arg1 willMoveToParagraphNumber:(unsigned long long)arg2;
- (void)didClickAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
@end

@protocol DVTTextFindable <NSObject>
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
@end

@protocol DVTTextReplacable <NSObject>
- (BOOL)replaceFindResults:(id)arg1 withString:(id)arg2 withError:(id *)arg3;

@optional
- (BOOL)replaceTextWithContentsOfURL:(id)arg1 error:(id *)arg2;
@end

@protocol DVTTileViewDelegate <NSObject>
- (void)tileView:(id)arg1 didChangeContextClickedObjectFrom:(id)arg2;
- (id)tileView:(id)arg1 typeCompletionStringForContentObject:(id)arg2;

@optional
- (void)userDidPressEscapeInTileView:(id)arg1;
- (void)userDidPressSpaceBarInTileView:(id)arg1;
- (void)tileView:(id)arg1 didProcessKeyEvent:(id)arg2;
- (void)tileView:(id)arg1 willProcessKeyEvent:(id)arg2;
- (id)tileView:(SEL)arg1 willProcessClick:(id)arg2;
- (id)tileView:(id)arg1 titleForContentObject:(id)arg2;
@end

@protocol DVTXMLUnarchiving <NSObject>
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@end

@protocol IDEActionSliceViewControllerDelegate
- (void)deleteActionSlice:(id)arg1;
@end

@protocol IDEActivityClickableLayer <NSObject>
@property BOOL disableClickHandler;
@property BOOL showsClickedState;
@property(copy) id clickHandlerBlock;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;
- (void)fireClickHandler;
@end

@protocol IDEApplicationEventDelegate <NSObject>

@optional
- (BOOL)application:(id)arg1 shouldSendEvent:(id)arg2;
@end

@protocol IDEAttachToProcessSheetDelegate
- (void)processIDEntered:(id)arg1 debuggerToUse:(id)arg2;
- (void)processNameEntered:(id)arg1 debuggerToUse:(id)arg2;
- (void)processInformationSelected:(id)arg1 debuggerToUse:(id)arg2;
@end

@protocol IDEBindableDeclarativeInspectorController <NSObject>
@property(readonly) id inspectedObject;
@property(readonly) NSArray *inspectedObjects;
@property(readonly) NSBundle *bundle;
- (void)reloadInspectorFromFileWhenKeyPathChanges:(id)arg1;
@end

@protocol IDEBlueprintProvider <NSObject>
- (id)testableProdiver;
- (id)blueprintForName:(id)arg1;
- (id)blueprintForIdentifier:(id)arg1;
- (id)organizationName;
- (id)name;
- (id)blueprints;
@end

@protocol IDEBuildFolderLocationPrefsSheetControllerDelegate <NSObject>
- (void)buildFolderLocationSheetDidEndWithBuildFolderLocationStyle:(int)arg1 buildSubfolderStyle:(int)arg2 customBuildSubfolderName:(id)arg3;
@end

@protocol IDEBuildable <NSObject>
@property(readonly) NSString *legacyIdentifier;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) BOOL hasRecursiveDependencyCycle;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly) NSString *buildableIdentifier;
- (id)createBuilderForBuildCommand:(int)arg1 withBuildTaskQueueSet:(id)arg2 parameters:(id)arg3 buildOnlyTheseFiles:(id)arg4 restorePersistedBuildResults:(BOOL)arg5;
- (id)implicitDependenciesForBuildParameters:(id)arg1 executionEnvironment:(id)arg2;
- (id)directDependencies;
- (id)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(id)arg2;
- (id)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (id)stringByEvaluatingPropertyString:(id)arg1 withBuildParameters:(id)arg2;
- (id)valueForBuildSetting:(id)arg1 withBuildParameters:(id)arg2;
- (id)allPropertyNamesWithBuildParameters:(id)arg1;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) IDEBuildableProductFileMap *buildableProductFileMap;
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *infoPlistIconPath;
@property(readonly) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (id)buildableProductFileMapForWorkspaceArenaSnapshot:(id)arg1;
- (id)filePathForBuildableProductFileMapForWorkspaceArenaSnapshot:(id)arg1;
- (id)filePathForBuildParameters:(id)arg1;
- (id)productTypeIdentifier;
@end

@protocol IDECapsuleListViewDataSource <NSObject>
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;

@optional
- (void)capsuleListViewDidCompleteLayout:(id)arg1;
- (void)capsuleListView:(id)arg1 didExpandRow:(long long)arg2;
- (void)capsuleListView:(id)arg1 didCollapseRow:(long long)arg2;
- (BOOL)capsuleListView:(id)arg1 writeRowWithIndex:(unsigned long long)arg2 toPasteboard:(id)arg3;
- (unsigned long long)capsuleListView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3;
- (BOOL)capsuleListView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3;
@end

@protocol IDECapsuleViewController <NSObject>
@property(readonly) NSString *titleForDisplay;

@optional
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) BOOL canUndisclose;
@property BOOL canRemoveItems;
@property BOOL canAddItems;
@property(readonly) BOOL canRename;
@property(readonly) BOOL canRemove;
@property(readonly) NSImage *icon;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)remove:(id)arg1;
@end

@protocol IDECapsuleViewDelegate <NSObject>

@optional
- (void)capsuleViewDidClickRemoveButton:(id)arg1;
- (BOOL)capsuleViewCanBeRemoved:(id)arg1;
- (void)capsuleView:(id)arg1 setTitle:(id)arg2;
- (id)capsuleViewTitleForEditing:(id)arg1;
- (BOOL)capsuleViewCanBeRenamed:(id)arg1;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(id)arg1;
- (BOOL)capsuleView:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)capsuleView:(id)arg1 validateDrop:(id)arg2;
- (id)supportedDragTypes;
@end

@protocol IDECommandHandler <NSObject, NSUserInterfaceValidations>
@end

@protocol IDECommandHandlerVendor <NSObject>
+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
@end

@protocol IDEComparisonEditorDataSource <NSObject>
- (id)documentForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;

@optional
- (id)contentStringForSecondaryEmptyEditorWithDocumentLocation:(id)arg1;
- (id)contentStringForPrimaryEmptyEditorWithDocumentLocation:(id)arg1;
- (BOOL)shouldShowEmptyEditorForSecondaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (BOOL)shouldShowEmptyEditorForPrimaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (id)documentForAncestorDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)navigableItemsForSecondaryDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 completionBlock:(id)arg3;
- (id)navigableItemsForPrimaryDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 completionBlock:(id)arg3;
- (BOOL)shouldSelectFirstDiff;
- (id)secondaryDocumentLocationForNavigableItem:(id)arg1;
- (id)primaryDocumentLocationForNavigableItem:(id)arg1;
@end

@protocol IDEComparisonEditorDelegate <IDEEditorDelegate>

@optional
- (BOOL)comparisonEditorShouldCloseDocumentsDuringWillOpenSpecifier:(id)arg1;
- (void)comparisonEditor:(id)arg1 didReplaceAncestorDocument:(id)arg2;
- (void)comparisonEditor:(id)arg1 willReplaceAncestorDocument:(id)arg2;
- (id)comparisonEditor:(id)arg1 substituteDocumentLocationForAncestorDocumentLocation:(id)arg2;
- (void)comparisonEditor:(id)arg1 didReplaceSecondaryDocument:(id)arg2;
- (void)comparisonEditor:(id)arg1 willReplaceSecondaryDocument:(id)arg2;
- (id)comparisonEditor:(id)arg1 substituteDocumentLocationForSecondaryDocumentLocation:(id)arg2;
- (void)comparisonEditor:(id)arg1 didReplacePrimaryDocument:(id)arg2;
- (void)comparisonEditor:(id)arg1 willReplacePrimaryDocument:(id)arg2;
- (id)comparisonEditor:(id)arg1 substituteDocumentLocationForPrimaryDocumentLocation:(id)arg2;
@end

@protocol IDEConsoleTextViewStandardIODelegate <NSObject>
@property(readonly) BOOL tracksInputHistoryForDebugger;
- (void)showNextCommandFromHistory:(id)arg1;
- (void)showPreviousCommandFromHistory:(id)arg1 currentStringAfterPrompt:(id)arg2;
- (void)consoleView:(id)arg1 didEndText:(id)arg2 forDebugger:(BOOL)arg3;
@end

@protocol IDEContainerDelegate <NSObject>

@optional
- (void)_container:(id)arg1 didChangeFromFilePath:(id)arg2 toFilePath:(id)arg3;
@end

@protocol IDEContainerErrorPresenter
- (BOOL)presentError:(id)arg1;
- (int)handleSaveError:(id)arg1 forContainer:(id)arg2 withAction:(int)arg3;
@end

@protocol IDEContainerReloadingDelegate
- (int)responseToExternalChangesToBackingFileForContainer:(id)arg1 fileWasRemoved:(BOOL)arg2;
@end

@protocol IDEContainerUnlockingDelegate
- (void)container:(id)arg1 attemptToUnlockItems:(id)arg2 inWorkspaces:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
@end

@protocol IDEDebugBarContentProvider <NSObject>
- (void)invalidate:(id)arg1;
- (void)provideContent:(id)arg1;

@optional
- (double)xOffsetForSharedLibrariesPopUpAnchoredOnDebugBar:(id)arg1;
- (struct CGRect)additionalGrabRectOfDebugBar:(id)arg1 inTermsOfView:(id)arg2;
@end

@protocol IDEDebugNavigableModel <NSObject>
@property(readonly) NSString *associatedProcessUUID;
@end

@protocol IDEDebugProcess <IDEDebugNavigableModel>
@property(copy) NSString *name;
- (id)contentDelegateUIExtensionIdentifier;
@end

@protocol IDEDebugSession <NSObject>
@property(readonly) NSMutableArray *loadedSharedLibraries;
@property(readonly) BOOL breakpointsActivated;
@property(readonly) id <IDEDebugProcess> process;
@property(readonly) int coalescedState;
@property int state;
- (BOOL)canContinueToLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2;
- (BOOL)consoleShouldTrackInputHistory;
- (void)loadDebugSymbolsForSharedLibrary:(id)arg1;
- (BOOL)shouldAcceptFromDebugSession:(id)arg1 error:(id *)arg2;
- (BOOL)shouldRelinquishToDebugSession:(id)arg1 error:(id *)arg2;
- (BOOL)debuggerSupportsPCDragging;
- (void)requestStop:(struct NSObject *)arg1;
- (void)requestContinueToLocation:(id)arg1 inContext:(struct NSObject *)arg2;
- (void)requestContinue:(struct NSObject *)arg1;
- (void)requestPause:(struct NSObject *)arg1;
- (void)requestStepOverSuspendOtherThreads:(struct NSObject *)arg1;
- (void)requestStepInSuspendOtherThreads:(struct NSObject *)arg1;
- (void)requestStepOverInstruction:(struct NSObject *)arg1;
- (void)requestStepIntoInstruction:(struct NSObject *)arg1;
- (void)requestStepOut:(struct NSObject *)arg1;
- (void)requestStepOverLine:(struct NSObject *)arg1;
- (void)requestStepIn:(struct NSObject *)arg1;
@end

@protocol IDEDebugSessionController <NSObject>
+ (id)descendantItemForRepresentedObject:(id)arg1 inRootNavigableItem:(id)arg2;
@property(readonly) id <IDEDebugSession> debugSession;
- (void)openMemoryBrowserInWorkspaceTabController:(id)arg1;
- (void)setSelectedNavigableItemFromUserInterface:(id)arg1;
- (void)mouseExitedSidebarLineArea;
- (void)mouseOverSidebarAtLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2 withScreenFrame:(struct CGRect)arg3;
- (id)initWithLaunchSession:(id)arg1 workspaceTabController:(id)arg2;
@end

@protocol IDEDebuggerBarConsoleInfoProvider <NSObject>
@property BOOL hasNewInterestingOutput;
@end

@protocol IDEDebuggerBarEditorInfoProvider <NSObject>
@property BOOL showDebuggerArea;
@end

@protocol IDEDocumentStructureProviding <NSObject>
@property(readonly) NSArray *ideTopLevelStructureObjects;
@end

@protocol IDEEditorAreaContainer
@property(readonly) IDEEditorArea *editorArea;
@end

@protocol IDEEditorContextDelegate <NSObject>

@optional
- (void)editorContext:(id)arg1 editorStateRepositoryDidChange:(id)arg2;
- (void)removeSplitForEditorContext:(id)arg1;
- (void)addSplitForEditorContext:(id)arg1;
- (id)editorContext:(id)arg1 navigableItemForEditingFromArchivedRepresentation:(id)arg2 error:(id *)arg3;
- (id)primaryEditorContext;
- (void)editorContextDidBecomeLastActiveEditor:(id)arg1;
- (BOOL)provideWorkspaceStructureForEmptyEditorContext:(id)arg1;
- (void)_editorContext:(id)arg1 openingEmptyEditorInsteadOfNavigableItem:(id)arg2;
- (BOOL)editorContext:(id)arg1 emptyEditorRootNavigableItem:(id *)arg2 selectedNavigableItem:(id *)arg3;
- (void)editorContext:(id)arg1 didUpdateMenu:(id)arg2;
- (BOOL)canCloseDocumentForEditorContext:(id)arg1;
- (void)editorContext:(id)arg1 didSetNavigableItem:(id)arg2;
- (id)editorContext:(id)arg1 relatedMenuItemsForNavItem:(id)arg2;
- (id)workspaceForEditorContext:(id)arg1;
@end

@protocol IDEEditorContextProtocol <NSObject>
@property(readonly) IDEEditor *editor;
@property(readonly) IDENavigableItemCoordinator *navigableItemCoordinator;
- (void)_openEmptyEditor;
- (void)_giveEditorFocusIfNeeded;
- (BOOL)_openEditorHistoryItem:(id)arg1 updateHistory:(BOOL)arg2;
- (id)currentHistoryItem;
@end

@protocol IDEEditorDelegate <NSObject>

@optional
- (id)scopeBarsManagerForEditor:(id)arg1;
@end

@protocol IDEEditorMenuStepperViewDelegate
- (void)selectPrevious;
- (void)selectNext;
- (BOOL)canMove;
- (id)menuForStepperView;
@end

@protocol IDEEditorMultipleContextDelegate <NSObject>
- (id)editorArea;
- (void)editorMultipleContext:(id)arg1 didSplitEditorContext:(id)arg2 creatingEditorContext:(id)arg3;
@end

@protocol IDEEditorSplittingControllerDelegate <NSObject>
- (void)removeSplitForSplittingController:(id)arg1;
- (void)addSplitForSplittingController:(id)arg1;
@end

@protocol IDEFilePickerViewDelegate <NSObject>

@optional
- (id)filePickerView:(id)arg1 outlineView:(id)arg2 toolTipForCell:(id)arg3 rect:(struct CGRect *)arg4 tableColumn:(id)arg5 item:(id)arg6 mouseLocation:(struct CGPoint)arg7;
- (BOOL)filePickerView:(id)arg1 outlineView:(id)arg2 isItemExpandable:(id)arg3;
- (void)filePickerView:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forTableColumn:(id)arg4 item:(id)arg5;
@end

@protocol IDEFilterControlBarTarget <NSObject>
- (id)filterDefinitionIdentifier;

@optional
- (id)view;
- (id)filterButtonAccessibilityDescription;
- (id)filterButtonToolTip;
- (id)filterButtonMenu;
@end

@protocol IDEFontAndColorItem
- (void)setFont:(id)arg1 forTheme:(id)arg2;
- (void)setColor:(id)arg1 forTheme:(id)arg2;
- (id)fontForTheme:(id)arg1;
- (id)colorForTheme:(id)arg1;
- (id)displayName;
@end

@protocol IDEInspectorMatching <NSObject>
- (id)applicableInspectorsForCategory:(id)arg1 suggestion:(id)arg2;
@end

@protocol IDEInspectorPropertyContainingView <NSObject>
@property(readonly) NSArray *orderedInspectorProperties;
@end

@protocol IDEKeyBindingFieldCellDelegate <NSObject>

@optional
- (void)keyBindingFieldCellWillRemoveKeyboardShortcut:(id)arg1;
- (void)keyBindingFieldCellDidAddKeyboardShortcut:(id)arg1;
- (void)keyBindingCellFieldDidEndEditing:(id)arg1;
- (id)keyBindingFieldCell:(id)arg1 validatedKeyboardShortcut:(id)arg2;
- (id)keyBindingFieldCell:(id)arg1 alternateKeyBindingsForKeyBinding:(id)arg2;
- (BOOL)keyBindingFieldCellAllowsMultipleKeyboardShortcut:(id)arg1;
- (BOOL)keyBindingFieldCell:(id)arg1 keyboardShortcutIsPrefix:(id)arg2;
@end

@protocol IDELegacyTargetInfo <NSObject>
@property(readonly) NSArray *legacyArguments;
@property(readonly) NSArray *legacyEnvironment;
@end

@protocol IDEMediaLibraryDelegate <NSObject>

@optional
- (void)mediaLibraryController:(id)arg1 populatePasteboard:(id)arg2 withMediaResources:(id)arg3;
- (id)mediaRepositoriesForMediaLibraryController:(id)arg1;
@end

@protocol IDEMustCloseOnQuitDocument <NSObject>
- (BOOL)canCloseDocumentAtQuit;
@end

@protocol IDENavigableItemCoordinatorDelegate <NSObject>

@optional
- (id)navigableItem:(id)arg1 childRepresentedObjectsForArray:(id)arg2;
- (id)navigableItemCoordinator:(id)arg1 editorDocumentForNavigableItem:(id)arg2;
@end

@protocol IDENavigableItemFileReferenceProxy <NSObject>
@property(readonly) IDENavigableItem *primaryChildItem;

@optional
- (BOOL)showSubitems;
@end

@protocol IDENavigableItemRepresentation <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSImage *navigableItem_image;
- (id)navigableItem_contentDocumentLocationInDocumentURL:(id)arg1;
@end

@protocol IDENavigationHUDBorderedLayer <NSObject>
@property int highlightSides;
@property int borderSides;
@end

@protocol IDENavigationHUDNavigableLayer <NSObject>
- (id)selectionForNavigatingRight;
- (id)selectionForNavigatingLeft;
- (id)selectionForNavigatingDown;
- (id)selectionForNavigatingUp;
@end

@protocol IDENavigationHUDSelectableLayer <NSObject>
@property(readonly) BOOL representativeSelectionIsFinalForSingleMouseUp;
@property(readonly) IDENavigationHUDSelection *representativeSelection;
@end

@protocol IDENavigationHUDSelectionDrivenLayer <NSObject>
@property(copy) IDENavigationHUDSelection *selection;
@end

@protocol IDENavigationHUDWindowLevelNavigableLayer <IDENavigationHUDNavigableLayer>
- (id)selectionForNavigatingRightOneTab;
- (id)selectionForNavigatingLeftOneTab;
@end

@protocol IDENavigatorOutlineViewLoadingDelegate <NSObject>
- (void)outlineViewDidDrawInitialContent:(id)arg1;
- (void)outlineViewWillDrawInitialContent:(id)arg1;
@end

@protocol IDEOpenQuicklyJumpToSupport <NSObject>
- (id)currentEditorContext;
- (id)documentLocationForOpenQuicklyQuery:(id)arg1;
@end

@protocol IDEOpenQuicklyQueryDelegate <NSObject>
- (void)openQuicklyQueryDidUpdate:(id)arg1;
@end

@protocol IDEOpenRequest <NSObject>
- (void)cancel;
- (BOOL)isCancelled;
- (BOOL)isFinished;
@end

@protocol IDEOrganizerSource <NSObject, DVTStatefulObject>

@optional
- (void)organizerSourceWillAppearInWindowController:(id)arg1;
- (void)openFileURL:(id)arg1 withFileType:(id)arg2;
- (void)searchWithString:(id)arg1;
@end

@protocol IDEPathCellDelegate <NSPathCellDelegate>

@optional
- (id)pathCell:(id)arg1 accessibilityDescriptionForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)pathCellNoSelectionTitle;
- (id)pathCell:(id)arg1 menuItemForNavigableItem:(id)arg2 defaultMenuItem:(id)arg3;
- (void)pathCell:(id)arg1 didUpdateMenu:(id)arg2;
- (id)pathCell:(id)arg1 childItemsForItem:(id)arg2;
- (BOOL)pathCell:(id)arg1 shouldPopUpMenuForPathComponentCell:(id)arg2 item:(id)arg3;
- (BOOL)pathCell:(id)arg1 shouldSeparateDisplayOfChildItemsForItem:(id)arg2;
@end

@protocol IDEReadOnlyItem <NSObject>
@property(readonly) NSURL *readOnlyItemURL;
@property(readonly) int readOnlyStatus;
- (BOOL)makeWritableWithError:(id *)arg1;
@end

@protocol IDERefactoringResult <NSObject>
- (BOOL)writesOwnTempResults;
- (void)writeTempResults;
- (id)resultNewFileName;
- (id)resultTempFilePath;
- (id)resultFilePath;
- (BOOL)resultIsEditable;

@optional
- (id)resultReferencedFiles;
@end

@protocol IDERefactoringSessionDelegate
- (void)refactoringSession:(id)arg1 didProduceError:(id)arg2;
- (void)refactoringSession:(id)arg1 didCalculateResults:(id)arg2 issues:(id)arg3;
- (void)refactoringSession:(id)arg1 willAnalyzeFile:(id)arg2 progress:(double)arg3;
- (void)refactoringSession:(id)arg1 didProduceInitialData:(id)arg2;
@end

@protocol IDEReviewFilesDataSource <NSObject>
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)issueNavigableItems;
- (id)flatNavigableItems;
- (id)fileSystemNavigableItems;
- (id)workspaceNavigableItems;

@optional
- (void)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forNavigableItem:(id)arg4;
- (id)reviewFilesNavigator:(id)arg1 importantFilePathsForNavigableItem:(id)arg2 excludingDisabledItems:(id)arg3;
@end

@protocol IDEReviewFilesViewControllerDelegate <NSObject>

@optional
- (void)reviewFilesViewController:(id)arg1 didInstallComparisonEditor:(id)arg2;
- (void)willOpenDocumentLocation:(id)arg1 completionBlock:(id)arg2;
@end

@protocol IDEScopeableView <NSObject>
- (void)addScopeChoice:(id)arg1 tag:(long long)arg2;
@end

@protocol IDESelectionSource <NSObject>
@property(readonly) IDEWorkspaceTabController *workspaceTabController;
@property(readonly) IDESelection *contextMenuSelection;
@property(readonly) IDESelection *outputSelection;
@end

@protocol IDESnapshotConfirmationDelegate <NSObject>
- (void)requestSnapshotConfirmationForOperationName:(id)arg1 inWorkspace:(id)arg2 completionBlock:(id)arg3;
@end

@protocol IDESourceCodeGenerationDestination <NSObject>
- (id)sourceCodeGenerator:(id)arg1 commitInsertionOfSourceCodeForCompositeResult:(id)arg2 error:(id *)arg3;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCAtSynthesizeWithName:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCPropertyReleaseForTeardownWithName:(id)arg2 type:(id)arg3 inClassNamed:(id)arg4 options:(id)arg5 error:(id *)arg6;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCPropertyDeclarationWithName:(id)arg2 type:(id)arg3 inClassNamed:(id)arg4 options:(id)arg5 error:(id *)arg6;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCInstanceVariableReleaseForTeardownWithName:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCInstanceVariableDeclarationWithName:(id)arg2 type:(id)arg3 inClassNamed:(id)arg4 options:(id)arg5 error:(id *)arg6;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCClassMethodDefinitionWithName:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCClassMethodDeclarationWithName:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCInstanceMethodDefinitionWithName:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)sourceCodeGenerator:(id)arg1 prepareToAddObjectiveCInstanceMethodDeclarationWithName:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)supportedSourceCodeLanguagesForSourceCodeGeneration;
@end

@protocol IDESourceControlConflictResolutionControllerContainer <NSObject>
@property(readonly) IDESourceControlConflictResolutionController *conflictResolutionController;
@end

@protocol IDESourceControlLogControllerDelegate <NSObject>
- (void)sourceControlLogViewController:(id)arg1 changeToRevision:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 diffWithRevision:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 compareToRevision:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 compareRevisionToPreviousRevision:(id)arg2;
@end

@protocol IDESourceControlNameTokenViewDelegate <NSObject>
- (void)startChatWithToken:(id)arg1;
- (id)menuForNameToken:(id)arg1;
@end

@protocol IDESourceExpressionSource <DVTSourceExpressionSource>
- (BOOL)expressionContainsExecutableCode:(id)arg1;
- (BOOL)isExpressionFunctionOrMethodCall:(id)arg1;
- (BOOL)isExpressionInFunctionOrMethodBody:(id)arg1;
- (BOOL)isExpressionFunctionOrMethodDefinition:(id)arg1;
- (BOOL)isExpressionWithinComment:(id)arg1;
- (void)symbolsForExpression:(id)arg1 inQueue:(struct dispatch_queue_s *)arg2 completionBlock:(id)arg3;

@optional
- (id)importStringInExpression:(id)arg1;
@end

@protocol IDEStructureEditing
- (BOOL)structureEditSetName:(id)arg1 inContext:(id)arg2;
- (BOOL)canStructureEditName;
- (BOOL)structureEditRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)canStructureEditRemoveSubitemsAtIndexes:(id)arg1;
- (id)structureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2 createGroupsForFolders:(BOOL)arg3;
- (BOOL)canStructureEditInsertFileURLs:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)structureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)canStructureEditInsertSubitems:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)allowUserModificationOfSubitems;
@end

@protocol IDEStructureEditingContext
@property(readonly) IDEWorkspace *structureEditWorkspace;
@end

@protocol IDEStructureEditingDraggingSource
- (BOOL)structureEditingWriteItems:(id)arg1 toPasteboard:(id)arg2;
@end

@protocol IDEStructureEditingDropTarget
- (BOOL)structureEditingAcceptInsertionOfSubitemsForContext:(id)arg1 atIndex:(long long)arg2;
- (BOOL)structureEditingValidateInsertionOfSubitemsForContext:(id)arg1 atIndex:(long long)arg2;
- (id)insertSubitemsAssistantContext;
@end

@protocol IDEStructureEditingGroupingTarget
- (BOOL)structureEditingGroupSubitemsAtIndexes:(id)arg1 groupIndex:(long long *)arg2;
- (BOOL)structureEditingCanGroupSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditingAddNewSubgroupAtIndex:(long long)arg1;
- (BOOL)structureEditingCanAddNewSubgroupAtIndex:(long long)arg1;
@end

@protocol IDEStructureEditingRemoveSubitemsTarget
- (BOOL)structureEditingRemoveSubitemsAtIndexes:(id)arg1;
- (id)structureEditingFileURLsForSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditingCanRemoveSubitemsAtIndexes:(id)arg1;
@end

@protocol IDEStructureEditingTarget
- (id)structureEditingRemoveSubitemsTargetForParentNavigableItem:(id)arg1;
- (id)structureEditingGroupingTargetForProposedNavigableItem:(id)arg1 proposedChildIndex:(long long)arg2 actualNavigableItem:(id *)arg3 actualChildIndex:(long long *)arg4;
- (id)structureEditingTargetForProposedNavigableItem:(id)arg1 proposedChildIndex:(long long)arg2 actualNavigableItem:(id *)arg3 actualChildIndex:(long long *)arg4;
- (id)structureEditingDraggingSource;
@end

@protocol IDEStructureEditingWorkspaceTabContext <IDEStructureEditingContext>
@property(readonly) IDEWorkspaceTabController *structureEditWorkspaceTabController;
@end

@protocol IDETemplateOptionParent <NSObject>
- (void)valueDidChangeForOption:(id)arg1;
- (id)identifier;
@end

@protocol IDETemplateSupportingNavigator <NSObject>
- (void)addTemplatesFromCompletedContext:(id)arg1;
- (void)setupTemplateContext:(id)arg1;
@end

@protocol IDEToolbarItemProvider <NSObject>
+ (id)itemForItemIdentifier:(id)arg1 forToolbarInWindow:(id)arg2;
@end

@protocol IDEVersionedFileManagerDelegate
- (BOOL)canMoveItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 completionBlockDispatchQueue:(struct dispatch_queue_s **)arg3 completionBlock:(id *)arg4;
- (void)willRemoveItemsAtFilePaths:(id)arg1;
- (BOOL)canRemoveItemsAtFilePaths:(id)arg1 completionBlockDispatchQueue:(struct dispatch_queue_s **)arg2 completionBlock:(id *)arg3;
@end

@protocol IDEWorkspaceDelegate <IDEContainerDelegate>
- (void)_workspace:(id)arg1 failedToResolveContainerForProjectFile:(id)arg2;

@optional
- (void)_workspace:(id)arg1 didChangeSimpleFilesFocusedTo:(BOOL)arg2;
- (void)_workspace:(id)arg1 didChangeFinishedLoadingTo:(BOOL)arg2;
@end

@protocol IDEWorkspaceDocumentProvider <NSObject>
@property(readonly) IDEWorkspaceDocument *workspaceDocument;
@end

@protocol IDEWorkspaceUserSettingsBuildFolderLocationSheetControllerDelegate <NSObject>
- (id)currentDerivedDataFolderPath;
- (void)buildFolderLocationSheetDidEndWithBuildLocationStyle:(int)arg1 buildSubfolderNameStyle:(int)arg2 buildSubfolderCustomName:(id)arg3;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (float)animation:(id)arg1 valueForProgress:(float)arg2;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (BOOL)animationShouldStart:(id)arg1;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeScreenParameters:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidUpdate:(id)arg1;
- (void)applicationWillUpdate:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)applicationDidUnhide:(id)arg1;
- (void)applicationWillUnhide:(id)arg1;
- (void)applicationDidHide:(id)arg1;
- (void)applicationWillHide:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)application:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)application:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (id)application:(id)arg1 willPresentError:(id)arg2;
- (id)applicationDockMenu:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (unsigned long long)application:(id)arg1 printFiles:(id)arg2 withSettings:(id)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(id)arg1 printFile:(id)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(id)arg2;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (BOOL)application:(id)arg1 openTempFile:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(id)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (id)outlineView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedItems:(id)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(id)arg4;
- (id)outlineView:(id)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
@end

@protocol NSPasteboardReading <NSObject>
+ (id)readableTypesForPasteboard:(id)arg1;

@optional
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;

@optional
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
@end

@protocol NSPathCellDelegate <NSObject>

@optional
- (void)pathCell:(id)arg1 willPopUpMenu:(id)arg2;
- (void)pathCell:(id)arg1 willDisplayOpenPanel:(id)arg2;
@end

@protocol NSPathControlDelegate <NSObject>

@optional
- (void)pathControl:(id)arg1 willPopUpMenu:(id)arg2;
- (void)pathControl:(id)arg1 willDisplayOpenPanel:(id)arg2;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
@end

@protocol NSSoundDelegate <NSObject>

@optional
- (void)sound:(id)arg1 didFinishPlaying:(BOOL)arg2;
@end

@protocol NSSpeechSynthesizerDelegate <NSObject>

@optional
- (void)speechSynthesizer:(id)arg1 didEncounterSyncMessage:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didEncounterErrorAtIndex:(unsigned long long)arg2 ofString:(id)arg3 message:(id)arg4;
- (void)speechSynthesizer:(id)arg1 willSpeakPhoneme:(short)arg2;
- (void)speechSynthesizer:(id)arg1 willSpeakWord:(struct _NSRange)arg2 ofString:(id)arg3;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (id)undoManagerForTextView:(id)arg1;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (id)textView:(id)arg1 URLForContentsOfTextAttachment:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(id)arg1;
- (void)toolbarWillAddItem:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id)arg1;
@end

@protocol NSValidatedUserInterfaceItem
- (long long)tag;
- (SEL)action;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol NSWindowRestoration <NSObject>
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
@end

@interface IDEAlertEventTableCell : NSTextFieldCell <IDEKeyBindingFieldCellDelegate>
{
    BOOL _active;
    BOOL _allowsKeyBindings;
    BOOL _editingKeyboardShortcut;
    IDEAlertEvent *_alertEvent;
    IDEKeyBindingFieldCell *_keybindingFieldCell;
    IDEKeyBindingFieldCell *_editingKeybindingFieldCell;
}

+ (void)initialize;
@property(retain, nonatomic) IDEAlertEvent *alertEvent; // @synthesize alertEvent=_alertEvent;
@property(nonatomic) BOOL allowsKeyBindings; // @synthesize allowsKeyBindings=_allowsKeyBindings;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)keyBindingFieldCellWillRemoveKeyboardShortcut:(id)arg1;
- (void)keyBindingFieldCellDidAddKeyboardShortcut:(id)arg1;
- (id)keyBindingFieldCell:(id)arg1 validatedKeyboardShortcut:(id)arg2;
- (BOOL)keyBindingFieldCellAllowsMultipleKeyboardShortcut:(id)arg1;
- (void)endEditing:(id)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_controlViewInResponderChain:(id)arg1;
- (id)editingKeyBinding;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (id)fieldEditorForView:(id)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)keyboardShortcutHitRectForBounds:(struct CGRect)arg1;
- (struct CGRect)keyboardShortcutHitRectForBounds:(struct CGRect)arg1 withString:(id)arg2;
- (struct CGRect)keyboardShortcutRectForBounds:(struct CGRect)arg1;
- (struct CGRect)keyboardShortcutRectForBounds:(struct CGRect)arg1 withString:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (id)keyboardShortcut;
- (id)customAlertEvent;
- (id)keybindingFieldCell;

@end

@interface IDEAlertsMenuDelegate : NSObject
{
}

+ (void)registerMenuKeyBindingsToMenuKeyBindingSet:(id)arg1;
+ (id)_findMenuItemTitled:(id)arg1 inMenu:(id)arg2;
- (void)menuWillOpen:(id)arg1;
- (void)buildMenu:(id)arg1;
- (void)_buildMenu:(id)arg1;
- (void)_keyBindingDidChangeKeyboardShortcuts:(id)arg1;
- (void)performAlertEvent:(id)arg1;
- (void)editAlerts:(id)arg1;
- (id)init;

@end

@interface IDECustomAlertEvent : IDEAlertEvent
{
    IDEKeyboardShortcut *_keyboardShortcut;
}

+ (id)customAlertEventForIdentifier:(id)arg1;
+ (id)customAlertEvents;
+ (void)initialize;
@property(retain, nonatomic) IDEKeyboardShortcut *keyboardShortcut; // @synthesize keyboardShortcut=_keyboardShortcut;
- (id)description;
- (void)remove;
- (void)saveToUserDefaults;
- (id)propertyList;
- (id)alertDefaults;
- (void)changeKeyboardShortcut:(id)arg1;
- (id)keyBinding;
- (void)dealloc;
- (id)initWithDefaults:(id)arg1;
- (id)init;

@end

@interface _IDESourceControlOperationInfoInvalidationToken : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    id _invalidationBacktrace;
    id <DVTInvalidation> _currentConflictDetectionToken;
}

@property id <DVTInvalidation> currentConflictDetectionToken; // @synthesize currentConflictDetectionToken=_currentConflictDetectionToken;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)invalidate;
@property(readonly, getter=isValid) BOOL valid;

@end

@interface IDESourceControlOperationInfo : NSObject <DVTInvalidation>
{
    NSOperationQueue *_queue;
    IDESourceControlWorkingTree *_workingTree;
    IDEWorkspace *_workspace;
    NSArray *_itemsToOperateOn;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _isInvalidated;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property NSArray *itemsToOperateOn; // @synthesize itemsToOperateOn=_itemsToOperateOn;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(retain) IDESourceControlWorkingTree *workingTree; // @synthesize workingTree=_workingTree;
- (id)processInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)init;

@end

@interface IDESourceControlUpdateOperationInfo : IDESourceControlOperationInfo
{
    NSMutableDictionary *_itemsWithConflicts;
    NSString *_currentRevisionIdentifier;
    NSString *_remoteRevisionIdentifier;
    NSString *_ancestorRevisionIdentifier;
}

@property(readonly) NSMutableDictionary *itemsWithConflicts; // @synthesize itemsWithConflicts=_itemsWithConflicts;
@property(copy) NSString *ancestorRevisionIdentifier; // @synthesize ancestorRevisionIdentifier=_ancestorRevisionIdentifier;
@property(copy) NSString *remoteRevisionIdentifier; // @synthesize remoteRevisionIdentifier=_remoteRevisionIdentifier;
@property(copy) NSString *currentRevisionIdentifier; // @synthesize currentRevisionIdentifier=_currentRevisionIdentifier;
- (id)processInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;
- (int)statusForWorkingTreeItem:(id)arg1;
@property(readonly) unsigned long long conflictCount;

@end

@interface IDESourceControlPullOperationInfo : IDESourceControlUpdateOperationInfo
{
    IDESourceControlRemote *_remote;
    IDESourceControlBranch *_remoteBranch;
    BOOL _successfulFastForward;
}

@property(readonly) BOOL successfulFastForward; // @synthesize successfulFastForward=_successfulFastForward;
@property IDESourceControlBranch *remoteBranch; // @synthesize remoteBranch=_remoteBranch;
@property IDESourceControlRemote *remote; // @synthesize remote=_remote;
- (id)processInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;
- (int)statusForWorkingTreeItem:(id)arg1;

@end

@interface IDESourceControlPushOperationInfo : IDESourceControlOperationInfo
{
    IDESourceControlRemote *_remote;
    IDESourceControlBranch *_remoteBranch;
}

@property IDESourceControlBranch *remoteBranch; // @synthesize remoteBranch=_remoteBranch;
@property IDESourceControlRemote *remote; // @synthesize remote=_remote;
- (id)processInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;

@end

@interface IDESourceControlMergeOperationInfo : IDESourceControlOperationInfo
{
    IDESourceControlBranch *_mergeBranch;
    NSString *_currentRevisionIdentifier;
    NSString *_branchRevisionIdentifier;
    NSString *_ancestorRevisionIdentifier;
    NSString *_remoteURLToMerge;
    NSMutableDictionary *_itemsWithConflicts;
}

@property(readonly) NSMutableDictionary *itemsWithConflicts; // @synthesize itemsWithConflicts=_itemsWithConflicts;
@property(readonly) NSString *remoteURLToMerge; // @synthesize remoteURLToMerge=_remoteURLToMerge;
@property(copy) NSString *ancestorRevisionIdentifier; // @synthesize ancestorRevisionIdentifier=_ancestorRevisionIdentifier;
@property(copy) NSString *branchRevisionIdentifier; // @synthesize branchRevisionIdentifier=_branchRevisionIdentifier;
@property(copy) NSString *currentRevisionIdentifier; // @synthesize currentRevisionIdentifier=_currentRevisionIdentifier;
@property IDESourceControlBranch *mergeBranch; // @synthesize mergeBranch=_mergeBranch;
- (id)processInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;
- (id)processMergeInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;
- (id)processDistributedMergeInfoWithProgressBlock:(id)arg1 isSingleOperation:(void)arg2 completionBlock:(BOOL)arg3;
@property(readonly) unsigned long long conflictCount;

@end

@interface IDEVariablesViewNode : NSObject <NSPasteboardWriting, NSCopying>
{
    NSString *_name;
    id <IDEDataValue> _dataValue;
    IDEVariablesViewNode *_parent;
    id _childObserver;
    NSPointerArray *_children;
    NSArray *_filteredChildren;
    NSPredicate *_childFilter;
    unsigned long long _type;
    BOOL _expanded;
}

+ (id)keyPathsForValuesAffectingFilteredChildren;
+ (id)keyPathsForValuesAffectingChildValuesCountValid;
+ (id)pointerFunctions;
+ (id)rootWithChildren:(id)arg1;
@property BOOL expanded; // @synthesize expanded=_expanded;
@property NSPredicate *childFilter; // @synthesize childFilter=_childFilter;
@property IDEVariablesViewNode *parent; // @synthesize parent=_parent;
@property id <IDEDataValue> dataValue; // @synthesize dataValue=_dataValue;
@property(readonly) unsigned long long type; // @synthesize type=_type;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)objectInChildrenProxyAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfChildrenProxy;
- (void)_formattedChildrenChanged:(id)arg1;
@property(readonly) NSArray *children;
- (id)_childVariableNodeForChildDataValue:(id)arg1;
- (void)_calculateAndSetFilteredChildren;
@property(readonly) NSArray *filteredChildren;
- (void)setChildren:(id)arg1;
- (BOOL)shouldShowAsFilteredChild;
@property(readonly) BOOL childValuesCountValid;
@property(readonly) BOOL hasChildren;
@property(readonly) BOOL isTopLevelNode;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) NSString *fullNamePath;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id)initWithDataValue:(id)arg1 type:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEVariableRootNode : IDEVariablesViewNode
{
}

- (BOOL)childValuesCountValid;
- (BOOL)hasChildren;
- (id)name;
- (id)initWithChildren:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEDebugBar : IDEViewController
{
    id <IDEDebugBarContentProvider> _contentProvider;
    id <IDEDebuggerBarEditorInfoProvider> _editorInfoProvider;
    id <IDEDebuggerBarConsoleInfoProvider> _consoleInfoProvider;
    NSButton *_showHideDebuggerAreaButton;
    id <DVTObservingToken> _showDebuggerAreaObserverToken;
    id <DVTObservingToken> _hasNewInterestingOutputObserverToken;
    DVTBorderedView *_controlsContainer;
    struct {
        unsigned int _contentProviderRespondsToAdditionalGrabRect:1;
        unsigned int _contentProviderRespondsToXOffsetForSharedLibraries:1;
        unsigned int _reserved:6;
    } _ideDebugBarFlags;
    BOOL _viewDidInstall;
}

+ (id)_hideDebuggerImage;
+ (id)_showDebuggerWithConsoleOutputImage;
+ (id)_showDebuggerImage;
@property id <IDEDebuggerBarConsoleInfoProvider> consoleInfoProvider; // @synthesize consoleInfoProvider=_consoleInfoProvider;
@property id <IDEDebuggerBarEditorInfoProvider> editorInfoProvider; // @synthesize editorInfoProvider=_editorInfoProvider;
@property id <IDEDebugBarContentProvider> contentProvider; // @synthesize contentProvider=_contentProvider;
- (void)_setTooltipWithKey:(id)arg1 axDescriptionKey:(id)arg2 forButton:(id)arg3;
- (void)_doToolTipWorkaround;
- (void)_hasNewInterestingOutputChanged;
- (void)_showDebuggerAreaChanged;
- (void)showSharedLibrariesPopUp;
- (double)_sharedLibrariesPopUpXOffset;
- (struct CGRect)additionalGrabRectInTermsOfView:(id)arg1;
- (void)removeControlUsingAnimation:(id)arg1;
- (void)addControlFillingRemainingSpace:(id)arg1;
- (id)_createButton:(Class)arg1 frame:(struct CGRect)arg2 image:(id)arg3 alternateImage:(id)arg4 target:(id)arg5 action:(SEL)arg6;
- (id)addButtonUsingButtonClass:(Class)arg1 image:(id)arg2 alternateImage:(id)arg3 target:(id)arg4 action:(SEL)arg5;
- (id)addButtonUsingAnimationAfterControlWithTag:(long long)arg1 image:(id)arg2 alternateImage:(id)arg3 target:(id)arg4 action:(SEL)arg5;
- (id)addButtonWithImage:(id)arg1 alternateImage:(id)arg2 target:(id)arg3 action:(SEL)arg4;
- (void)_createAndAddShowHideDebuggerButton;
- (void)_updateContentProviderRespondsToFlags;
- (void)installDefaultContentProvider;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface IDESourceControlSSLAuthenticationWindowController : NSWindowController <NSURLConnectionDelegate>
{
    NSTextField *messageTextField;
    NSTextField *infoTextField;
    NSTextField *usernameTextField;
    NSTextField *statusTextField;
    NSSecureTextField *passwordTextField;
    NSProgressIndicator *progressIndicator;
    IDESourceControlRepository *_repository;
    id _completionBlock;
    NSURLAuthenticationChallenge *_challenge;
    NSTimer *_autodismissTimer;
    long long _count;
    BOOL _isCheckingPassword;
    BOOL _forceLoginPromptWhenSuccess;
}

@property(copy) id completionBlock; // @synthesize completionBlock=_completionBlock;
@property BOOL isCheckingPassword; // @synthesize isCheckingPassword=_isCheckingPassword;
- (void)finishAuthenticationSetup;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (BOOL)showCertificatePanelForError:(id)arg1;
- (void)dontAsk:(id)arg1;
- (void)cancel:(id)arg1;
- (void)ok:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)autodismiss;
- (void)beginAutodismissCountdown;
- (void)presentWindow;
- (id)_openWindowTerminationDisablingReason;
- (void)testCredentialsWithCompletionBlock;
- (void)presentAuthenticationWindowForRepository:(id)arg1 forceLoginPromptWhenSuccess:(BOOL)arg2;
- (id)windowNibName;

@end

@interface IDESourceControlLoginStepViewController : IDESourceControlRepositoryCreationStep
{
    DVTBorderedView *_borderedView;
    NSTextField *_usernameTag;
    NSTextField *_passwordTag;
}

+ (id)defaultViewNibName;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (void)viewDidInstall;

@end

@interface IDEAnalyzeActionSheetController : IDEViewController
{
    IDEScheme *_runContext;
    IDEWorkspace *_workspace;
    IDEAnalyzeSchemeAction *_runPhase;
    NSBox *_box;
}

+ (void)initialize;
@property IDEAnalyzeSchemeAction *runPhase; // @synthesize runPhase=_runPhase;
@property IDEScheme *runContext; // @synthesize runContext=_runContext;
@property IDEWorkspace *workspace;
- (void)updateBoundContent;
- (void)updateBoundIDEWorkspaceBinding;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;
- (void)loadView;

@end

@interface IDEAnalyzeSubActionPlaceholderView : NSView
{
    NSString *_placeholderMessage;
}

@property(copy) NSString *placeholderMessage; // @synthesize placeholderMessage=_placeholderMessage;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEAnalyzePreActionRunPhaseSheetController : IDEViewController
{
}

- (void)loadView;

@end

@interface IDEAnalyzePostActionRunPhaseSheetController : IDEViewController
{
}

- (void)loadView;

@end

@interface IDEShowUtilityAreaAlert : IDEAlert
{
    int _action;
}

@property(nonatomic) int action; // @synthesize action=_action;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)actions;

@end

@interface IDEShowUtilityAreaAlertViewController : IDEAlertViewController
{
}

@end

@interface IDEShowToolbarAlert : IDEAlert
{
    int _action;
    id _observationToken;
}

@property(nonatomic) int action; // @synthesize action=_action;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (void)performAction:(int)arg1 onWindow:(id)arg2 afterDelay:(double)arg3;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)actions;

@end

@interface IDEShowToolbarAlertViewController : IDEAlertViewController
{
}

@end

@interface IDEShowEditorAlert : IDEAlert
{
    int _action;
    int _visibility;
}

@property(nonatomic) int visibility; // @synthesize visibility=_visibility;
@property(nonatomic) int action; // @synthesize action=_action;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)visibilities;
- (id)actions;

@end

@interface IDEShowEditorAlertViewController : IDEAlertViewController
{
}

@end

@interface IDEEnterFullScreenAlert : IDEAlert
{
    int _action;
}

@property(nonatomic) int action; // @synthesize action=_action;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (void)prepareToRunForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3;
- (BOOL)_isEnabledForEvent:(id)arg1 withContext:(id)arg2;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)actions;

@end

@interface IDEEnterFullScreenAlertViewController : IDEAlertViewController
{
}

@end

@interface IDESourceControlURLStepViewController : IDESourceControlURLValidationStep
{
    DVTBorderedView *_borderedView;
}

+ (id)keyPathsForValuesAffectingCanFinish;
+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)defaultViewNibName;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (id)extensions;
- (void)viewDidInstall;

@end

@interface IDESourceControlRepositoryCreationStep : DVTViewController
{
    IDESourceControlRepositoryCreationContext *_context;
    BOOL _showColoredBackground;
    BOOL _forPanel;
}

+ (void)initialize;
+ (Class)classForStepIdentifier:(id)arg1;
@property BOOL forPanel; // @synthesize forPanel=_forPanel;
@property BOOL showColoredBackground; // @synthesize showColoredBackground=_showColoredBackground;
@property IDESourceControlRepositoryCreationContext *context; // @synthesize context=_context;
- (void)addBindings;
- (void)removeBindings;
- (void)commitInformation;
@property(readonly) NSString *identifier;
@property(readonly) NSString *nextStepIdentifier;
@property(readonly) BOOL canFinish;
@property(readonly) BOOL canGoBack;
@property(readonly) BOOL hidePreviousButton;
@property(readonly) BOOL canGoForward;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEComparisonEditor : IDEEditor <NSSplitViewDelegate, IDESourceControlLogControllerDelegate, IDEPathCellDelegate>
{
    IDEComparisonNavTimelineBar *_navTimelineBar;
    IDEComparisonToolbar *_comparisonToolbar;
    NSSplitView *_aboveView;
    DVTReplacementView *_logReplacementView;
    DVTReplacementView *_submodeReplacementView;
    id <IDEComparisonEditorDataSource> _dataSource;
    id _frameResizeToken;
    NSMutableArray *_navItemCoordinatorDidForgetItemsTokens;
    IDENavigableItemCoordinator *_primaryNavigableItemCoordinator;
    IDENavigableItemCoordinator *_secondaryNavigableItemCoordinator;
    IDENavigableItem *_primaryRootNavigableItem;
    IDENavigableItem *_secondaryRootNavigableItem;
    IDENavigableItem *_primarySubNavigableItem;
    IDENavigableItem *_secondarySubNavigableItem;
    NSMutableSet *_documentsToRelease;
    NSMutableSet *_documentsToClose;
    NSMutableSet *_documentsToDelete;
    IDEEditorDocument *_primaryDocument;
    id <DVTInvalidation> _primaryDocumentExportToken;
    id <DVTInvalidation> _primaryPathControlUpdateToken;
    IDEEditorDocument *_secondaryDocument;
    id <DVTInvalidation> _secondaryDocumentExportToken;
    id <DVTInvalidation> _secondaryPathControlUpdateToken;
    IDEEditorDocument *_ancestorDocument;
    id <DVTInvalidation> _ancestorDocumentExportToken;
    int _editorSubmode;
    IDEComparisonEditorAutoLayoutView *_layoutView;
    DVTComparisonDocumentLocation *_internalComparisonDocumentLocation;
    NSArray *_keyEditorDocumentLocations;
    NSDictionary *_keyEditorAnnotationRepresentedObjectState;
    unsigned long long _conflictCount;
    IDESourceControlConflictResolutionController *_conflictResolutionController;
    unsigned long long _lastChangeType;
    BOOL _hideToolBar;
    BOOL _hideNavTimelineBar;
    BOOL _disableChangeSourceTree;
    BOOL _disableChangeBranch;
    BOOL _disableChangeRevision;
    BOOL _ownsDataSource;
    BOOL _hardFailPrimary;
    BOOL _hardFailSecondary;
    BOOL _shouldSelectFirstDiff;
    BOOL _shouldTakeFocus;
}

+ (id)keyPathsForValuesAffectingCurrentSelectedDocumentLocations;
+ (id)keyPathsForValuesAffectingPrimaryEditorInstance;
+ (id)keyPathsForValuesAffectingCurrentSelectedItems;
+ (id)keyPathsForValuesAffectingKeyEditor;
+ (id)keyPathsForValuesAffectingIsThreeWayDiff;
+ (id)keyPathsForValuesAffectingSecondaryRootNavigableItem_arrayOfOne;
+ (id)keyPathsForValuesAffectingPrimaryRootNavigableItem_arrayOfOne;
+ (id)keyPathsForValuesAffectingSubmode;
+ (void)initialize;
+ (id)comparisonEditorLogAspect;
@property IDENavigableItem *secondaryRootNavigableItem; // @synthesize secondaryRootNavigableItem=_secondaryRootNavigableItem;
@property IDENavigableItem *primaryRootNavigableItem; // @synthesize primaryRootNavigableItem=_primaryRootNavigableItem;
@property unsigned long long lastChangeType; // @synthesize lastChangeType=_lastChangeType;
@property unsigned long long conflictCount; // @synthesize conflictCount=_conflictCount;
@property BOOL shouldTakeFocus; // @synthesize shouldTakeFocus=_shouldTakeFocus;
@property NSDictionary *keyEditorAnnotationRepresentedObjectState; // @synthesize keyEditorAnnotationRepresentedObjectState=_keyEditorAnnotationRepresentedObjectState;
@property(copy) NSArray *keyEditorDocumentLocations; // @synthesize keyEditorDocumentLocations=_keyEditorDocumentLocations;
@property BOOL disableChangeRevision; // @synthesize disableChangeRevision=_disableChangeRevision;
@property BOOL disableChangeBranch; // @synthesize disableChangeBranch=_disableChangeBranch;
@property BOOL disableChangeSourceTree; // @synthesize disableChangeSourceTree=_disableChangeSourceTree;
@property BOOL shouldSelectFirstDiff; // @synthesize shouldSelectFirstDiff=_shouldSelectFirstDiff;
@property DVTReplacementView *submodeReplacementView; // @synthesize submodeReplacementView=_submodeReplacementView;
@property DVTReplacementView *logReplacementView; // @synthesize logReplacementView=_logReplacementView;
@property IDEComparisonEditorAutoLayoutView *layoutView; // @synthesize layoutView=_layoutView;
@property NSSplitView *aboveView; // @synthesize aboveView=_aboveView;
@property IDEComparisonToolbar *comparisonToolbar; // @synthesize comparisonToolbar=_comparisonToolbar;
@property IDEComparisonNavTimelineBar *navTimelineBar; // @synthesize navTimelineBar=_navTimelineBar;
@property IDEEditorDocument *ancestorDocument; // @synthesize ancestorDocument=_ancestorDocument;
@property IDEEditorDocument *secondaryDocument; // @synthesize secondaryDocument=_secondaryDocument;
@property IDEEditorDocument *primaryDocument; // @synthesize primaryDocument=_primaryDocument;
- (BOOL)pathCell:(id)arg1 shouldPopUpMenuForPathComponentCell:(id)arg2 item:(id)arg3;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 changeToRevision:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 diffWithRevision:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 compareToRevision:(id)arg2;
- (void)sourceControlLogViewController:(id)arg1 compareRevisionToPreviousRevision:(id)arg2;
- (void)_setupEmptyEditors;
- (BOOL)isCurrentPrimaryRevisionInMemoryOrLocal;
- (void)takeFocus;
- (void)_unpackAndApplyAnnotationRepresentedObjectState;
- (void)navigateToAnnotationWithRepresentedObject:(id)arg1 wantsIndicatorAnimation:(BOOL)arg2 exploreAnnotationRepresentedObject:(id)arg3;
- (void)selectDocumentLocations:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (id)currentSelectedItems;
- (void)_exportAncestorDocument;
- (void)_exportSecondaryDocument;
- (void)_exportPrimaryDocument;
- (void)_disposeDocument:(id)arg1;
- (void)_trackDocument:(id)arg1 options:(int)arg2;
- (void)_updateSecondaryPathControl;
- (void)_updatePrimaryPathControl;
- (id)_cleanupDocumentLocationFromStateSaving:(id)arg1;
- (void)_convertDocumentLocationToComparisonDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (struct CGRect)overlayFrameForView:(id)arg1;
- (id)conflictResolutionController;
- (BOOL)disableBlame;
@property(readonly) BOOL isThreeWayDiff;
@property(readonly) NSArray *secondaryRootNavigableItem_arrayOfOne;
@property(readonly) NSArray *primaryRootNavigableItem_arrayOfOne;
- (id)primaryEditorInstance;
- (id)keyEditor;
@property IDENavigableItem *secondarySubNavigableItem; // @synthesize secondarySubNavigableItem=_secondarySubNavigableItem;
@property IDENavigableItem *primarySubNavigableItem; // @synthesize primarySubNavigableItem=_primarySubNavigableItem;
- (void)setInternalComparisonDocumentLocation:(id)arg1;
- (id)internalComparisonDocumentLocation;
@property(readonly) IDEComparisonEditorSubmode *submode;
@property int editorSubmode;
@property BOOL hideNavTimelineBar;
@property BOOL hideToolBar;
- (void)_willOpenSpecifier:(id)arg1;
- (void)_validateAndUpdateOnSubmodeChange;
- (void)_updateOnSubmodeChange;
- (void)showRevision:(id)arg1;
- (void)compareCurrentRevisionToRevision:(id)arg1;
- (void)compareRevisionChange:(id)arg1;
- (void)_setupSupportViews;
- (void)_cleanupSupportViews;
- (void)_editorDocumentDirtyStatusDidChange:(id)arg1;
- (void)viewWillUninstall;
@property id <IDEComparisonEditorDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)viewDidInstall;
- (void)loadView;
- (void)invalidate;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

@end

@interface IDEAttachToProcessSheet : DVTViewController
{
    NSWindow *_window;
    DVTDevice *_device;
    id <IDEAttachToProcessSheetDelegate> _delegate;
    NSArray *_debuggerSpecifiers;
    IDEDebuggerSpecifier *_selectedDebuggerSpecifier;
    NSButton *_attachButton;
    NSWindow *_sheetWindow;
    NSTextField *_pidTextField;
    NSImageView *_invalidPIDImage;
    NSImageView *_applicationImage;
    NSTextField *_debuggerText;
    NSPopUpButton *_debuggerPopUp;
}

+ (void)showAttachToProcessSheetForWindow:(id)arg1 defaultDebugger:(id)arg2 device:(id)arg3 delegate:(id)arg4;
@property IDEDebuggerSpecifier *selectedDebuggerSpecifier; // @synthesize selectedDebuggerSpecifier=_selectedDebuggerSpecifier;
@property(readonly) NSArray *debuggerSpecifiers; // @synthesize debuggerSpecifiers=_debuggerSpecifiers;
- (void)_sheetDidEnd;
- (void)attachToProcess:(id)arg1;
- (void)cancel:(id)arg1;
- (void)_showAttachToProcessSheet;
- (void)_updateUIBasedOnPIDTextFieldAfterDelay;
- (void)_updateUIBasedOnPIDTextField;
- (id)_processInformationForProcessName:(id)arg1;
- (id)_processInformationForUserEnteredText;
- (id)_processInformationForPID:(int)arg1;
- (void)loadView;
- (id)_initWithWindow:(id)arg1 defaultDebugger:(id)arg2 device:(id)arg3 delegate:(id)arg4;

@end

@interface IDEWorkspaceDocument : NSDocument <IDEWorkspaceDelegate, DVTTabbedWindowCreation, DVTStatefulObject, DVTStateRepositoryDelegate, IDEMustCloseOnQuitDocument>
{
    DVTStackBacktrace *_invalidationBacktrace;
    DVTStateRepository *_stateRepository;
    DVTStateToken *_stateToken;
    IDEContextAutocreationController *_contextAutocreationController;
    IDEWorkspace *_workspace;
    IDEWorkspaceWindowController *_lastActiveWorkspaceWindowController;
    NSMutableArray *_recentEditorDocumentURLs;
    NSHashTable *_allRecentEditorDocumentURLs;
    NSMutableDictionary *_defaultEditorStateTree;
    NSMutableDictionary *_defaultPrimaryEditorFrameSizes;
    NSMutableSet *_editedDocuments;
    DVTDelayedValidator *_stateSavingDelayedValidator;
    IDEActivityReportManager *_activityReportManager;
    id <DVTObservingToken> _runContextsObservingToken;
    id <DVTObservingToken> _isWorkspaceIdleToken;
    id <DVTObservingToken> _launchSessionsObservingToken;
    id <DVTObservingToken> _launchSessionsRunnablePIDObservingToken;
    id <DVTObservingToken> _applicationIsQuittingObserver;
    NSDictionary *_previousSessionActiveRunContextInfo;
    NSDictionary *_previousSessionActiveRunDestinationInfo;
    id _upgradeCompletionBlock;
    NSMutableArray *_stateChangeObservingTokens;
    NSMutableDictionary *_tabStateContextForTabNameMap;
    int _debuggingWindowBehavior;
    int _currentLaunchSessionHasGUI;
    BOOL _lastWorkspaceWindowHasStartedClosing;
    BOOL _applicationIsTerminating;
    BOOL _isClosing;
    BOOL _isInvalidated;
    BOOL _userWantsAppFocusInMiniDebugging;
    BOOL _userWantsMiniDebuggingConsole;
    BOOL _didSetupUISubsystems;
    BOOL _isCheckingCanClose;
}

+ (id)keyPathsForValuesAffectingUserWantsBreakpointsActivated;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (void)_setMaximumRecentEditorDocumentCount:(long long)arg1;
+ (long long)_maximumRecentEditorDocumentCount;
+ (long long)_unlimitedMaximumRecentEditorDocumentCountMarker;
+ (id)documentForWorkspace:(id)arg1;
+ (id)documentTypeName;
+ (BOOL)autosavesInPlace;
+ (BOOL)preservesVersions;
+ (void)initialize;
@property BOOL applicationIsTerminating; // @synthesize applicationIsTerminating=_applicationIsTerminating;
@property NSMutableDictionary *tabStateContextForTabNameMap; // @synthesize tabStateContextForTabNameMap=_tabStateContextForTabNameMap;
@property BOOL userWantsMiniDebuggingConsole; // @synthesize userWantsMiniDebuggingConsole=_userWantsMiniDebuggingConsole;
@property BOOL userWantsAppFocusInMiniDebugging; // @synthesize userWantsAppFocusInMiniDebugging=_userWantsAppFocusInMiniDebugging;
@property int debuggingWindowBehavior; // @synthesize debuggingWindowBehavior=_debuggingWindowBehavior;
@property DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)_restoreActiveRunContextIfPossible;
- (id)dvtExtraBindings;
@property(readonly) NSDictionary *activeRunDestinationInfo;
@property(readonly) NSDictionary *activeRunContextInfo;
@property(copy) NSArray *orderedWindowControllerNames;
@property BOOL userWantsBreakpointsActivated;
@property(copy) NSDictionary *stateSavingDefaultEditorStatesForURLs;
@property(copy) NSArray *stateSavingRecentEditorDocumentURLs;
- (void)commitStateToDictionary:(id)arg1;
- (id)_tabStateContextForTabController:(id)arg1 owningWindowController:(id)arg2;
- (void)revertStateWithDictionary:(id)arg1;
@property(readonly) DVTStateRepository *stateRepository; // @synthesize stateRepository=_stateRepository;
- (void)configureStateSavingObservers;
- (void)stateRepositoryDidChange:(id)arg1;
- (BOOL)readStateData;
- (BOOL)writeStateData;
- (id)_stateSavingCustomDataSpecifier;
- (void)removeWindowController:(id)arg1;
- (void)addWindowController:(id)arg1;
- (void)makeWindowControllers;
- (id)showTabNamed:(id)arg1 createIfNotFound:(BOOL)arg2;
- (id)_recreateTabNamed:(id)arg1 withTabStateContext:(id)arg2 shouldRecreateWindowIfNeeded:(BOOL)arg3;
- (void)_makeTabbedWindowControllerWithStateFromTabController:(id)arg1 documentURL:(id)arg2 simpleEditorWindowLayout:(BOOL)arg3 frontmost:(BOOL)arg4 completionBlock:(id)arg5;
- (id)windowControllerWithUniqueIdentifier:(id)arg1;
- (id)makeTabbedWindowControllerShowingWindow:(BOOL)arg1;
- (id)_makeTabbedWindowControllerShowingWindow:(BOOL)arg1 withIdentifier:(id)arg2 createNewTabUponLoadIfNoTabsExist:(BOOL)arg3;
- (void)_addRecentEditorDocumentURL:(id)arg1;
@property(readonly) NSArray *recentEditorDocumentURLs;
- (id)_allRecentEditorDocumentURLs;
- (void)_clearRecentEditorDocumentURLs;
@property(readonly) IDEActivityReportManager *activityReportManager;
- (void)windowControllerWindowWillClose:(id)arg1;
- (void)_editorDocumentWillClose:(id)arg1;
- (void)_willEditDocument:(id)arg1;
- (id)_editedDocuments;
- (void)_setDefaultPrimaryEditorFrameSize:(struct CGSize)arg1 forDocumentURL:(id)arg2;
- (struct CGSize)_defaultPrimaryEditorFrameSizeForDocumentURL:(id)arg1;
- (void)_cacheDefaultEditorStateDictionary:(id)arg1 forDocumentExtensionIdentifier:(id)arg2 forDocumentURL:(id)arg3;
- (id)_defaultEditorStateDictionaryForDocumentExtensionIdentifier:(id)arg1 forDocumentURL:(id)arg2;
- (void)activateTargetProcess;
- (void)_delayedActivateTargetProcess:(id)arg1;
- (void)_activateTargetProcess:(int)arg1 numberOfTries:(long long)arg2;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)_readFromURL:(id)arg1 ofType:(id)arg2 simpleFilesFocused:(BOOL)arg3 error:(id *)arg4;
- (void)setLastActiveWorkspaceWindowController:(id)arg1;
- (id)activeWorkspaceWindowController;
@property(readonly) IDEWorkspace *workspace;
- (void)_setWorkspace:(id)arg1;
- (void)_workspace:(id)arg1 didChangeSimpleFilesFocusedTo:(BOOL)arg2;
- (void)_workspace:(id)arg1 didChangeFinishedLoadingTo:(BOOL)arg2;
- (void)_container:(id)arg1 didChangeFromFilePath:(id)arg2 toFilePath:(id)arg3;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (BOOL)_shouldShowAutosaveButtonForWindow:(id)arg1;
- (BOOL)_checkAutosavingPossibilityAndReturnError:(id *)arg1;
- (BOOL)checkAutosavingSafetyAndReturnError:(id *)arg1;
- (void)setupUISubsystems;
- (void)_workspace:(id)arg1 failedToResolveContainerForProjectFile:(id)arg2;
- (void)_setupLaunchSessionsObservation;
- (void)_recordWorkspaceStatistics;
- (BOOL)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (void)saveAsWorkspace:(id)arg1 showAlert:(BOOL)arg2 completionBlock:(id)arg3;
- (void)_upgradeAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_workspaceDocument:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)saveAsWorkspace:(id)arg1;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)runPageLayout:(id)arg1;
- (void)printDocument:(id)arg1;
- (void)saveDocumentTo:(id)arg1;
- (void)duplicateDocument:(id)arg1;
- (void)saveDocumentAs:(id)arg1;
- (void)saveDocument:(id)arg1;
- (void)revertDocumentToSaved:(id)arg1;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)canCloseDocumentAtQuit;
- (BOOL)_canCloseWorkspaceDocument;
- (id)_dirtyDocuments;
- (BOOL)_closeAfterSavingDirtyEditorDocumentsWithCancelButton:(BOOL)arg1;
- (void)close;
- (void)writeStateIfNeeded;
@property(readonly, getter=isClosed) BOOL closed;
- (void)dvt_shouldCollect;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (id)initWithType:(id)arg1 error:(id *)arg2;
- (id)init;
- (id)sdefSupport_clean:(id)arg1;
- (id)sdefSupport_build:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)sdefSupport_fileReferenceForPath:(id)arg1;
- (id)objectSpecifier;
- (id)displayName;
- (void)insertInSdefSupport_Xcode3Groups:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_Xcode3FileReferences:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_runContexts:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_projects:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_itemReferences:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_groups:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_fileReferences:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_buildMessages:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_breakpoints:(id)arg1 atIndex:(long long)arg2;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)sdefSupport_Xcode3Groups;
- (id)sdefSupport_Xcode3FileReferences;
- (id)sdefSupport_symbolicBreakpoints;
- (id)sdefSupport_projects;
- (id)sdefSupport_groups;
- (id)sdefSupport_fileReferences;
- (id)sdefSupport_fileBreakpoints;
- (id)sdefSupport_breakpoints;
- (void)setSdefSupport_productDirectory:(id)arg1;
- (id)sdefSupport_productDirectory;
- (void)setSdefSupport_intermediatesDirectory:(id)arg1;
- (id)sdefSupport_intermediatesDirectory;
- (void)setSdefSupport_breakpointsEnabled:(BOOL)arg1;
- (BOOL)sdefSupport_breakpointsEnabled;

@end

@interface _IDEWorkspaceDocumentInternalContextWrapper : NSObject
{
    id wrappedDelegate;
    SEL wrappedSelector;
    void *wrappedContextInfo;
}

@end

@interface IDENavigatorArea : IDEViewController <IDENavigatorOutlineViewLoadingDelegate, DVTReplacementViewDelegate, DVTStatefulObject>
{
    DVTChooserView *_chooserView;
    DVTBorderedView *_borderedView;
    DVTReplacementView *_replacementView;
    DVTBorderedView *_filterControlBarBorderedView;
    IDENavigatorFilterControlBar *_filterControlBar;
    NSArrayController *_extensionsController;
    DVTExtension *_currentExtension;
    NSMutableDictionary *_perNavigatorCache;
    NSString *_nonMiniDebuggingModeExtensionIdentifier;
    id <DVTObservingToken> _workspaceActivityObservingToken;
    id <DVTObservingToken> _inMiniDebuggingModeObservingToken;
    BOOL _didLoadInitialNavigator;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentNavigator;
+ (id)navigatorsForContext:(id)arg1;
@property DVTExtension *currentExtension; // @synthesize currentExtension=_currentExtension;
@property NSArrayController *extensionsController; // @synthesize extensionsController=_extensionsController;
- (double)minimumContentWidth;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_setCurrentExtensionIdentifier:(id)arg1;
- (id)_currentExtensionIdentifier;
- (BOOL)delegateFirstResponder;
- (void)_inMiniDebuggingModeChanged;
- (id)currentNavigator;
- (void)_clearPerNavigatorCache;
- (void)_cancelWorkspaceActivityObserving;
- (void)showNavigatorWithIdentifier:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)outlineViewDidDrawInitialContent:(id)arg1;
- (void)outlineViewWillDrawInitialContent:(id)arg1;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (id)perNavigatorCacheKeyForNavigator:(id)arg1;
- (void)activateFilterFieldForFocus;
- (void)installFilterControlBarForNavigator:(id)arg1;
- (void)invalidate;
- (void)loadView;
- (id)supportedContext;

// Remaining properties
@property DVTStateToken *stateToken; // @dynamic stateToken;

@end

@interface _IDEEditorNavigatorForwardingResponder : IDEActionForwardingResponder
{
    IDEWorkspaceTabController *_workspaceTabController;
}

- (id)targetForAction:(SEL)arg1;
- (id)initWithWorkspaceTabController:(id)arg1;

@end

@interface IDEWorkspaceTabController : IDEViewController <DVTTabbedWindowTabContentControlling, DVTStatefulObject, DVTReplacementViewDelegate, IDEEditorAreaContainer, IDEStructureEditingWorkspaceTabContext, IDEWorkspaceDocumentProvider, DVTEditor>
{
    DVTSplitView *_designAreaSplitView;
    DVTReplacementView *_navReplacementView;
    DVTReplacementView *_editorReplacementView;
    DVTSplitView *_utilityAreaSplitView;
    DVTSplitViewItem *_navigatorAreaSplitViewItem;
    DVTSplitViewItem *_utilitiesAreaSplitViewItem;
    DVTReplacementView *_inspectorReplacementView;
    DVTReplacementView *_libraryReplacementView;
    id _downwardForwarder;
    DVTMutableOrderedSet *_cursorRectInterceptors;
    int _assistantEditorsLayout;
    NSString *_name;
    IDELaunchSession *_currentLaunchSession;
    IDEWorkspaceDocument *_workspaceDocument;
    NSMapTable *_controllerForDebugSessionTable;
    NSMapTable *_additionControllersForLaunchSessionTable;
    NSString *_userDefinedTabLabel;
    NSString *_lastValidUserDefinedName;
    NSString *_savedTabLabel;
    id <DVTObservingToken> _mainCurrentLaunchSessionObserverToken;
    id <DVTObservingToken> _launchSessionStateObserverToken;
    id <DVTObservingToken> _debugSessionObserverToken;
    id <DVTObservingToken> _debugSessionCoalescedStateObservingToken;
    id <DVTObservingToken> _documentLoadingObservationToken;
    id <DVTObservingToken> _firstIssueObservationToken;
    id <DVTObservingToken> _buildCompleteObservationToken;
    id <DVTObservingToken> _inMiniDebuggingModeObservingToken;
    id <DVTObservingToken> _userWantsMiniDebuggingConsoleObservingToken;
    id <DVTObservingToken> _firstTimeSnapshotObserverToken;
    NSAlert *_stoppingExecutionAlert;
    id _pendingExecutionNotificationToken;
    IDEBuildAlertMonitor *_buildAlertMonitor;
    IDERunAlertMonitor *_runAlertMonitor;
    DVTStackBacktrace *_creationBacktrace;
    BOOL _isAnimatingUtilities;
    BOOL _userWantsUtilitiesVisible;
    BOOL _userWantsNavigatorVisible;
    BOOL _stateRestoreCompleted;
    BOOL _tabLoadingCompleted;
}

+ (id)keyPathsForValuesAffectingTabLabel;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingActiveEditorArea;
+ (id)keyPathsForValuesAffectingNavigatorArea;
+ (id)keyPathsForValuesAffectingWindowController;
+ (id)keyPathsForValuesAffectingShowNavigator;
+ (id)keyPathsForValuesAffectingShowUtilities;
+ (id)keyPathsForValuesAffectingWorkspace;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (int)defaultAssistantEditorsLayout;
+ (void)setDefaultAssistantEditorsLayout:(int)arg1;
@property(readonly) DVTStackBacktrace *creationBacktrace; // @synthesize creationBacktrace=_creationBacktrace;
@property id <DVTObservingToken> buildCompleteObservationToken; // @synthesize buildCompleteObservationToken=_buildCompleteObservationToken;
@property id <DVTObservingToken> firstIssueObservationToken; // @synthesize firstIssueObservationToken=_firstIssueObservationToken;
@property id <DVTObservingToken> documentLoadingObservationToken; // @synthesize documentLoadingObservationToken=_documentLoadingObservationToken;
@property BOOL tabLoadingCompleted; // @synthesize tabLoadingCompleted=_tabLoadingCompleted;
@property BOOL stateRestoreCompleted; // @synthesize stateRestoreCompleted=_stateRestoreCompleted;
@property(copy) NSString *userDefinedTabLabel; // @synthesize userDefinedTabLabel=_userDefinedTabLabel;
@property(copy) NSString *savedTabLabel; // @synthesize savedTabLabel=_savedTabLabel;
@property(copy) NSString *name; // @synthesize name=_name;
@property IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
@property IDELaunchSession *currentLaunchSession; // @synthesize currentLaunchSession=_currentLaunchSession;
@property DVTReplacementView *editorReplacementView; // @synthesize editorReplacementView=_editorReplacementView;
@property DVTReplacementView *navigatorReplacementView; // @synthesize navigatorReplacementView=_navReplacementView;
@property BOOL userWantsNavigatorVisible; // @synthesize userWantsNavigatorVisible=_userWantsNavigatorVisible;
@property BOOL userWantsUtilitiesVisible; // @synthesize userWantsUtilitiesVisible=_userWantsUtilitiesVisible;
@property BOOL isAnimatingUtilities; // @synthesize isAnimatingUtilities=_isAnimatingUtilities;
@property int assistantEditorsLayout; // @synthesize assistantEditorsLayout=_assistantEditorsLayout;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
@property(readonly) NSString *tabLabel;
@property NSDocument<DVTTabbedWindowCreation> *document;
- (void)moveKeyboardFocusToPreviousArea:(id)arg1;
- (void)moveKeyboardFocusToNextArea:(id)arg1;
- (void)_moveKeyboardFocusToNextAreaForward:(BOOL)arg1;
- (id)_keyboardFocusAreas;
- (id)_currentFirstResponderArea;
- (void)performCloseWorkspace:(id)arg1;
- (void)_workspaceDocument:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)setShowDisassemblyWhenDebugging:(id)arg1;
- (void)setDebuggingWindowBehaviorXcodeInFront:(id)arg1;
- (void)setDebuggingWindowBehaviorXcodeBehind:(id)arg1;
- (void)setDebuggingWindowBehaviorNormal:(id)arg1;
- (void)_setDebuggingWindowBehavior:(int)arg1;
- (void)clearConsole:(id)arg1;
- (void)viewMemory:(id)arg1;
- (void)showSharedLibrariesPopUp:(id)arg1;
- (void)askUserForProcessIdentifierToAttachTo:(id)arg1;
- (void)attachToProcess:(id)arg1;
- (void)stepOut:(id)arg1;
- (void)stepOverInstruction:(id)arg1;
- (void)stepOverThread:(id)arg1;
- (void)stepOver:(id)arg1;
- (void)stepIntoInstruction:(id)arg1;
- (void)stepIntoThread:(id)arg1;
- (void)stepInto:(id)arg1;
- (void)pauseOrContinue:(id)arg1;
- (void)toggleBreakpoints:(id)arg1;
- (void)restoreSnapshot:(id)arg1;
- (void)createSnapshot:(id)arg1;
- (void)editWorkspaceUserSettings:(id)arg1;
- (void)newRunContext:(id)arg1;
- (void)manageRunContexts:(id)arg1;
- (void)editActiveRunContext:(id)arg1;
- (void)editAndAnalyzeActiveRunContext:(id)arg1;
- (void)editBuildAndArchiveActiveRunContext:(id)arg1;
- (void)editAndBuildForTestingActiveRunContext:(id)arg1;
- (void)editAndTestActiveRunContext:(id)arg1;
- (void)editAndBuildForProfilingActiveScheme:(id)arg1;
- (void)editAndProfileActiveScheme:(id)arg1;
- (void)editAndBuildForRunningActiveRunContext:(id)arg1;
- (void)editAndRunActiveRunContext:(id)arg1;
- (void)_doCommandForEditAndSchemeCommand:(int)arg1;
- (void)_doCommandForEditAndSchemeCommand:(int)arg1 schemeTask:(int)arg2;
- (void)generateAssemblyCodeForFilePath:(id)arg1 forSchemeCommand:(int)arg2;
- (void)generatePreprocessedFileForFilePath:(id)arg1 forSchemeCommand:(int)arg2;
- (void)cleanBuildFolder:(id)arg1;
- (void)cleanBuildFolderAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)reallyCleanBuildFolder;
- (void)cleanActiveRunContext:(id)arg1;
- (void)installActiveRunContext:(id)arg1;
- (void)analyzeActiveRunContext:(id)arg1;
- (void)buildForInstallActiveRunContext:(id)arg1;
- (void)buildForArchiveActiveRunContext:(id)arg1;
- (void)buildAndArchiveActiveRunContext:(id)arg1;
- (void)buildActiveRunContext:(id)arg1;
- (void)testActiveRunContextWithoutBuilding:(id)arg1;
- (void)buildForTestActiveRunContext:(id)arg1;
- (void)testActiveRunContext:(id)arg1;
- (void)profileActiveSchemeWithoutBuilding:(id)arg1;
- (void)buildForProfileActiveRunContext:(id)arg1;
- (void)profileActiveScheme:(id)arg1;
- (void)runActiveRunContextWithoutBuilding:(id)arg1;
- (void)buildForRunActiveRunContext:(id)arg1;
- (void)_alertNonExistentWorkingDirectoryBeforeRunOrProfileForContext:(id)arg1 workingDirectory:(id)arg2 title:(id)arg3 defaultButton:(id)arg4 usingBlock:(id)arg5;
- (void)_alertNonExistentWorkingDirectoryBeforeProfileForContext:(id)arg1 usingBlock:(id)arg2;
- (void)_alertNonExistentWorkingDirectoryBeforeRunForContext:(id)arg1 usingBlock:(id)arg2;
- (void)_alertNonExistentWorkingDirectoryBeforeRunOrProfileAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_askShouldBuildBeforeRunOrProfileForContext:(id)arg1 title:(id)arg2 defaultButton:(id)arg3 usingBlock:(id)arg4;
- (void)__buildAndActionAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runActiveRunContext:(id)arg1;
- (void)_debugSessionCoalescedStateChanged:(id)arg1;
- (BOOL)isActiveWorkspaceTabController;
- (id)debugSessionController;
- (void)_updateForDebuggingKVOChange;
- (BOOL)_contentSizeCanBeZeroSize;
- (void)_performContextTask:(int)arg1 command:(id)arg2 commandName:(id)arg3 buildCommand:(int)arg4 filePath:(id)arg5;
- (BOOL)_launchingOrProfiling:(int)arg1 withNonExistentWorkingDirectory:(id)arg2;
- (void)_showWarningForBuild:(BOOL)arg1 forTest:(BOOL)arg2 forOtherExecution:(BOOL)arg3 trackersToStop:(id)arg4 taskActionBlock:(id)arg5;
- (void)_runAnotherInstance:(id)arg1;
- (void)_acceptStoppingExecutionAlert:(id)arg1;
- (void)_rejectStoppingExecutionAlert:(id)arg1;
- (void)_cleanupAfterStoppingExecutionAlert;
- (void)_actuallyPerformContextTask:(int)arg1 command:(id)arg2 commandName:(id)arg3 buildCommand:(int)arg4 filePath:(id)arg5;
- (void)invalidateAllBuildAlertMonitors;
- (BOOL)_cleanBuildFolderWithExecutionContext:(id)arg1 commandName:(id)arg2 error:(id *)arg3;
- (void)observeBuildOperationForRestoringState:(id)arg1;
- (void)switchNavigatorOnBuild;
- (void)newWindow:(id)arg1;
- (void)hideUtilitiesArea:(id)arg1;
- (void)showUtilitiesArea:(id)arg1;
- (BOOL)isUtilitiesAreaVisible;
- (void)toggleUtilitiesVisibilityAlternate:(id)arg1;
- (void)toggleUtilitiesVisibility:(id)arg1;
- (void)hideNavigator:(id)arg1;
- (BOOL)isNavigatorVisible;
- (void)toggleNavigatorsVisibility:(id)arg1;
- (void)changeToBreakpointsNavigator:(id)arg1;
- (void)changeToDebuggerNavigator:(id)arg1;
- (void)changeToFindNavigator:(id)arg1;
- (void)changeToIssuesNavigator:(id)arg1;
- (void)changeToLogsNavigator:(id)arg1;
- (void)changeToSymbolsNavigator:(id)arg1;
- (void)changeToStructureNavigator:(id)arg1;
- (void)showNavigatorWithIdentifier:(id)arg1;
- (void)_changeToNavigatorWithIdentifier:(id)arg1 sender:(id)arg2;
- (void)_splitViewDidToggleClosed;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)_choiceWithKeyEquivalent:(id)arg1 modifierFlags:(unsigned long long)arg2 inUtilityArea:(id)arg3;
- (void)showLibraryWithChoiceFromSender:(id)arg1;
- (void)showInspectorWithChoiceFromSender:(id)arg1;
- (void)showLibraryWithChoice:(id)arg1;
- (void)showInspectorWithChoice:(id)arg1;
- (id)libraryArea;
- (id)inspectorArea;
- (void)filterInNavigator:(id)arg1;
- (void)filterInLibrary:(id)arg1;
- (void)focusOnLibraryFilter;
- (void)changeToAssistantLayout_BH:(id)arg1;
- (void)changeToAssistantLayout_BV:(id)arg1;
- (void)changeToAssistantLayout_TH:(id)arg1;
- (void)changeToAssistantLayout_TV:(id)arg1;
- (void)changeToAssistantLayout_LH:(id)arg1;
- (void)changeToAssistantLayout_LV:(id)arg1;
- (void)changeToAssistantLayout_RH:(id)arg1;
- (void)changeToAssistantLayout_RV:(id)arg1;
- (void)_changeToAssistantLayoutForActionSelector:(SEL)arg1;
- (void)changeToVersionEditorLogView:(id)arg1;
- (void)changeToVersionEditorBlameView:(id)arg1;
- (void)changeToVersionEditorComparisonView:(id)arg1;
- (void)_changeToVersionEditorSubmode:(int)arg1;
- (void)changeToVersionEditor:(id)arg1;
- (void)changeToGeniusEditor:(id)arg1;
- (void)changeToStandardEditor:(id)arg1;
- (void)_changeToEditorMode:(int)arg1;
- (void)cancelCurrentExecution:(id)arg1;
- (void)resetEditor:(id)arg1;
- (void)removeAssistantEditor:(id)arg1;
- (void)addAssistantEditor:(id)arg1;
@property(readonly) IDEWorkspaceTabController *structureEditWorkspaceTabController;
@property(readonly) IDEWorkspace *structureEditWorkspace;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)_validateEditorLayoutUserInterfaceItem:(id)arg1 forActionSelector:(SEL)arg2;
- (void)setNextResponder:(id)arg1;
- (id)downwardForwarder;
@property(readonly) IDEEditorArea *editorArea;
@property(readonly) IDENavigatorArea *navigatorArea;
@property(readonly) IDEWorkspaceWindowController *windowController;
- (id)splitView:(id)arg1 needsRectanglesForViewsWithState:(id)arg2 forSize:(struct CGSize)arg3;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)_adjustUtilityAreaSplitViewWithOldSize:(struct CGSize)arg1;
- (void)_adjustDesignAreaSplitViewWithOldSize:(struct CGSize)arg1;
- (id)_framesForDesignAreaWithNavigatorState:(int)arg1 editorAreaState:(int)arg2 utilityAreaState:(int)arg3 forSize:(struct CGSize)arg4;
- (id)splitView:(id)arg1 additionalEffectiveRectsOfDividerAtIndex:(long long)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (struct CGSize)minimumSizeForView:(id)arg1;
- (void)updateMinimumWindowSize:(BOOL)arg1;
- (struct CGSize)minimumSizeForDesignArea;
- (struct CGSize)minimumSizeForDesignAreaIfNavigatorVisible:(BOOL)arg1 editorVisisble:(BOOL)arg2 andUtilityAreaVisible:(BOOL)arg3;
- (void)_recordLibrarySplitSize;
- (void)_doRecordLibrarySplitSize;
- (void)_recordUtilitySplitSize;
- (void)_doRecordUtilitySplitSize;
- (void)_recordNavigationSplitSize;
- (void)_doRecordNavigationSplitSize;
- (void)_removeCursorRectInterceptor:(id)arg1;
- (void)_addCursorRectInterceptor:(id)arg1;
- (void)_interceptWillInvalidateCursorRectsForView:(id)arg1;
- (BOOL)_interceptAddCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3 inWindow:(id)arg4;
- (BOOL)_interceptSetCursorForMouseLocation:(struct CGPoint)arg1 inWindow:(id)arg2;
- (void)_pushDefaultPrimaryEditorFrameSize;
@property BOOL showNavigator;
@property BOOL showUtilities;
- (id)workspace;
- (void)replacementView:(id)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)invalidate;
- (void)viewWillUninstall;
- (void)workspaceWindowIsClosing;
- (void)viewDidInstall;
- (void)_performExtraViewDidInstallWork;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_revertStateForNewWindowWithDictionary:(id)arg1 simpleEditorWindowLayout:(BOOL)arg2;
- (void)_primitiveSetAssistantEditorsLayout:(int)arg1;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEEditorContext : IDEViewController <NSMenuDelegate, IDEEditorContextProtocol, IDEEditorSplittingControllerDelegate, DVTFindBarHostable, NSPathControlDelegate, IDEPathCellDelegate, DVTScopeBarHost, IDENavigableItemCoordinatorDelegate, IDEEditorDelegate, DVTStateRepositoryDelegate, NSAnimationDelegate>
{
    IDENavBar *_navBar;
    DVTBorderedView *_editorBorderedView;
    DVTGradientImagePopUpButton *_relatedItemsPopUpButton;
    IDEEditorStepperView *_stepperView;
    id <IDEEditorContextDelegate> _delegate;
    DVTStateRepository *_stateRepository;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    IDENavigableItem *_navigableItem;
    IDENavigableItem *_greatestDocumentAncestor;
    IDENavigableItem *_navBarNavigableItemRoot;
    IDENavigableItem *_navBarNavigableItem;
    IDEEditorArea *_editorArea;
    IDEEditor *_editor;
    NSString *_documentExtensionIdentifier;
    NSArray *_documentSelectedItems;
    id _editorContextWillOpenNavigableItemNotificationToken;
    id _editorDocumentForNavBarStructureDidChangeNotificationToken;
    id _editorDocumentForNavBarStructureWillCloseNotificationToken;
    id _editorDocumentWillCloseNotificationToken;
    id _findStringChangedNotificationToken;
    id _navigableItemCoordinatorDidForgetItemsNotificationToken;
    id _workspaceWillWriteNotificationToken;
    id <DVTObservingToken> _editorDocumentForNavBarStructureChangedObservingToken;
    id <DVTObservingToken> _windowMainViewControllerChangedObservingToken;
    IDEEditorGeniusResults *_editorGeniusResults;
    IDENavigableItem *_geniusResultsRootNavigableItem;
    id <DVTObservingToken> _counterpartsObservingToken;
    IDEEditorHistoryController *_historyController;
    NSArrayController *_navigableItemSiblingsController;
    NSArray *_navigableItemSiblings;
    NSIndexSet *_navigableItemSiblingsSelectionIndexes;
    DVTScopeBarsManager *_scopeBarsManager;
    IDEEditorReadOnlyIndicatorController *_readOnlyIndicatorController;
    id <DVTObservingToken> _showReadOnlyIndicatorObserver;
    IDEReadOnlyItemsManager *_readOnlyItemsManager;
    DVTFindBar *_findBar;
    NSDictionary *_editorStateDictionaryPreviousToFind;
    IDEEditorIssueMenuController *_issueMenuController;
    id <DVTObservingToken> _showIssueMenuControllerObserver;
    IDEEditorMultipleContext *_multipleContext;
    IDEEditorSplittingController *_splittingController;
    id _retryOpenOperationBlock;
    id <DVTObservingToken> _workspaceLoadingObservingToken;
    NSString *_emptyContentString;
    NSMutableArray *_commandExtensions;
    NSArray *_defaultEditorCategories;
    NSArray *_validEditorCategories;
    int _borderSides;
    BOOL _wasLastActiveEditor;
    BOOL _showRelatedItemsControl;
    BOOL _showNavBarHistoryStepperControls;
    BOOL _showSiblingStepperControl;
    BOOL _showMiniIssueNavigator;
    BOOL _showSplittingControls;
    BOOL _changingNavigableItem;
    BOOL _changingNavBarNavigableItem;
    BOOL _isComparisonContext;
    BOOL _isPrimaryEditorContext;
    BOOL _viewIsInstalled;
    BOOL _shouldObserveDocumentChanges;
    BOOL _editorProvidesPathCellMenuItems;
    BOOL _isPerformingStateRestoration;
    BOOL _hideWorkspaceLoadingProgressIndicator;
    BOOL _canAddSplit;
    BOOL _canRemoveSplit;
}

+ (BOOL)_canEditEditorHistoryItem:(id)arg1 withEditorCategories:(id)arg2;
+ (BOOL)_canEditDocumentURL:(id)arg1 fileDataType:(id)arg2 documentExtensionIdentifier:(id)arg3 withEditorCategories:(id)arg4;
+ (id)_defaultDocumentExtensionForDocumentURL:(id)arg1 fileDataType:(id)arg2 withEditorCategories:(id)arg3;
+ (BOOL)automaticallyNotifiesObserversOfNavBarNavigableItem;
+ (BOOL)automaticallyNotifiesObserversOfNavigableItem;
+ (void)initialize;
+ (BOOL)automaticallyNotifiesObserversOfGreatestDocumentAncestor;
+ (id)keyPathsForValuesAffectingValueForNavBarNavigableItemRootChildItems;
@property(copy) id retryOpenOperationBlock; // @synthesize retryOpenOperationBlock=_retryOpenOperationBlock;
@property BOOL hideWorkspaceLoadingProgressIndicator; // @synthesize hideWorkspaceLoadingProgressIndicator=_hideWorkspaceLoadingProgressIndicator;
@property BOOL canRemoveSplit; // @synthesize canRemoveSplit=_canRemoveSplit;
@property BOOL canAddSplit; // @synthesize canAddSplit=_canAddSplit;
@property IDEEditorMultipleContext *multipleContext; // @synthesize multipleContext=_multipleContext;
@property(copy) NSArray *validEditorCategories; // @synthesize validEditorCategories=_validEditorCategories;
@property BOOL showSiblingStepperControl; // @synthesize showSiblingStepperControl=_showSiblingStepperControl;
@property BOOL showRelatedItemsControl; // @synthesize showRelatedItemsControl=_showRelatedItemsControl;
@property BOOL showNavBarHistoryStepperControls; // @synthesize showNavBarHistoryStepperControls=_showNavBarHistoryStepperControls;
@property BOOL showSplittingControls; // @synthesize showSplittingControls=_showSplittingControls;
@property BOOL showMiniIssueNavigator; // @synthesize showMiniIssueNavigator=_showMiniIssueNavigator;
@property(readonly) DVTScopeBarsManager *scopeBarsManager; // @synthesize scopeBarsManager=_scopeBarsManager;
@property(getter=isPrimaryEditorContext) BOOL primaryEditorContext; // @synthesize primaryEditorContext=_isPrimaryEditorContext;
@property(readonly) NSIndexSet *navigableItemSiblingsSelectionIndexes; // @synthesize navigableItemSiblingsSelectionIndexes=_navigableItemSiblingsSelectionIndexes;
@property(readonly) NSArray *navigableItemSiblings; // @synthesize navigableItemSiblings=_navigableItemSiblings;
@property(readonly) IDENavigableItemCoordinator *navigableItemCoordinator; // @synthesize navigableItemCoordinator=_navigableItemCoordinator;
@property IDENavigableItem *navigableItem; // @synthesize navigableItem=_navigableItem;
@property(readonly) IDENavigableItem *navBarNavigableItemRoot; // @synthesize navBarNavigableItemRoot=_navBarNavigableItemRoot;
@property(readonly) IDENavigableItem *navBarNavigableItem; // @synthesize navBarNavigableItem=_navBarNavigableItem;
@property(readonly) IDEEditorGeniusResults *editorGeniusResults; // @synthesize editorGeniusResults=_editorGeniusResults;
@property IDEEditor *editor; // @synthesize editor=_editor;
@property IDEEditorArea *editorArea; // @synthesize editorArea=_editorArea;
@property(readonly) NSString *documentExtensionIdentifier; // @synthesize documentExtensionIdentifier=_documentExtensionIdentifier;
@property id <IDEEditorContextDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSArray *defaultEditorCategories; // @synthesize defaultEditorCategories=_defaultEditorCategories;
@property(getter=isComparisonContext) BOOL comparisonContext; // @synthesize comparisonContext=_isComparisonContext;
@property int borderSides; // @synthesize borderSides=_borderSides;
- (void)stateRepositoryDidChange:(id)arg1;
- (id)_navigableItemForEditingFromArchivedRepresentation:(id)arg1 error:(id *)arg2;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (id)scopeBarsManagerForEditor:(id)arg1;
- (void)goBackInHistoryByCommandWithShiftPlusAlternate:(id)arg1;
- (void)goForwardInHistoryByCommandWithShiftPlusAlternate:(id)arg1;
- (void)goBackInHistoryByCommandWithAlternate:(id)arg1;
- (void)goForwardInHistoryByCommandWithAlternate:(id)arg1;
- (void)goBackInHistoryByCommand:(id)arg1;
- (void)goForwardInHistoryByCommand:(id)arg1;
- (void)_setShowNavBarHistoryStepperControls:(BOOL)arg1;
- (void)_setShowRelatedItemsControl:(BOOL)arg1;
- (void)_rebuildRightControlGroup;
- (void)_rebuildLeftControlGroup;
- (void)updateWithHistoryStack:(id)arg1;
- (id)currentHistoryStack;
- (void)_openEditorHistoryItemFromStateSaving:(id)arg1;
- (void)_giveEditorFocusIfNeeded;
- (BOOL)_editorHasFocus;
- (BOOL)_findBarHasFocus;
- (BOOL)_viewHasFocus:(id)arg1;
- (void)takeFocus;
- (id)supplementalMainViewController;
- (BOOL)canBecomeMainViewController;
- (void)dvtFindBar:(id)arg1 didWrap:(BOOL)arg2 reverse:(BOOL)arg3;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
- (void)hideFindBar:(id)arg1;
- (void)_hideFindBarAndRestoreSelection:(BOOL)arg1 animate:(BOOL)arg2;
- (void)replaceAndFindPrevious:(id)arg1;
- (void)replaceAndFindNext:(id)arg1;
- (void)replaceAll:(id)arg1;
- (void)replace:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findAndReplace:(id)arg1;
- (void)find:(id)arg1;
- (void)_uninstallFindBar;
- (void)_installFindBar;
- (id)_findScopeBar;
- (id)_findBar;
- (BOOL)dvtFindBar:(id)arg1 validateUserInterfaceItem:(id)arg2;
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;
@property(readonly) NSView *scopeBarsBaseView;
- (void)invalidate;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)_validateOpenInAdjacentEditorCommandForUserInterfaceItem:(id)arg1 forEventBehavior:(int)arg2;
- (void)showMiniIssuesNavigatorMenu:(id)arg1;
- (void)showDocumentItemsMenu:(id)arg1;
- (void)showGroupFilesMenu:(id)arg1;
- (void)showTopLevelItemsMenu:(id)arg1;
- (void)showNextFilesHistoryMenu:(id)arg1;
- (void)showNextHistoryMenu:(id)arg1;
- (void)showPreviousFilesHistoryMenu:(id)arg1;
- (void)showPreviousHistoryMenu:(id)arg1;
- (void)showRelatedItemsMenu:(id)arg1;
- (void)unlockDocument:(id)arg1;
- (void)_popUpMenuForNavigableItem:(id)arg1;
- (void)ide_revertDocumentToSaved:(id)arg1;
- (void)_shouldRevertAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)closeDocument:(id)arg1;
- (BOOL)_canAskDocumentToClose;
- (void)_editorDocument:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)openInAdjacentEditorWithShiftPlusAlternate:(id)arg1;
- (void)openInAdjacentEditorWithAlternate:(id)arg1;
- (void)_openInAdjacentEditorWithEventBehavior:(int)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (BOOL)wantsForwardedScrollEventsForAxis:(long long)arg1;
- (void)fixPreviousIssue:(id)arg1;
- (void)fixNextIssue:(id)arg1;
- (void)jumpToPreviousIssue:(id)arg1;
- (void)jumpToNextIssue:(id)arg1;
- (void)jumpToPreviousCounterpartWithShiftPlusAlternate:(id)arg1;
- (void)jumpToPreviousCounterpartWithAlternate:(id)arg1;
- (void)jumpToPreviousCounterpart:(id)arg1;
- (void)jumpToNextCounterpartWithShiftPlusAlternate:(id)arg1;
- (void)jumpToNextCounterpartWithAlternate:(id)arg1;
- (void)jumpToNextCounterpart:(id)arg1;
- (void)_jumpToCounterpartUp:(BOOL)arg1;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (id)pathControlPasteboardReadingOptions;
- (id)pathCell:(id)arg1 menuItemForNavigableItem:(id)arg2 defaultMenuItem:(id)arg3;
- (id)pathCell:(id)arg1 childItemsForItem:(id)arg2;
- (void)pathCell:(id)arg1 didUpdateMenu:(id)arg2;
- (id)_hiddenMenuItemForCommandExtension:(id)arg1;
- (BOOL)pathCell:(id)arg1 shouldSeparateDisplayOfChildItemsForItem:(id)arg2;
- (void)_currentSelectedItemsChanged;
- (void)_checkShouldCoalesceUpdatesForCurrentSelectedItemsChanged;
- (BOOL)_isCurrentEventARepeatKeyDownEvent;
- (void)_updateSubDocumentNavigableItems;
- (void)_selectNavigableItem:(id)arg1 updateOutputSelection:(id)arg2;
- (void)removeSplitForSplittingController:(id)arg1;
- (void)addSplitForSplittingController:(id)arg1;
- (void)setEmptyContentString:(id)arg1;
- (struct CGRect)grabRect;
- (void)_setSupportsReadOnlyIndicator:(BOOL)arg1;
- (void)_setCanRemoveSplit:(BOOL)arg1;
- (void)_setCanAddSplit:(BOOL)arg1;
- (void)_setShowSplittingControls:(BOOL)arg1;
- (void)_setShowMiniIssueNavigator:(BOOL)arg1;
- (void)_setShowSiblingStepperControl:(BOOL)arg1;
- (void)_updateSiblingStepperControlVisibility;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_clearRecentEditorDocumentsList:(id)arg1;
- (void)_changeMaximumRecentFilesLimit:(id)arg1;
- (id)_recentEditorDocumentsCapacityPreferenceMenuItem;
- (void)_navigateToRelatedNavigableItem:(id)arg1;
- (void)setNavigableItemSiblingsSelectionIndexes:(id)arg1;
- (void)_importNavigableItem:(id)arg1;
- (BOOL)_notifyDelegateAndOpenEditorHistoryItem:(id)arg1 previousHistoryItemOrNil:(id)arg2;
- (BOOL)_notifyDelegateAndOpenEditorHistoryItem:(id)arg1 updateHistory:(BOOL)arg2;
- (BOOL)_notifyDelegateAndOpenEditorOpenSpecifier:(id)arg1 updateHistory:(BOOL)arg2;
- (BOOL)_notifyDelegateAndOpenNavigableItem:(id)arg1 documentExtensionIdentifier:(id)arg2 locationToSelect:(id)arg3 annotationRepresentedObject:(id)arg4 stateDictionary:(id)arg5 annotationWantsIndicatorAnimation:(BOOL)arg6 exploreAnnotationRepresentedObject:(id)arg7;
- (BOOL)_canEditEditorHistoryItem:(id)arg1;
- (BOOL)_canEditEditorOpenSpecifier:(id)arg1;
- (BOOL)_canEditEditorOpenSpecifier:(id)arg1 withEditorCategories:(id)arg2;
- (void)_applyEditorStateDictionary:(id)arg1 forDocumentExtensionIdentifier:(id)arg2 atDocumentURLToCurrentEditor:(id)arg3;
- (int)_openNavigableItem:(id)arg1 documentExtension:(id)arg2 document:(id)arg3;
- (int)_openNavigableItem:(id)arg1 documentExtension:(id)arg2;
- (void)_closeDocument:(id)arg1;
- (id)_newEditorDocumentWithClass:(Class)arg1 ofURL:(id)arg2 ofType:(id)arg3 extension:(id)arg4;
- (int)_openNavigableItem:(id)arg1;
- (id)_defaultDocumentExtensionForNavigableItem:(id)arg1;
- (void)_alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_navigateAwayFromCurrentDocumentWithURL:(id)arg1;
- (BOOL)openEditorHistoryItem:(id)arg1;
- (BOOL)openEditorOpenSpecifier:(id)arg1;
- (BOOL)_openEditorOpenSpecifier:(id)arg1 updateHistory:(BOOL)arg2;
- (BOOL)_openEditorHistoryItem:(id)arg1 previousHistoryItemOrNil:(id)arg2;
- (void)_navigableItemChanged;
- (BOOL)_openEditorHistoryItem:(id)arg1 updateHistory:(BOOL)arg2;
- (void)_openEmptyEditor;
- (void)_registerForDocumentNotificationsForDocument:(id)arg1;
- (void)_unregisterFromDocumentNotifications;
- (void)_updateNavBarNavigableItemForNavItem:(id)arg1;
- (void)_setEmptyRootNavigableItem;
- (void)_clearWorkspaceloadingObservation;
- (void)_primitiveSetNavBarRootNavigableItem:(id)arg1 selectedNavigableItem:(id)arg2;
- (void)setNavBarNavigableItem:(id)arg1;
- (id)currentHistoryItem;
- (id)_currentSelectedDocumentLocations;
- (void)_updateSiblingInfoFromNavigableItem;
- (void)_performBlockInsideReentrantGuard:(id)arg1;
- (BOOL)_canChangeNavigableItem;
- (void)_mainViewControllerChanged;
- (void)_syncGradientStyleForJumpBarControls;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (BOOL)_enableJumpToCounterpartMenuItems;
- (id)_jumpToCounterpartsCategoryNavigableItem;
- (void)_setEditorGeniusResultsGenerationEnabled:(BOOL)arg1;
- (BOOL)_editorGeniusResultsGenerationEnabled;
- (void)_writeCurrentStateToLastUsedDictionaryIfNeeded;
- (id)_defaultEditorStateDictionaryForDocumentExtensionIdentifier:(id)arg1 forDocumentURL:(id)arg2;
- (id)navigableItemCoordinator:(id)arg1 editorDocumentForNavigableItem:(id)arg2;
- (void)_greatestDocumentAncestorWasForgotten;
- (id)willPresentError:(id)arg1;
- (void)presentError:(id)arg1;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (id)workspace;
- (void)loadView;
- (void)_setEditorView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_adjustSubviewBorders;
- (void)setGreatestDocumentAncestor:(id)arg1;
- (id)greatestDocumentAncestor;
- (id)navBarNavigableItemRootChildItems;
- (id)_generateNodeAndAddMappingToWorkspaceTabControllerLayoutTree:(id)arg1;

@end

@interface IDEInspectorArea : IDEUtilityArea
{
    NSMutableDictionary *_categoryControllers;
}

- (BOOL)delegateFirstResponder;
- (id)_descendentsAcceptingKeyView:(id)arg1;
- (void)loadView;
- (id)placeholderStringForInputNavigableItems:(id)arg1 derivedItems:(id)arg2 inCategory:(id)arg3;
- (void)unbindReplacementView:(id)arg1 forSliceExtension:(id)arg2 inCategory:(id)arg3;
- (void)bindReplacementView:(id)arg1 forSliceExtension:(id)arg2 inCategory:(id)arg3;
- (id)categoryIdentifiersForEditorExtension:(id)arg1;
- (id)titleKeyPathForSliceExtension:(id)arg1;
- (id)titleForSliceExtension:(id)arg1;
- (BOOL)categorySupportsMultipleSlices:(id)arg1;
- (id)sliceExtensionsForNavigableItems:(id)arg1 inCategory:(id)arg2 withWorkspaceDocument:(id)arg3;
- (id)navigableItemsForInputNavigableItems:(id)arg1 inCategory:(id)arg2;
- (id)categoryControllerForCategory:(id)arg1;
- (id)preferredCategoriesPersistenceKey;
- (void)viewDidInstall;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDENavigatorOutlineView : DVTOutlineView
{
    double _groupHeaderRowHeight;
    long long _batchRowUpdateCount;
    id _itemBeingFullyReloaded;
    NSHashTable *_unfilteredRootItems;
    NSPredicate *_filterPredicate;
    DVTDelayedValidator *_delayedValidator;
    NSString *_emptyContentStringCopy;
    SEL _keyAction;
    id <IDENavigatorOutlineViewLoadingDelegate> _loadingDelegate;
    struct _IDEOutlineViewGroupInfo *_groupInfo;
    struct {
        unsigned int _needsToPushRowSelection:1;
        unsigned int _needsToRefreshBoundSelectedObjects:1;
        unsigned int _needsToRefreshBoundExpandedItems:1;
        unsigned int _suspendRowHeightInvalidation:1;
        unsigned int _doingBatchExpand:1;
        unsigned int _filteringEnabled:1;
        unsigned int _filteringActive:1;
        unsigned int _scrollSelectionToVisibleAfterRefreshingSelection:1;
        unsigned int _hasContent:1;
        unsigned int _didDrawContent:1;
        unsigned int _resettingRootItems:1;
        unsigned int _reloadingItems:1;
        unsigned int _didRecieveKeyDownEvent:1;
        unsigned int _didPublishSelectedObjects:1;
        unsigned int _extraFlags:18;
    } _idenovFlags;
}

+ (void)initialize;
@property id <IDENavigatorOutlineViewLoadingDelegate> loadingDelegate; // @synthesize loadingDelegate=_loadingDelegate;
@property SEL keyAction; // @synthesize keyAction=_keyAction;
@property(copy) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property double groupHeaderRowHeight; // @synthesize groupHeaderRowHeight=_groupHeaderRowHeight;
- (void)drawRect:(struct CGRect)arg1;
- (void)scrollSelectionToVisible;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (struct _NSRange)initialSelectionRangeForCell:(id)arg1 proposedRange:(struct _NSRange)arg2;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)_computeGroupsToDraw:(id)arg1 groupInfoByGroup:(id)arg2 forRowsInRange:(struct _NSRange)arg3;
- (BOOL)item:(id)arg1 isDescendantOfItem:(id)arg2;
- (struct CGRect)headerRectForGroupRange:(struct _NSRange)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (double)_indentationForRow:(long long)arg1 withLevel:(long long)arg2 isSourceListGroupRow:(BOOL)arg3;
- (struct CGRect)adjustRect:(struct CGRect)arg1 forItem:(id)arg2 row:(long long)arg3 inGroupRange:(struct _NSRange)arg4;
- (BOOL)groupWithRangeShouldDrawLeftDivider:(struct _NSRange)arg1;
- (BOOL)groupWithRangeShouldDrawTopDivider:(struct _NSRange)arg1;
- (struct _NSRange)rowRangeForEnclosingGroupOfItem:(id)arg1;
- (struct _NSRange)rowRangeForEnclosingGroupOfTreeNode:(id)arg1;
- (id)enclosingGroupItemForItem:(id)arg1;
- (struct _IDEOutlineViewGroupInfo *)enclosingGroupInfoForRow:(long long)arg1;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (void)_setNeedsDisplayInSelectedRows;
- (BOOL)dvt_highlightColorDependsOnWindowState;
- (void)accessibilitySetSelectedRowsAttribute:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setSortDescriptors:(id)arg1;
@property(copy) NSArray *rootItems;
- (void)_updateRootItems:(id)arg1 sortDescriptors:(id)arg2;
- (BOOL)isRootItem:(id)arg1;
@property(readonly) id realDelegate;
@property(readonly) id realDataSource;
- (void)setDelegate:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)reloadData;
- (void)reloadItem:(id)arg1 reloadChildren:(BOOL)arg2;
- (void)item:(id)arg1 expandedAddingRows:(long long)arg2;
- (void)registerGroupHeaderItem:(id)arg1 atRow:(unsigned long long)arg2;
- (void)printGroupInfo;
- (void)_clearGroupingInfo;
- (id)itemBeingFullyReloaded;
@property(readonly, getter=isReloadingItems) BOOL reloadingItems;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)_refreshDisplayForItem:(id)arg1;
- (id)itemsAtIndexes:(id)arg1;
- (void)updateBoundExpandedItems;
- (void)updateBoundSelectedObjects;
- (void)publishBoundSelectedObjects;
- (void)_updateBoundContentArrayOrSet;
- (void)updateBoundContentSet;
- (void)updateBoundContentArray;
- (void)_refreshBoundExpandedAndSelectedItems:(id)arg1;
- (void)refreshBoundSelectedObjects;
- (void)refreshBoundExpandedItems;
- (id)dvtExtraBindings;
- (void)noteAllRowHeightsMayHaveChanged;
- (void)setShouldSuspendPublishBoundSelectedObjects:(BOOL)arg1;
- (BOOL)shouldSuspendPublishBoundSelectedObjects;
- (void)concludeBatchRowUpdates;
- (void)beginBatchRowUpdates;
- (void)setShouldSuspendRowHeightInvalidation:(BOOL)arg1;
- (BOOL)shouldSuspendRowHeightInvalidation;
- (void)collapseItem:(id)arg1;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)expandItem:(id)arg1;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)expandAncestorsForItem:(id)arg1;
- (void)_expandAncestorsForItem:(id)arg1;
- (void)setFilteringEnabled:(BOOL)arg1;
- (BOOL)filteringEnabled;
- (void)setFilteringActive:(BOOL)arg1;
- (long long)filterProgress;
@property(readonly, getter=isFilteringActive) BOOL filteringActive;
- (id)emptyContentString;
- (void)setEmptyContentString:(id)arg1;
- (void)_updateEmptyContentString;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_ide_commonInit;

@end

@interface _IDENavigatorOutlineViewDataSource : NSObject <NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    IDENavigatorOutlineView *_outlineView;
    id _expandedItems;
    id _realObject;
    id _rootItems;
    id _filterProgressObserver;
    id _navigableItemGraphObserver;
    id _navigableItemPropertyObserver;
    id _forgottenNavigableItemsObserver;
    NSMapTable *_navItemChangeCountByItem;
    IDENICFilterProxy *_coordinatorFilteredItems;
    unsigned long long _numberOfRowsBeforeExpandOrCollapse;
    BOOL _didWarnForUnusualRowHeight;
    struct {
        unsigned int realDataSourceRespondsTo_child_ofItem:1;
        unsigned int realDataSourceRespondsTo_childItemsForItem:1;
        unsigned int realDataSourceRespondsTo_isItemExpandable:1;
        unsigned int realDataSourceRespondsTo_numberOfChildrenOfItem:1;
        unsigned int realDataSourceRespondsTo_objectValueForTableColumn_byItem:1;
        unsigned int realDataSourceRespondsTo_setObjectValue_forTableColumn_byItem:1;
        unsigned int realDelegateRespondsTo_willDisplayCell_forTableColumn_item:1;
        unsigned int realDelegateRespondsTo_selectionIndexesForProposedSelection:1;
        unsigned int realDelegateRespondsTo_dataCell_forTableColumn_item:1;
        unsigned int realDelegateRespondsTo_ItemDidExpand:1;
        unsigned int realDelegateRespondsTo_ItemDidCollapse:1;
        unsigned int realDelegateRespondsTo_heightOfRowByItem:1;
        unsigned int realDelegateRespondsTo_shouldShowOutlineCellForItem:1;
        unsigned int realDelegateRespondsTo_shouldShowOutlineCellForItemMouseHovering:1;
        unsigned int realDelegateRespondsTo_shouldExpandItem:1;
        unsigned int realDelegateRespondsTo_shouldCollapseItem:1;
        unsigned int realDelegateRespondsTo_outlineViewSelectionDidChange:1;
        unsigned int realDelegateRespondsTo_toolTipForCell:1;
        unsigned int realDelegateRespondsTo_isGroupHeaderItem:1;
        unsigned int realDelegateRespondsTo_shouldShowCellExpansion:1;
        unsigned int notifyingDelegateOfExpandOrCollapse:1;
        unsigned int clearingExpandedItems:1;
        unsigned int accessingChildItemsForItem:1;
        unsigned int tryWorkaroundForIsMajorGroupOn10_6;
        unsigned int _pad:8;
    } _idenovdsFlags;
}

@property(readonly) id realObject; // @synthesize realObject=_realObject;
@property(readonly) IDENavigatorOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (double)_outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (void)outlineViewItemDidExpand:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
@property(readonly) NSHashTable *expandedItems; // @synthesize expandedItems=_expandedItems;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)childItemsForItem:(id)arg1;
- (void)refreshFilterPredicate;
@property(copy) NSArray *rootItems; // @synthesize rootItems=_rootItems;
- (void)processNavigableItemDidForgetNotification:(id)arg1;
- (void)processNavigableItemGraphChangeNotification:(id)arg1;
- (void)_clearExpandedItems;
- (BOOL)notifyingRealDelegateOfExpandOrCollapse;
- (id)objectInOutlineViewDataSourceRootItemsAtIndex:(long long)arg1;
- (long long)countOfOutlineViewDataSourceRootItems;
- (id)initWithOutlineView:(id)arg1 realObject:(id)arg2;

@end

@interface IDELibraryArea : IDEUtilityArea
{
    NSMutableDictionary *_previousLibraries;
    NSMutableDictionary *_libraryExtensions;
}

+ (id)defaultViewNibName;
+ (double)extraHeight;
+ (double)tileHeight;
- (void)chooserView:(id)arg1 userDidSelectChoices:(id)arg2;
- (void)hideLibraryArea;
@property(readonly, getter=isCollapsed) BOOL collapsed;
- (void)showLibraryArea;
- (id)_enclosingSplitView;
- (void)loadView;
- (id)categoryIdentifiersForEditorExtension:(id)arg1;
- (BOOL)categorySupportsMultipleSlices:(id)arg1;
- (id)sliceExtensionsForNavigableItems:(id)arg1 inCategory:(id)arg2 withWorkspaceDocument:(id)arg3;
- (id)_libraryExtensionForIdentifier:(id)arg1;
- (BOOL)delegateFirstResponder;
- (id)willReplaceSliceViewControllers:(SEL)arg1;
- (void)viewDidInstall;
- (void)activateFilterFieldForFocusFromMenuItem:(id)arg1;
- (void)activateFilterFieldForFocus;
- (id)libraryControllerForExtension:(id)arg1;
- (id)preferredCategoriesPersistenceKey;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEPathCell : NSPathCell <DVTFilteringMenuDelegate, NSMenuDelegate>
{
    NSMenu *_trackingMenu;
    IDEPathComponentCell *_clickedIDEPathComponentCell;
    IDEPathCellNavigableItemObserver *_itemObserver;
    NSMutableArray *_itemsObservedForChildItems;
    NSMutableSet *_cellsWithDirtyImages;
    NSMutableSet *_cellsWithDirtyNames;
    DVTDelayedValidator *_dirtyCellValidator;
    int _borderSides;
    int _gradientStyle;
    struct {
        unsigned int _lastComponentFillsWidth:1;
        unsigned int _delegateRespondsToShouldSeparateDisplayOfChildItemsForItem:1;
        unsigned int _delegateRespondsToChildItemsForItem:1;
        unsigned int _delegateRespondsToShouldPopUpMenuForPathComponentCell:1;
        unsigned int _delegateProvidesMenuItems:1;
        unsigned int _delegateProvidesAccessibilityDescriptions:1;
    } _idePathCellFlags;
    BOOL _needsToUpdateComponentCells;
}

+ (unsigned long long)defaultFocusRingType;
@property int borderSides; // @synthesize borderSides=_borderSides;
@property int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
- (id)ide_accessibilityPopUpMenuParent:(id)arg1;
- (id)ide_accessibilityChildMenuForChild:(id)arg1;
- (void)ide_accessibilityPerformPressForChild:(id)arg1;
- (id)ide_accessibilitySizeOfChild:(id)arg1;
- (id)ide_accessibilityPositionOfChild:(id)arg1;
- (struct CGRect)ide_accessibilityScreenRectForPathComponent:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)ide_accessibilityObjectForComponentCell:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)_handleClickInComponentCell:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)acceptsFirstResponder;
- (void)filterItems:(id)arg1 inMenu:(id)arg2 forSearchString:(id)arg3;
- (void)popUpMenuForComponentCell:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)populatePopUpMenu:(id)arg1 withItems:(id)arg2;
- (void)menuNeedsUpdate:(id)arg1;
- (void)cancelMenuTracking;
- (id)_menuItemWithNavigableItem:(id)arg1 additionalItems:(id *)arg2 currentGroupIdentifier:(id *)arg3;
- (void)_setupSubmenuForMenuItem:(id)arg1;
- (void)_selectItem:(id)arg1;
- (BOOL)_delegate_shouldSeparateDisplayOfChildItemsForItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingChildItemsOfAllItems;
- (void)startObservingChildItemsOfMenuItems:(id)arg1;
- (id)peerNavigableItemsForComponentCell:(id)arg1;
- (id)childItemsForItem:(id)arg1;
- (id)backgroundColor;
- (void)invalidateNameForPathComponentCell:(id)arg1;
- (void)invalidateImageForPathComponentCell:(id)arg1;
- (void)setNeedsDisplayForCell:(id)arg1;
- (id)pathComponentCellForRepresentedObject:(id)arg1;
- (void)_updateComponentCells;
- (void)_updateDirtyCells:(id)arg1;
- (id)lineageForNavigableItem:(id)arg1 rootItems:(id)arg2;
- (id)_componentCellsFromItems:(id)arg1;
- (id)_noSelectionComponentCell;
- (id)_componentCellWithRepresentedObject:(id)arg1 title:(id)arg2 image:(id)arg3;
- (void)invalidateComponentCells;
- (struct CGRect)grabRectInView:(id)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)pathComponentCellAtPoint:(struct CGPoint)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)rectOfPathComponentCell:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
@property BOOL lastComponentFillsWidth;
- (void)setFont:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)reset;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_IDEPathCellCommonInit;

@end

@interface IDEPathCellNavigableItemObserver : NSObject
{
    IDEPathCell *_owner;
    NSHashTable *_observedItems;
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tearDownObservingForItems:(id)arg1;
- (void)setupObservingForItems:(id)arg1;
@property(readonly) NSSet *observedItems;
- (id)initWithOwner:(id)arg1;

@end

@interface IDEPathComponentCellAccessibilityObject : NSObject
{
    IDEPathComponentCell *_componentCell;
    NSString *_role;
    id _pathCell;
    NSString *_description;
}

@property(readonly) IDEPathComponentCell *componentCell; // @synthesize componentCell=_componentCell;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithPathComponentCell:(id)arg1 pathCell:(id)arg2 description:(id)arg3;

@end

@interface IDEPathComponentCell : NSPathComponentCell
{
    int _gradientStyle;
    BOOL _isLastItem;
    BOOL _isFirstItem;
}

+ (id)_textDrawingAttributes;
@property BOOL isFirstItem; // @synthesize isFirstItem=_isFirstItem;
@property BOOL isLastItem; // @synthesize isLastItem=_isLastItem;
@property int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawDividerForFrame:(struct CGRect)arg1 inControlView:(id)arg2;
- (void)_drawChevronDividerInFrame:(struct CGRect)arg1;
- (id)shadow;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (double)_rightDividerWidth;
- (double)_leftDividerWidth;
- (void)_useChevronForLeftEdge:(char *)arg1 rightEdge:(char *)arg2;
- (id)_attributedStringValue;
- (double)iconSize;

@end

@interface IDEPathControl : NSPathControl
{
}

+ (Class)cellClass;
+ (unsigned long long)defaultFocusRingType;
+ (void)initialize;
- (id)accessibilityPopUpMenuParent:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)popUpMenuForComponentCell:(id)arg1;
- (void)_popUpMenuForComponentCell:(id)arg1;
- (struct CGRect)grabRect;
- (void)setFont:(id)arg1;
@property BOOL lastComponentFillsWidth;
@property int borderSides;
- (BOOL)isOpaque;
@property int gradientStyle;
- (id)outputSelection;
- (void)updateBoundContent;
- (void)updateBoundSelectedNavigableItem;
- (void)setDelegate:(id)arg1;
- (id)dvtExtraBindings;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDESelection : NSObject <NSCopying>
{
    NSArray *_navigableItemArchivableRepresentations;
}

+ (id)selectionWithNavigableItemArchivableRepresentations:(id)arg1;
+ (id)selectionWithNavigableItems:(id)arg1;
@property(readonly) NSArray *navigableItemArchivableRepresentations; // @synthesize navigableItemArchivableRepresentations=_navigableItemArchivableRepresentations;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNavigableItemArchivableRepresentations:(id)arg1;

@end

@interface IDEVariablesView : IDEViewController <NSOutlineViewDataSource, DVTOutlineViewDelegate, IDEScopeableView>
{
    id <IDEVariablesViewContentProvider> _contentProvider;
    IDEVariablesViewNode *_root;
    NSMapTable *_variableNodeToObservationToken;
    IDEVariablesViewStateManager *_stateManager;
    long long _selectedScopeTag;
    NSMutableSet *_dataValueWatchers;
    DVTScopeBarView *_scopeBar;
    NSSearchField *_filterField;
    DVTBorderedView *_sideBorderView;
    NSOutlineView *_outlineView;
    NSPopUpButton *_scopePopup;
    BOOL _restoringExpandedState;
    BOOL _waitingToRefresh;
}

+ (void)setShowsFormattedSummary:(BOOL)arg1;
+ (BOOL)showsFormattedSummary;
+ (void)setShowsType:(BOOL)arg1;
+ (BOOL)showsType;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (void)initialize;
@property(readonly) NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
@property long long selectedScopeTag; // @synthesize selectedScopeTag=_selectedScopeTag;
@property(readonly) IDEVariablesViewStateManager *stateManager; // @synthesize stateManager=_stateManager;
@property id <IDEVariablesViewContentProvider> contentProvider; // @synthesize contentProvider=_contentProvider;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (BOOL)_shouldExpandItemAsResultOfOptionClick:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)outlineView:(id)arg1 shouldMouseHoverForTableColumn:(id)arg2 row:(long long)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (id)_predicateForMatchString:(id)arg1;
- (void)copy:(id)arg1;
- (void)filterChanged:(id)arg1;
- (void)watchChangeOnObject:(id)arg1 atKeyPath:(id)arg2 withChangeBlock:(id)arg3;
- (void)_restoreExpansionStateOfNodeAndChildren:(id)arg1;
- (void)_restoreExpandedNodes;
- (void)_restoreExpandedNodesEnsuringExpandedChildrenAreLoaded;
- (void)_loadChildrenOfNodeIfNodeIsExpanded:(id)arg1 countdownNotifier:(id)arg2;
- (void)_loadExpandedNodes:(id)arg1 completionHandler:(id)arg2;
- (void)addScopeChoice:(id)arg1 tag:(long long)arg2;
- (double)_spaceBetweenRightSideScopeBarComponents;
- (void)removeViewFromScopeBarUsingAnimation:(id)arg1;
- (void)addViewToScopeBarOnRightUsingAnimation:(id)arg1;
- (void)installNewRootFromChildrenOnceExpandedChildrenAreLoaded:(id)arg1;
- (void)_updateScopePopUpTitle;
@property(readonly) NSString *filterString;
- (BOOL)delegateFirstResponder;
- (void)_reloadObject:(id)arg1;
- (void)_handleVariableNode:(id)arg1 change:(id)arg2;
- (void)_observeModelObject:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (void)_variablesViewCommonInit;
- (void)awakeFromNib;
- (id)init;

@end

@interface IDECountdownNotifier : NSObject
{
    unsigned long long _counter;
    NSLock *_lock;
    id _completionhandler;
    BOOL _invalid;
}

- (void)decrementCounter;
- (void)incrementCounter;
- (id)initWithCompletionHandler:(id)arg1;

@end

@interface _IDENavigableItemExtraInfo : NSObject
{
    DVTExtension *_representedExtension;
    NSMapTable *_navigableItemsByRepresentedObject;
    NSString *_childItemsKeyPath;
}

@property(copy) NSString *childItemsKeyPath; // @synthesize childItemsKeyPath=_childItemsKeyPath;
@property(readonly) NSMapTable *navigableItemsByRepresentedObject; // @synthesize navigableItemsByRepresentedObject=_navigableItemsByRepresentedObject;
@property DVTExtension *representedExtension; // @synthesize representedExtension=_representedExtension;
- (id)init;

@end

@interface IDENavigableItem : NSObject <DVTInvalidation>
{
    id _observationInfo;
    IDENavigableItemCoordinator *_coordinator;
    id _representedObject;
    IDENavigableItem *_parentItem;
    id _childItems;
    id _arrangedChildItems;
    NSPredicate *_filterPredicate;
    NSArray *_sortDescriptors;
    DVTStackBacktrace *_invalidationBacktrace;
    struct {
        unsigned int _childItemsNeedsUpdate:1;
        unsigned int _invalidatingChildItems:1;
        unsigned int _debug_8061745_shouldCaptureInvalidationBacktrace:1;
        unsigned int _observersRegisteredWithOldOrPriorOption:1;
        unsigned int _reserved:28;
    } _ideniFlags;
}

+ (Class)navigableItemClassForModelObject:(id)arg1;
+ (Class)registerInfoForClass:(Class)arg1 withExtension:(id)arg2;
+ (void)_customizeNewNavigableItemClass:(Class)arg1 forModelObjectClass:(Class)arg2 extension:(id)arg3;
+ (id)_createExtraInfoObject;
+ (id)classInfoByModelObjectClass;
+ (id)allNavigableItemExtensions;
+ (BOOL)automaticallyNotifiesObserversOfArrangedChildItems;
+ (BOOL)automaticallyNotifiesObserversOfParentItem;
+ (id)description;
+ (BOOL)automaticallyNotifiesObserversOfRepresentedObject;
+ (id)navigableItemWithRepresentedObject:(id)arg1;
+ (id)navigableItemWithRepresentedObject:(id)arg1 coordinator:(id)arg2;
+ (id)_navigableItemWithRepresentedObject:(id)arg1 parent:(id)arg2 inCoordinator:(id)arg3;
+ (id)representedExtension;
+ (id)_dynamicSubclass_navigableItemExtraInfo;
+ (id)_navigableItemExtraInfo;
@property(copy) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(copy) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property(readonly) IDENavigableItemCoordinator *navigableItemCoordinator; // @synthesize navigableItemCoordinator=_coordinator;
@property(readonly) id representedObject; // @synthesize representedObject=_representedObject;
- (id)groupIdentifier;
- (id)fileReference;
- (id)textColor;
- (id)contextualValueForProperty:(id)arg1;
- (id)descendantItemForRepresentedObject:(id)arg1 stopAtClass:(Class)arg2;
- (id)descendantItemForRepresentedObject:(id)arg1;
- (unsigned long long)indexOfChildItemForIdentifier:(id)arg1;
- (id)identifierForChildItem:(id)arg1;
- (id)archivableRepresentation;
- (id)nearestDocumentFileReferenceProvidingAncestor;
- (id)greatestDocumentAncestor;
- (BOOL)isDocumentNavigableItem;
- (void)didChangeArrangedChildItems;
- (void)willChangeArrangedChildItems;
- (unsigned long long)_currentNumberOfArrangedChildItems;
@property(readonly) NSArray *arrangedChildItems;
- (id)arrangeItems:(id)arg1;
- (BOOL)_shouldResetChildItemsOnDocumentClose;
@property(readonly) NSArray *childItems;
- (void)_resetChildItems;
- (void)_updateMutableChildItems:(id)arg1 forChangeKind:(unsigned long long)arg2 atIndexes:(id)arg3;
- (void)updateChildItemsForChangeKind:(unsigned long long)arg1 atIndexes:(id)arg2;
- (void)disposeInvalidatedChildItems;
- (void)invalidateChildItems;
- (void)_invalidateArrangedChildItems;
- (void)_setArrangedChildItems:(id)arg1;
- (unsigned long long)changeCount;
- (id)refreshChildItemsAndReturnItemsToDispose;
- (id)sortItems:(id)arg1;
- (id)filterItems:(id)arg1;
- (id)_reallyPrivateChildItems;
- (id)_childItems;
- (void)_willAccessChildItems;
- (void)willAccessChildItems;
- (unsigned long long)countOfChildNavigableItems;
- (void)getChildNavigableItems:(id *)arg1 range:(struct _NSRange)arg2;
- (id)childNavigableItemsAtIndexes:(id)arg1;
- (id)objectInChildNavigableItemsAtIndex:(unsigned long long)arg1;
- (id)childRepresentedObjects;
@property(readonly, getter=isLeaf) BOOL leaf;
- (void)_validateChildItems;
- (void)_setParentItem:(id)arg1;
@property(readonly) IDENavigableItem *parentItem; // @synthesize parentItem=_parentItem;
- (BOOL)_isWrappingDocumentFileReference;
- (void)setName:(id)arg1;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (id)observationInfo;
- (void)setObservationInfo:(id)arg1;
- (id)description;
- (void)_removeFromNavigableItemByRepresentedObjectMap;
- (void)_registerInNavigableItemByRepresentedObjectMap;
- (void)cacheValue:(id)arg1 forProperty:(id)arg2;
- (id)cachedValueForProperty:(id)arg1;
- (void)_documentDidClose;
- (void)dispose;
- (void)_dispose;
- (void)_enableInvalidationBacktraceCapturing;
- (void)_setCoordinator:(id)arg1;
- (id)coordinator;
- (void)_setRepresentedObject:(id)arg1;
- (id)initWithRepresentedObject:(id)arg1;
- (BOOL)coordinatorFilteringShouldFilterChildItems;
- (unsigned long long)navigableItem_conflictStateForUpdateOrMerge;
- (id)sourceControlCurrentRevision;
- (id)sourceControlLastModifiedDate;
- (id)sourceControlServerStatus;
- (int)sourceControlServerStatusFlag;
- (id)sourceControlLocalStatus;
- (int)sourceControlLocalStatusFlag;

// Remaining properties
@property(readonly) NSImage *image; // @dynamic image;
@property(readonly) NSString *name; // @dynamic name;

@end

@interface IDEEditorCoordinator : NSObject
{
}

+ (id)menuCommandTitleAdditionForEventBehavior:(int)arg1 fromPrimaryEditorContext:(BOOL)arg2;
+ (void)_setShouldActivateNewTabsAndWindows:(BOOL)arg1;
+ (BOOL)_shouldActivateNewTabsAndWindows;
+ (int)_defaultTargetForEventBehavior:(int)arg1;
+ (void)_setDefaultTarget:(int)arg1 forEventBehavior:(int)arg2;
+ (BOOL)_getTarget:(int *)arg1 forDefaultsValue:(id)arg2;
+ (id)_defaultsValueForTarget:(int)arg1;
+ (id)_defaultsKeyForEventBehavior:(int)arg1;
+ (int)_eventBehaviorForEventType:(unsigned long long)arg1;
+ (void)_openNavigationHUDSelection:(id)arg1 forWorkspaceDocument:(id)arg2 documentURL:(id)arg3 usingBlock:(id)arg4;
+ (void)openEditorHistoryItem:(id)arg1 forEditor:(id)arg2 takeFocus:(int)arg3;
+ (id)openEditorOpenSpecifier:(id)arg1 forEditor:(id)arg2 eventType:(unsigned long long)arg3;
+ (id)_openEditorOpenSpecifier:(id)arg1 forEditor:(id)arg2 eventBehavior:(int)arg3;
+ (id)openEditorOpenSpecifier:(id)arg1 forWorkspaceTabController:(id)arg2 eventType:(unsigned long long)arg3;
+ (void)_openEditorOpenSpecifier:(id)arg1 forWorkspaceTabController:(id)arg2 target:(int)arg3 takeFocus:(int)arg4;
+ (id)_openEditorOpenSpecifier:(id)arg1 forWorkspaceTabController:(id)arg2 eventType:(unsigned long long)arg3 takeFocus:(int)arg4;
+ (id)_openEditorOpenSpecifier:(id)arg1 forEditor:(id)arg2 eventType:(unsigned long long)arg3 takeFocus:(int)arg4;
+ (BOOL)_shouldAlwaysOpenInRequestingEditorContext:(id)arg1;
+ (id)_openEditorOpenSpecifier:(id)arg1 forWorkspaceTabController:(id)arg2 eventBehavior:(int)arg3 takeFocus:(int)arg4;
+ (id)_openRequestForEditorOpenSpecifier:(id)arg1 editorContext:(id)arg2 eventBehavior:(int)arg3 takeFocus:(int)arg4;
+ (id)_openRequestForEditorOpenSpecifier:(id)arg1 workspaceTabController:(id)arg2 editorContext:(id)arg3 eventBehavior:(int)arg4 takeFocus:(int)arg5;
+ (void)_doOpenEditorHistoryItem:(id)arg1 forEditorContext:(id)arg2 eventBehavior:(int)arg3 takeFocus:(int)arg4;
+ (void)_doOpenEditorOpenSpecifier:(id)arg1 forWorkspaceTabController:(id)arg2 editorContext:(id)arg3 target:(int)arg4 takeFocus:(int)arg5;
+ (void)_doOpenWithWorkspaceTabController:(id)arg1 editorContext:(id)arg2 target:(int)arg3 allowFallback:(BOOL)arg4 documentURL:(id)arg5 usingBlock:(id)arg6;
+ (void)_doOpenIn_SeparateWindow_withWorkspaceTabController:(id)arg1 documentURL:(id)arg2 usingBlock:(id)arg3;
+ (void)_doOpenIn_NewWindow_withWorkspaceTabController:(id)arg1 documentURL:(id)arg2 usingBlock:(id)arg3;
+ (void)_doOpenIn_SeparateTab_withWorkspaceTabController:(id)arg1 documentURL:(id)arg2 usingBlock:(id)arg3;
+ (void)_doOpenIn_SeparateEditor_withWorkspaceTabController:(id)arg1 documentURL:(id)arg2 usingBlock:(id)arg3;
+ (id)_layoutTreeNodeInTree:(id)arg1 withDocumentURL:(id)arg2 shouldMatchPrimaryEditorContext:(BOOL)arg3 shouldMatchGeniusEditorContexts:(BOOL)arg4;
+ (void)_doOpenIn_NewTab_withWorkspaceWindowController:(id)arg1 usingBlock:(id)arg2;
+ (void)_doOpenIn_NewEditor_withWorkspaceTabController:(id)arg1 usingBlock:(id)arg2;
+ (void)_doOpenIn_AdjacentEditor_withWorkspaceTabController:(id)arg1 editorContext:(id)arg2 documentURL:(id)arg3 usingBlock:(id)arg4;
+ (void)_doOpenIn_Ask_withWorkspaceTabController:(id)arg1 editorContext:(id)arg2 documentURL:(id)arg3 initialSelection:(id)arg4 options:(id)arg5 usingBlock:(id)arg6;
+ (id)openingEditorPerformanceMetric;
+ (double)doubleClickDelay;
+ (id)_debug8627047_workspaceTabControllerWhichShouldNotDrawNavigatorArea;
+ (void)setAccessibilityActionIsInProgress:(BOOL)arg1;
+ (void)initialize;

@end

@interface _IDEOpenRequest : NSObject <IDEOpenRequest>
{
    IDEEditorOpenSpecifier *_openSpecifier;
    IDEWorkspaceTabController *_workspaceTabController;
    IDEEditorContext *_editorContext;
    IDEEditorContext *_explicitEditorContext;
    int _eventBehavior;
    int _takeFocus;
    BOOL _didCancel;
    BOOL _didFinish;
}

- (void)cancel;
- (BOOL)isCancelled;
- (BOOL)isFinished;
- (void)_enqueueForEventBehavior:(int)arg1;
- (void)_runIfNecessary;
- (id)initWithOpenSpecifier:(id)arg1 explicitEditorContext:(id)arg2;
- (id)initWithOpenSpecifier:(id)arg1 workspaceTabController:(id)arg2 editorContext:(id)arg3 eventBehavior:(int)arg4 takeFocus:(int)arg5;
- (id)initWithIgnore;

@end

@interface _IDEApplicationControllerMenuDelegateForwarder : NSObject <NSMenuDelegate>
{
    id <NSMenuDelegate> _menuDelegate;
    BOOL _delegateRespondsToNeedsUpdate;
    BOOL _delegateRespondsToWillOpen;
    BOOL _delegateRespondsToDidClose;
}

- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)description;
- (id)initWithMenuDelegate:(id)arg1;

@end

@interface IDEApplicationController : NSObject <NSApplicationDelegate, NSMenuDelegate>
{
    BOOL _haveScannedForPlugins;
    NSDictionary *_extensionIdToMenuDict;
    BOOL _closeKeyEquivalentClosesTab;
    NSString *_documentExtensionIdForCurrentEditorAndNavigateMenus;
    NSString *_currentEditorMenuExtensionId;
    NSString *_currentNavigateMenuExtensionId;
    long long _originalNavigateMenuItemCount;
    NSMenuItem *_shiftedCloseMenuItem;
    NSMenuItem *_shiftedCloseAllMenuItem;
    IDEOrganizerWindowController *_windowController;
    IDESourceControlUIHandler *_sourceControlUIHandler;
    DVTDelayedValidator *_tabStateContextDelayedSaveValidator;
    NSMutableDictionary *_tabStateContextForTabNameMap;
    id <DVTObservingToken> _hotKeyToEnableFloatingDebuggerToken;
    id <DVTObservingToken> _lastActiveEditorToken;
    id <DVTObservingToken> _lastActiveEditorContextToken;
    id _keyBindingSetWillActivateObserver;
    id _keyBindingSetDidActivateObserver;
}

+ (id)sharedAppController;
+ (void)initialize;
@property BOOL haveScannedForPlugins; // @synthesize haveScannedForPlugins=_haveScannedForPlugins;
- (void)_setTabStateContext:(id)arg1 forTabNamed:(id)arg2;
- (id)_tabStateContextForTabNamed:(id)arg1;
- (id)_tabStateContextForTabNameMapByInstantiatingIfNeeded;
- (id)_tabStateContextForTabNameMapFromFilePath:(id)arg1;
- (BOOL)_saveTabStateContextForTabNameMapToFilePath:(id)arg1;
- (void)_updateEditorAndNavigateMenusIfNeeded;
- (void)_pruneNavigateMenu;
- (void)_pruneEditorMenu;
- (id)_navigateMenu;
- (id)_editorMenu;
- (id)_editorForMenuContent;
- (void)_updateUtilitiesMenuIfNeeded;
- (void)_updateEditMenuIfNeeded;
- (id)_utilitiesMenu;
- (id)_editMenu;
- (id)_closeMenuItem;
- (id)_closeCurrentTabMenuItem;
- (id)_fileMenu;
- (id)_cachedMenuForDefinitionExtensionIdentifier:(id)arg1;
- (id)_cachedMenuDefinitionExtensionIdentifiers;
- (void)_setKeyEquivalentForMenuItem:(id)arg1 toIncludeShiftKey:(BOOL)arg2;
- (void)_updateCloseKeyEquivalents;
- (void)_updateCloseKeyEquivalentsIfNeeded;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (unsigned long long)_shouldTerminateClosingDocuments;
- (void)menuNeedsUpdate:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)_updateGlobalHotKeyToEnableFloatingDebugger:(id)arg1;
- (void)_currentPreferenceSetChanged;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)_recordStatistics;
- (void)_incrementCountForKey:(id)arg1 in:(id)arg2;
- (void)_handleGetURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (void)_setupURLHandling;
- (void)applicationWillFinishLaunching:(id)arg1;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)_openFiles:(id)arg1;
- (void)_terminateAfterPresentingError:(id)arg1;
- (id)init;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)__dummyActionMethod:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)_targetForAction:(SEL)arg1;

@end

@interface IDEEditorArea : IDEViewController <IDEDebuggerBarEditorInfoProvider>
{
    NSView *_editorModeHostView;
    IDEEditorModeViewController *_editorModeViewController;
    int _editorMode;
    int _nonMiniDebuggingModeExtensionIdentifier;
    id <DVTObservingToken> _workspaceActivityObserver;
    IDEEditorContext *_lastActiveEditorContext;
    IDEDebugBar *_activeDebuggerBar;
    IDEDebugArea *_activeDebuggerArea;
    NSMutableDictionary *_defaultPersistentRepresentations;
    DVTAutoLayoutView *_editorAreaAutoLayoutView;
    DVTAutoLayoutView *_debuggerAreaAutoLayoutView;
    DVTBorderedView *_debuggerBarBorderedView;
    DVTBorderedView *_debuggerAreaBorderedView;
    DVTReplacementView *_debuggerBarReplacementView;
    DVTReplacementView *_debuggerAreaReplacementView;
    DVTSplitView *_debuggerSplitView;
    DVTSplitViewItem *_debugAreaSplitViewItem;
    double _heightToReturnToDebuggerArea;
    id _launchSessionObserver;
    id <DVTObservingToken> _inMiniDebuggingModeObservingToken;
    IDEWorkspaceTabControllerLayoutTree *_layoutTreeForNavigationHUD;
    IDEWorkspaceTabControllerLayoutTree *_oldLayoutTreeFromStateSaving;
    BOOL _didInstall;
    BOOL _needsToRefreshContexts;
    BOOL _didRestoreState;
    BOOL _userWantsEditorVisible;
    BOOL _showDebuggerArea;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingShowEditor;
+ (id)keyPathsForValuesAffectingSelectedMainNavigableItem;
+ (id)keyPathsForValuesAffectingPrimaryEditorDocument;
+ (id)keyPathsForValuesAffectingPrimaryEditorContext;
+ (int)defaultEditorMode;
+ (BOOL)automaticallyNotifiesObserversOfLastActiveEditorContext;
@property(readonly) int editorMode; // @synthesize editorMode=_editorMode;
@property(readonly) IDEDebugArea *activeDebuggerArea; // @synthesize activeDebuggerArea=_activeDebuggerArea;
@property(readonly) IDEDebugBar *activeDebuggerBar; // @synthesize activeDebuggerBar=_activeDebuggerBar;
@property IDEEditorContext *lastActiveEditorContext; // @synthesize lastActiveEditorContext=_lastActiveEditorContext;
@property(readonly) DVTReplacementView *debuggerAreaReplacementView; // @synthesize debuggerAreaReplacementView=_debuggerAreaReplacementView;
@property BOOL userWantsEditorVisible; // @synthesize userWantsEditorVisible=_userWantsEditorVisible;
@property IDEEditorModeViewController *editorModeViewController; // @synthesize editorModeViewController=_editorModeViewController;
- (void)_clearLayoutTreeForNavigationHUD;
- (void)setLayoutTreeForNavigationHUD:(id)arg1;
@property(readonly) IDEWorkspaceTabControllerLayoutTree *layoutTreeForNavigationHUD;
- (id)_generateLayoutTreeForNavigationHUD;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
@property DVTStateToken *stateToken; // @dynamic stateToken;
- (void)_updateStateSavingRegistrations;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)_resizeSubviewsForHeightIncrease:(double)arg1;
- (void)_resizeSubviewsForHeightDecrease:(double)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)_recordDebuggerSize;
- (void)_doRecordDebuggerSize;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)toggleDebuggerVisibility:(id)arg1;
- (void)activateConsole:(id)arg1;
@property BOOL showDebuggerArea;
- (void)_setShowDebuggerArea:(BOOL)arg1 animate:(BOOL)arg2;
- (void)showDebuggerArea:(id)arg1;
@property BOOL showEditor;
- (void)_updateDebuggerBarVisibility;
- (void)_addDebuggerBarToDebuggerArea;
- (void)_addDebuggerBarToEditorArea;
- (void)_moveDebuggerBarToDebuggerArea;
- (void)_moveDebuggerBarToEditorArea;
- (void)_hideDebuggerBarAndResetSplitViewFrames;
- (void)_resetSplitViewFrames;
@property(readonly) BOOL showDebuggerBar;
- (id)_defaultPersistentRepresentationForDocumentExtensionIdentifier:(id)arg1 documentURL:(id)arg2;
- (void)_clearDefaultPersistentRepresentationForDocumentExtensionIdentifier:(id)arg1 documentURL:(id)arg2;
- (void)_cacheDefaultPersistentRepresentation:(id)arg1 forDocumentExtensionIdentifier:(id)arg2 documentURL:(id)arg3;
- (void)setStateSavingDefaultPersistentRepresentations:(id)arg1;
- (id)stateSavingDefaultPersistentRepresentations;
- (id)_editorContexts;
- (void)_openEditorOpenSpecifier:(id)arg1 editorContext:(id)arg2 takeFocus:(BOOL)arg3;
- (void)_openEditorHistoryItem:(id)arg1 editorContext:(id)arg2 takeFocus:(BOOL)arg3;
@property(readonly) IDENavigableItem *selectedMainNavigableItem;
@property(readonly) IDEEditorDocument *primaryEditorDocument;
@property(readonly) IDEEditorContext *primaryEditorContext;
- (void)installDebugAreaWithExtensionID:(id)arg1;
- (void)installDefaultDebugArea;
- (void)setEditorMode:(int)arg1 completionBlock:(id)arg2;
- (void)_setEditorMode:(int)arg1;
- (void)editorContextWasRemoved:(id)arg1;
- (void)editorContextDidBecomeLastActiveEditor:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_refreshEditorContextsAndPreserveCurrentEditorHistoryStack:(BOOL)arg1;
- (void)_resetEditor;
- (BOOL)_canResetEditor;
- (void)_removeAssistantEditor;
- (BOOL)_canRemoveAssistantEditor;
- (id)_addNewAssistantEditor;
- (BOOL)_canAddNewAssistantEditor;
- (void)_addAssistantEditor;
- (BOOL)_canAddAssistantEditor;
- (void)_setAssistantEditorsLayout:(int)arg1;
- (BOOL)_canChangeAssistantEditorsLayout;
- (void)loadView;
- (void)_setEditorModeViewControllerWithPrimaryEditorContext:(id)arg1;

@end

@interface _IDECommandForwardingResponder : IDEActionForwardingResponder <IDESelectionSource>
{
    id <IDESelectionSource> _selectionSource;
}

@property(readonly) IDEWorkspaceTabController *workspaceTabController;
@property(readonly) IDESelection *contextMenuSelection;
@property(readonly) IDESelection *outputSelection;
- (id)targetForAction:(SEL)arg1;
- (id)initWithSelectionSource:(id)arg1;

@end

@interface IDEViewController : DVTViewController <IDESelectionSource, DVTStatefulObject, DVTInvalidation>
{
    IDEWorkspaceTabController *_workspaceTabController;
    id <IDEWorkspaceDocumentProvider> _workspaceDocumentProvider;
    id _outputSelection;
    id _contextMenuSelection;
    id _commandForwarder;
    DVTStateToken *_stateToken;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _isInvalidated;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (long long)version;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly) DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property(copy) IDESelection *contextMenuSelection; // @synthesize contextMenuSelection=_contextMenuSelection;
@property(copy) IDESelection *outputSelection; // @synthesize outputSelection=_outputSelection;
- (void)setStateToken:(id)arg1;
- (BOOL)_knowsAboutInstalledState;
- (void)willCloseForever;
- (void)revertState;
- (void)commitState;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)_invalidateSubViewControllersForView:(id)arg1;
- (void)setNextResponder:(id)arg1;
- (id)commandForwarder;
@property(readonly) IDEWorkspace *workspace;
@property(readonly) IDEWorkspaceDocument *workspaceDocument;
- (id)workspaceDocumentProvider;

@end

@interface IDECommandManager : NSObject
{
}

+ (void)sendActionForCommandWithIdentifier:(id)arg1 from:(id)arg2;
+ (SEL)_actionForCommandWithIdentifier:(id)arg1;
+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (id)_commandDefinitionIdentifierForSelector:(SEL)arg1;
+ (id)_commandExtensionForIdentifier:(id)arg1;
+ (void)cacheCommandDefinitionsAndHandlers;
+ (void)initialize;

@end

@interface _IDEDocumentForwardingResponder : IDEActionForwardingResponder
{
    IDEEditor *_editor;
}

- (id)targetForAction:(SEL)arg1;
- (id)initWithEditor:(id)arg1;

@end

@interface IDEEditor : IDEViewController
{
    IDEEditorDocument *_document;
    IDEEditorDocument *_documentForNavBarStructure;
    IDEEditorContext *_editorContext;
    DVTFindBar *_findBar;
    id _documentForwarder;
    id <DVTTextFindable> _findableObject;
    id _documentDidChangeNotificationToken;
    id _documentForNavBarStructureDidChangeNotificationToken;
    IDEFileTextSettings *_fileTextSettings;
    id <IDEEditorDelegate> _delegate;
    BOOL _discardsFindResultsWhenContentChanges;
}

+ (BOOL)canProvideCurrentSelectedItems;
@property id <IDEEditorDelegate> delegate; // @synthesize delegate=_delegate;
@property IDEFileTextSettings *fileTextSettings; // @synthesize fileTextSettings=_fileTextSettings;
@property id <DVTTextFindable> findableObject; // @synthesize findableObject=_findableObject;
@property IDEEditorContext *editorContext; // @synthesize editorContext=_editorContext;
@property IDEEditorDocument *documentForNavBarStructure; // @synthesize documentForNavBarStructure=_documentForNavBarStructure;
@property BOOL discardsFindResultsWhenContentChanges; // @synthesize discardsFindResultsWhenContentChanges=_discardsFindResultsWhenContentChanges;
- (id)relatedMenuItemsForNavItem:(id)arg1;
- (void)didSetupEditor;
- (void)navigateToAnnotationWithRepresentedObject:(id)arg1 wantsIndicatorAnimation:(BOOL)arg2 exploreAnnotationRepresentedObject:(id)arg3;
- (void)selectDocumentLocations:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (id)currentSelectedItems;
- (void)invalidate;
- (void)setNextResponder:(id)arg1;
- (id)documentForwarder;
@property(readonly) NSScrollView *mainScrollView;
@property(readonly) DVTScopeBarsManager *scopeBarsManager;
@property(readonly, getter=isPrimaryEditor) BOOL primaryEditor;
- (void)setupContextMenuWithMenu:(id)arg1 withContext:(id)arg2;
- (void)takeFocus;
@property(readonly) DVTFindBar *findBar; // @synthesize findBar=_findBar;
- (void)editorContextDidHideFindBar;
- (id)createFindBar;
@property(readonly) BOOL findBarSupported;
- (id)_getUndoManager:(BOOL)arg1;
- (id)undoManager;
@property(readonly) IDEEditorDocument *document; // @synthesize document=_document;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;
- (id)_initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initUsingDefaultNib;

@end

@interface IDE_IBDetailedAlert : IDEDetailedAlert
{
}

@end

@interface IDE_IBFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface IDEDetailedAlert : NSObject
{
    NSTextField *informativeTextTextField;
    NSTextField *messageTextTextField;
    NSButton *showDetailsButton;
    NSButton *alternateButton;
    NSButton *defaultButton;
    NSImageView *imageWell;
    NSPanel *panel;
    NSScrollView *detailsView;
    NSTextView *detailsTextView;
    NSMutableDictionary *originalMetrics;
    id sheetDelegate;
    SEL sheetDidEndSelector;
    BOOL runningAsSheet;
}

+ (id)detailedAlertWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 informativeText:(id)arg4 attributedDetailedMessage:(id)arg5;
+ (id)detailedAlertWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 informativeText:(id)arg4 detailedMessage:(id)arg5;
- (long long)runModal;
- (void)beginSheetModalForWindow:(id)arg1 completionHandler:(id)arg2;
- (void)_handlerSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSheetModalForWindow:(id)arg1 modalDelegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)didEndAlert:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)defaultButtonAction:(id)arg1;
- (void)alternateButtonAction:(id)arg1;
- (void)finishWithCode:(long long)arg1;
- (void)toggleDetails:(id)arg1;
- (id)_openWindowTerminationDisablingReason;
- (void)layout;
- (void)layoutByAnimating:(BOOL)arg1;
- (struct CGRect)originalFrame:(id)arg1;
- (struct CGRect)originalBounds:(id)arg1;
- (void)captureMetrics;
- (id)panel;
- (void)setAttributedDetailedMessage:(id)arg1;
- (void)setDetailedMessage:(id)arg1;
- (void)setAlternateButtonTitle:(id)arg1;
- (void)setDefaultButtonTitle:(id)arg1;
- (void)setInformativeText:(id)arg1;
- (void)setMessageText:(id)arg1;
- (void)setHasDefaultButton:(BOOL)arg1;
- (BOOL)showingDetails;
- (void)setShowingDetails:(BOOL)arg1;
- (id)contentView;
- (id)initWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 informativeText:(id)arg4 attributedDetailedMessage:(id)arg5;
- (id)initWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 informativeText:(id)arg4 detailedMessage:(id)arg5;

@end

@interface IDEAssertionHandler : NSObject <DVTAssertionHandling>
{
}

+ (void)_handleAssertionWithLogString:(id)arg1;
+ (id)defaultHandler;
+ (BOOL)crashOnAssertions;
+ (BOOL)quietAssertions;
- (void)handleUncaughtException:(id)arg1;
- (void)handleWarningInFunction:(id)arg1 fileName:(id)arg2 lineNumber:(long long)arg3 messageFormat:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)handleWarningInMethod:(SEL)arg1 object:(id)arg2 fileName:(id)arg3 lineNumber:(long long)arg4 messageFormat:(id)arg5 arguments:(struct __va_list_tag [1])arg6;
- (void)handleFailureInFunction:(id)arg1 fileName:(id)arg2 lineNumber:(long long)arg3 messageFormat:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 fileName:(id)arg3 lineNumber:(long long)arg4 messageFormat:(id)arg5 arguments:(struct __va_list_tag [1])arg6;

@end

@interface IDEMenuBuilder : NSObject
{
}

+ (void)_replacePlaceholderItemWithTag:(unsigned long long)arg1 inMenu:(id)arg2 withGroups:(id)arg3 priorities:(id)arg4;
+ (void)_placePinnedGroups:(id)arg1 inMenu:(id)arg2 withPriorities:(id)arg3 topPinned:(BOOL)arg4;
+ (void)insertMenuItemsForContextualMenuItemIdentifier:(id)arg1 intoMenu:(id)arg2 forSubArea:(id)arg3 fileType:(id)arg4 editorDocumentExtension:(id)arg5;
+ (id)_buildSubmenuItemForMenuDefinitionIdentifier:(id)arg1 forViewController:(id)arg2 fillingExtensionIdToMenuMap:(id)arg3;
+ (id)_menuForMenuDefinitionIdentifier:(id)arg1 forViewController:(id)arg2 fillingExtensionIdToMenuMap:(id)arg3;
+ (id)menuForMenuDefinitionIdentifier:(id)arg1 forViewController:(id)arg2 extensionIdToMenuMap:(id *)arg3;
+ (id)menuForMenuDefinitionIdentifier:(id)arg1 extensionIdToMenuMap:(id *)arg2;
+ (id)_menuItemForMenuItemElement:(id)arg1 inMenuWithIdentifierUsedForDebugging:(id)arg2 forViewController:(id)arg3 fillingExtensionIdToMenuMap:(id)arg4;

@end

@interface IDEToolbarItemProxy : NSObject
{
    NSString *_toolbarItemIdentifier;
    BOOL _providesItems;
    NSString *_toolbarItemLabel;
    NSString *_toolbarItemPaletteLabel;
    NSString *_toolbarItemTooltip;
    SEL _toolbarItemAction;
    NSImage *_toolbarItemImage;
    DVTExtension *_commandDefinitionExtension;
    Class _providerClass;
}

+ (id)proxyForToolbarItemElement:(id)arg1 errorMessage:(id *)arg2;
@property Class providerClass; // @synthesize providerClass=_providerClass;
@property DVTExtension *commandDefinitionExtension; // @synthesize commandDefinitionExtension=_commandDefinitionExtension;
@property(retain) NSImage *toolbarItemImage; // @synthesize toolbarItemImage=_toolbarItemImage;
@property SEL toolbarItemAction; // @synthesize toolbarItemAction=_toolbarItemAction;
@property(copy) NSString *toolbarItemTooltip; // @synthesize toolbarItemTooltip=_toolbarItemTooltip;
@property(copy) NSString *toolbarItemPaletteLabel; // @synthesize toolbarItemPaletteLabel=_toolbarItemPaletteLabel;
@property(copy) NSString *toolbarItemLabel; // @synthesize toolbarItemLabel=_toolbarItemLabel;
@property BOOL providesItems; // @synthesize providesItems=_providesItems;
@property(copy) NSString *toolbarItemIdentifier; // @synthesize toolbarItemIdentifier=_toolbarItemIdentifier;
- (id)toolbarItemForToolbarInWindow:(id)arg1;
- (id)initWithItemIdentifier:(id)arg1;

@end

@interface IDEToolbarDelegate : NSObject <NSToolbarDelegate>
{
    NSString *_toolbarDefinitionIdentifier;
    NSWindow *_window;
    NSArray *_defaultItemIdentifiers;
    NSArray *_allowedItemIdentifiers;
    NSDictionary *_toolbarItemProviders;
    BOOL _allowsUserCustomization;
    BOOL _autosavesConfiguration;
    NSSet *_displayModes;
    NSSet *_sizeModes;
}

+ (unsigned long long)_sizeModeForString:(id)arg1 toolbarIdentifier:(id)arg2;
+ (unsigned long long)_displayModeForString:(id)arg1 toolbarIdentifier:(id)arg2;
@property(copy) NSSet *sizeModes; // @synthesize sizeModes=_sizeModes;
@property(copy) NSSet *displayModes; // @synthesize displayModes=_displayModes;
@property BOOL autosavesConfiguration; // @synthesize autosavesConfiguration=_autosavesConfiguration;
@property BOOL allowsUserCustomization; // @synthesize allowsUserCustomization=_allowsUserCustomization;
@property(copy) NSDictionary *toolbarItemProviders; // @synthesize toolbarItemProviders=_toolbarItemProviders;
@property(copy) NSArray *allowedItemIdentifiers; // @synthesize allowedItemIdentifiers=_allowedItemIdentifiers;
@property(copy) NSArray *defaultItemIdentifiers; // @synthesize defaultItemIdentifiers=_defaultItemIdentifiers;
@property NSWindow *window; // @synthesize window=_window;
@property(copy) NSString *toolbarDefinitionIdentifier; // @synthesize toolbarDefinitionIdentifier=_toolbarDefinitionIdentifier;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)initWithToolbarDefinitionIdentifier:(id)arg1 window:(id)arg2;
- (void)_initializeItemIdentifiersForToolbarDefinitionExtension:(id)arg1;

@end

@interface IDECustomToolbar : NSToolbar
{
    NSSet *_allowedDisplayModes;
    NSSet *_allowedSizeModes;
}

@property(copy) NSSet *allowedSizeModes; // @synthesize allowedSizeModes=_allowedSizeModes;
@property(copy) NSSet *allowedDisplayModes; // @synthesize allowedDisplayModes=_allowedDisplayModes;
- (BOOL)_allowsSizeMode:(unsigned long long)arg1;
- (BOOL)_allowsDisplayMode:(unsigned long long)arg1;
- (id)_customMetrics;

@end

@interface IDEToolbarManager : NSObject
{
}

+ (void)insertToolbarForToolbarDefinitionIdentifier:(id)arg1 inWindow:(id)arg2;

@end

@interface IDEApplicationCommands : NSObject <IDECommandHandler, IDECommandHandlerVendor>
{
    id <IDESelectionSource> _selectionSource;
}

+ (BOOL)workspaceContainsBlueprintProvider:(id)arg1;
+ (void)newWorkspaceDocument:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (BOOL)_isValidForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (BOOL)_isValidForRevealInDebugNavigator:(id)arg1;
+ (id)_activeWorkspaceTabController:(id)arg1;
+ (id)_applicationURLForDocumentURL:(id)arg1;
+ (id)_documentURLsInSelectionSource:(id)arg1 useContextualMenuSelection:(BOOL)arg2;
@property(readonly) id <IDESelectionSource> selectionSource; // @synthesize selectionSource=_selectionSource;
- (void)showSuddenTerminationCount:(id)arg1;
- (void)updateSuddenTerminationCount:(id)arg1;
- (void)triggerCollectionChecking:(id)arg1;
- (void)toggleCollectionChecking:(id)arg1;
- (void)makeWindowFirstResponder:(id)arg1;
- (void)runExhaustiveGarbageCollection:(id)arg1;
- (void)stopTestingActivity:(id)arg1;
- (void)startTestingActivity:(id)arg1;
- (void)showWelcomeToXcode:(id)arg1;
- (void)contextMenu_openWithExternalEditor:(id)arg1;
- (void)openWithExternalEditor:(id)arg1;
- (void)openWithExternalEditorUsingContextualMenuSelection:(BOOL)arg1;
- (void)contextMenu_revealInProjectNavigator:(id)arg1;
- (void)revealInDebugNavigator:(id)arg1;
- (void)revealInProjectNavigator:(id)arg1;
- (void)contextMenu_showInFinder:(id)arg1;
- (void)showInFinder:(id)arg1;
- (void)showInFinderUsingContextualMenuSelection:(BOOL)arg1;
- (void)openQuickly:(id)arg1;
- (void)newProject:(id)arg1;
- (void)addTarget:(id)arg1;
- (void)newTarget:(id)arg1;
- (void)newDocument:(id)arg1;
- (void)showTemplateChooserForTemplateKind:(id)arg1 inWorkspaceTabController:(id)arg2 createdDocument:(id)arg3;
- (void)showTemplateChooserForTemplateKind:(id)arg1;
- (void)newWorkspace:(id)arg1;
- (void)closeAllWindows:(id)arg1;
- (void)showOrganizer:(id)arg1;
- (void)triggerFailedAssertion:(id)arg1;
- (void)orderFrontPreferencesPanel:(id)arg1;
- (void)orderFrontAboutPanel:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)_initWithSelectionSource:(id)arg1;

@end

@interface IDERunSheetController : IDEViewController <NSWindowDelegate>
{
    NSWindow *_sheetWindow;
    NSSegmentedControl *_breakpointsButton;
    NSButton *_goButton;
    NSButton *_doneButton;
    DVTBorderedView *_masterBorderedView;
    IDENavigatorOutlineView *_runPhasesOutlineView;
    DVTBorderedView *_detailBorderedView;
    DVTReplacementView *_detailReplacementView;
    NSArrayController *_customDataStoresArrayController;
    NSTabView *_topTabView;
    NSTextField *_nameField;
    NSPopUpButton *_containerPopUp;
    NSArray *_phaseModelNavigables;
    IDENavigatorDataCell *_phaseCell;
    IDENavigatorDataCell *_subphaseCell;
    NSWindow *_workspaceWindow;
    IDEWorkspace *_workspace;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    id <DVTObservingToken> _runContextObservingToken;
    id <DVTObservingToken> _runContextClosingObservingToken;
    id <DVTObservingToken> _breakpointsActivatedObservingToken;
    id <DVTObservingToken> _buildPhaseSubtitleObservingToken;
    id <DVTObservingToken> _testPhaseSubtitleObservingToken;
    id <DVTObservingToken> _launchPhaseSubtitleObservingToken;
    id <DVTObservingToken> _archivePhaseSubtitleObservingToken;
    id <DVTObservingToken> _profilePhaseSubtitleObservingToken;
    id <DVTObservingToken> _analyzePhaseSubtitleObservingToken;
    id <DVTObservingToken> _installPhaseSubtitleObservingToken;
    id <DVTObservingToken> _customDataStoresControllerObservingToken;
    BOOL _okButtonReflectsSchemeCommand;
    int _selectedSchemeCommand;
    NSString *_selectedSchemeCommandTitle;
    id _completionBlock;
    Class _viewControllerClassForSelectedRunPhase;
    BOOL _isDetailViewContentBound;
    IDESchemeAction *_selectedRunPhase;
    BOOL _didSheetEnd;
    BOOL _runningOnManageSheet;
}

+ (id)keyPathsForValuesAffectingRunContext;
+ (id)keyPathsForValuesAffectingExecutionEnvironment;
+ (void)beginSheetForWindow:(id)arg1 workspaceWindow:(id)arg2 editingIdentity:(BOOL)arg3 forSchemeCommand:(int)arg4 okButtonReflectsSchemeCommand:(BOOL)arg5 showDoneButton:(BOOL)arg6 completionHandler:(id)arg7;
@property(copy) NSString *selectedSchemeCommandTitle; // @synthesize selectedSchemeCommandTitle=_selectedSchemeCommandTitle;
@property int selectedSchemeCommand; // @synthesize selectedSchemeCommand=_selectedSchemeCommand;
@property(copy) NSArray *phaseModelNavigables; // @synthesize phaseModelNavigables=_phaseModelNavigables;
@property IDESchemeAction *selectedRunPhase; // @synthesize selectedRunPhase=_selectedRunPhase;
@property BOOL isDetailViewContentBound; // @synthesize isDetailViewContentBound=_isDetailViewContentBound;
@property(copy) Class viewControllerClassForSelectedRunPhase; // @synthesize viewControllerClassForSelectedRunPhase=_viewControllerClassForSelectedRunPhase;
@property NSWindow *workspaceWindow; // @synthesize workspaceWindow=_workspaceWindow;
- (void)windowDidResize:(id)arg1;
- (void)_updateStoreImagesInPopUp;
- (void)_updateSelectedSchemeCommand;
- (void)_updateSelectedRunPhaseRowIndex;
- (void)_bindDetailViewContent;
- (void)_unbindDetailViewContent;
- (void)_forceEditingToEnd;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (id)_subphaseCell;
- (id)_phaseCell;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)manageContextsAction:(id)arg1;
- (void)duplicateContextAction:(id)arg1;
- (void)breakpointsButtonAction:(id)arg1;
- (void)sheetDoneAction:(id)arg1;
- (void)sheetGoAction:(id)arg1;
@property(readonly) IDEScheme *runContext;
@property(readonly) IDEExecutionEnvironment *executionEnvironment;
@property IDEWorkspace *workspace;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_beginSheetForWindow:(id)arg1 workspaceWindow:(id)arg2 editingIdentity:(BOOL)arg3 forSchemeCommand:(int)arg4 okButtonReflectsSchemeCommand:(BOOL)arg5 showDoneButton:(BOOL)arg6 completionHandler:(id)arg7;
- (int)_runControllerPhaseRowIndexForSchemeCommand:(int)arg1;
- (void)_setUpObservation;
- (void)_setUpDetailView;
- (void)_setUpMainUI;
- (void)_updatePhaseNavigables;

@end

@interface IDERunPhasePlaceholderViewController : DVTViewController
{
}

- (void)viewWasInstalled;
- (void)loadView;

@end

@interface IDERunSheetDataCell : IDENavigatorDataCell
{
    NSCell *_imageCell;
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface _IDEWindowToTabActionForwardingResponder : IDEActionForwardingResponder
{
    DVTViewController *_targetedViewController;
}

@property DVTViewController *targetedViewController; // @synthesize targetedViewController=_targetedViewController;
- (id)targetForAction:(SEL)arg1;

@end

@interface IDEWorkspaceWindowController : NSWindowController <NSWindowDelegate, IDEEditorAreaContainer, DVTStatefulObject, DVTTabbedWindowControlling, DVTEditor>
{
    id _contentViewControllerActionForwarder;
    DVTTabBarEnclosureView *tabBarEnclosureView;
    DVTTabBarView *_tabBarView;
    DVTTabSwitcher *tabSwitcher;
    NSTimer *_springToFrontTimer;
    NSString *_uniqueIdentifier;
    int _debugSessionState;
    NSMutableArray *_windowsOrderedOutForMiniDebugging;
    struct CGRect _restoreFrame;
    struct CGRect _windowFrameBeforeFullScreen;
    struct CGSize _originalMinSize;
    struct CGPoint _miniRestoreOrigin;
    struct CGSize _collapsedRestoreSize;
    struct CGSize _mediumRestoreSize;
    double _miniWindowBarHeight;
    double _toolbarHeightDelta;
    struct CGSize _contentViewFrozenSize;
    NSMutableArray *_topLevelViewOrder;
    NSMapTable *_viewHeightsForResizing;
    DVTStateToken *_stateToken;
    NSMutableArray *_stateChangeObservingTokens;
    IDEEditorDocument *_lastObservedEditorDocument;
    IDEWorkspaceTabController *_activeWorkspaceTabController;
    NSString *_titleRepresentedPath;
    id <DVTObservingToken> _toolbarVisibleToken;
    id <DVTObservingToken> _workspaceSimpleFilesFocusedObservingToken;
    IDEWorkspace *_workspace;
    struct _IDEDebugSessionModeChange _debuggerModeSaved;
    unsigned int _coalescedUpdateMask;
    int _contentViewFrozenMode;
    BOOL _performingCoalescedUpdates;
    BOOL _readyToUpdateKeyboardLoop;
    BOOL _tabBarInTransition;
    BOOL _tabBarShownForTabDrag;
    BOOL _keepTabBarHiddenWhenCreatingTab;
    BOOL _createNewTabUponLoadIfNoTabsExist;
    BOOL _inMiniDebuggingMode;
    BOOL _isInMorphingToDebugging;
    BOOL _createdCollapsedRestoreFrame;
    BOOL _createdMediumRestoreFrame;
    BOOL _inTotalCollapsedFrame;
    BOOL _tabBarForcedClosed;
    BOOL _wasShowingNavigatorBeforeMiniDebugging;
    BOOL _wasShowingUtilitiesBeforeMiniDebugging;
    BOOL _wasShowingEditorBeforeMiniDebugging;
    BOOL _isClosing;
    BOOL _toggleFullscreenOnBecomeMain;
    BOOL _enteringFullScreenMode;
    BOOL _exitingFullScreenMode;
    BOOL _fullScreenTabBarAlwaysVisible;
}

+ (id)keyPathsForValuesAffectingUserWantsBreakpointsActivated;
+ (id)workspaceWindowControllerForWindow:(id)arg1;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)workspaceWindowControllers;
@property BOOL createNewTabUponLoadIfNoTabsExist; // @synthesize createNewTabUponLoadIfNoTabsExist=_createNewTabUponLoadIfNoTabsExist;
@property(copy) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property(readonly, getter=isInMiniDebuggingMode) BOOL inMiniDebuggingMode; // @synthesize inMiniDebuggingMode=_inMiniDebuggingMode;
@property DVTTabBarView *tabBarView; // @synthesize tabBarView=_tabBarView;
@property DVTTabSwitcher *tabSwitcher; // @synthesize tabSwitcher;
@property _IDEWindowToTabActionForwardingResponder *contentViewControllerActionForwarder; // @synthesize contentViewControllerActionForwarder=_contentViewControllerActionForwarder;
- (void)moveFocusToEditor:(id)arg1;
- (void)dicardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)_updateWindowTitle;
- (void)_userWantsMiniDebuggingConsoleChanged;
- (void)_userWantsAppFocusInMiniDebuggingChanged;
- (void)_editorDocumentDirtyStatusDidChange:(id)arg1;
- (void)_updateTitleRepresentedPath;
@property(readonly) NSString *titleRepresentedPath;
@property BOOL userWantsBreakpointsActivated;
- (void)changeFromDebugSessionState:(int)arg1 to:(int)arg2 fromDebuggingWindowBehavior:(int)arg3 to:(int)arg4;
- (void)_resetDebuggerModeSaved;
- (void)didExitFullScreenMode:(id)arg1;
- (void)willExitFullScreenMode:(id)arg1;
- (void)willEnterFullScreenMode:(id)arg1;
- (void)didEnterFullScreenMode:(id)arg1;
- (void)_workaround8217584;
- (BOOL)_isTargetApplicationActive;
- (void)_changeWindowsLevelFrom:(int)arg1 to:(int)arg2;
- (void)_changeToNormalOrXcodeBehindDebugging:(int)arg1;
- (void)_changeToMiniDebugging:(int)arg1;
- (void)_morphToMedium:(int)arg1;
- (struct CGRect)_mediumFrame;
- (void)_morphToNonCollapsed:(struct CGRect)arg1 frozenMode:(int)arg2 toolbarHeightDelta:(double)arg3;
- (void)_morphToCollapsed;
- (void)_setInTotalCollapsed:(BOOL)arg1;
- (void)_reSnapshotContentViewToNewFrame:(struct CGRect)arg1 hideTabBarBeforeSnapshot:(BOOL)arg2 toolbarHeightDelta:(double)arg3;
- (void)_createCollapsedRestoreFrame;
- (void)_performSpringToFront;
- (void)_cancelSpringToFront;
- (void)_scheduleSpringToFront;
- (id)_screenForWindow;
- (void)morphingDragImage:(id)arg1 exitedWindow:(id)arg2;
- (void)morphingDragImage:(id)arg1 enteredWindow:(id)arg2;
- (BOOL)morphingDragImage:(id)arg1 performDragOperation:(id)arg2;
- (void)morphingDragImage:(id)arg1 draggingExited:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)morphingDragImage:(id)arg1 draggingEntered:(id)arg2;
- (void)workspaceWindow:(id)arg1 willInvalidateCursorRectsForView:(id)arg2;
- (BOOL)workspaceWindow:(id)arg1 interceptAddCursorRect:(struct CGRect)arg2 cursor:(id)arg3 forView:(id)arg4;
- (BOOL)workspaceWindow:(id)arg1 interceptSetCursorForMouseLocation:(struct CGPoint)arg2;
- (void)workspaceWindowDidRecalculateKeyViewLoop:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)_recordRestoreFrame;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)workspaceWindowIsClosing:(id)arg1;
- (void)_pushDefaultPrimaryEditorFrameSizes;
- (BOOL)_isLastWindowControllerOfDocument;
- (void)_prepareBarsToExitFullScreen;
- (void)_prepareBarsToEnterFullScreen;
- (BOOL)isInFullScreenMode;
- (void)synchronizeWindowTitleWithDocumentName;
- (void)_closeWindowIfNoTabs;
- (double)tabBarHeight;
- (void)moveTabFromOtherWindow:(id)arg1 toIndex:(unsigned long long)arg2 andShow:(BOOL)arg3;
- (void)replaceEmptyTabWithTabs:(id)arg1;
- (void)_closeOtherTabsWithoutConfirming:(id)arg1;
- (void)_closeOtherTabs:(id)arg1;
- (void)closeTabOrWindow:(id)arg1;
- (void)_closeTabWithoutConfirming:(id)arg1;
- (void)_closeTabWithoutConfirming:(id)arg1 andInvalidate:(BOOL)arg2;
- (void)closeTab:(id)arg1;
- (id)_findTabForView:(id)arg1;
- (void)selectTab:(id)arg1;
- (BOOL)_moreThanOneTabShowing;
- (BOOL)closeKeyEquivalentClosesTab;
- (id)_createTabWithViewController:(id)arg1 atIndex:(unsigned long long)arg2 andShow:(BOOL)arg3;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1 isShowing:(BOOL)arg2 forceMaintainFullHeight:(BOOL)arg3;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1 isShowing:(BOOL)arg2;
- (id)_setAutoresizingMasksForOrderedViews:(id)arg1 toResizeOnly:(id)arg2;
- (void)_collectViewInfoForResizing;
- (void)_updateFullScreenAuxiliaryToolbarViewSizes;
- (double)_originalHeightForView:(id)arg1;
- (id)showTabNamed:(id)arg1;
- (id)_showTab:(id)arg1;
- (void)_moveTabToNewWindow:(id)arg1;
- (id)_setUpTabForViewController:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_setUpTabForViewController:(id)arg1 addToRightSide:(BOOL)arg2;
- (id)_setUpTabForViewController:(id)arg1;
- (id)createTabWithViewController:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)createInactiveTabWithFrameName:(id)arg1;
- (id)createInactiveTab;
- (id)createTabWithFrameName:(id)arg1 andShow:(BOOL)arg2 addToRightSide:(BOOL)arg3;
- (id)instantiateTabControllerAndRegisterForStateSavingWithName:(id)arg1 inDocument:(id)arg2;
- (id)createTabWithFrameName:(id)arg1;
- (id)createTab;
- (unsigned long long)selectedTabIndex;
- (void)closeTabFromMenu:(id)arg1;
- (id)selectedTab;
- (id)orderedTabViewItems;
- (void)cancelUpdateTabTitlesSoon;
- (void)_performCoalescedUpdates;
- (void)_cancelCoalescedUpdate:(int)arg1;
- (void)_performCoalescedUpdateSoon:(int)arg1;
- (void)tabBarViewUpdateTabTitlesNow:(id)arg1;
- (void)tabBarViewUpdateTabTitlesSoon:(id)arg1;
- (BOOL)canCreateNewTab;
- (void)_showTabBarIfNeeded;
- (void)_automaticallyHideTabBarForTabDrag;
- (void)_automaticallyShowTabBarForTabDrag;
- (void)_setTabBarVisible:(BOOL)arg1;
- (BOOL)_alwaysShowTabBar;
- (BOOL)canCloseSelectedTab;
- (BOOL)_canCloseTab:(id)arg1;
- (void)toggleTabBar:(id)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)selectNextTab:(id)arg1;
- (void)_selectNextTabGoingForward:(BOOL)arg1;
- (void)moveTabToNewWindowFromMenu:(id)arg1;
- (void)closeOtherTabs:(id)arg1;
- (void)closeOtherTabsFromMenu:(id)arg1;
- (void)closeCurrentTab:(id)arg1;
- (id)_newTabWithName:(id)arg1 cloneExisting:(BOOL)arg2 andShow:(BOOL)arg3 withInstalledTabControllerBlock:(id)arg4;
- (id)newTabWithName:(id)arg1 cloneExisting:(BOOL)arg2;
- (void)newTab:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)canCloseOtherTabs;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)_windowIsFullHeight;
- (void)setTabBarVisible:(BOOL)arg1;
- (BOOL)isTabBarVisible;
- (void)_toggleTabBarWithAnimation:(BOOL)arg1;
- (BOOL)_shouldShowTabBar;
- (BOOL)canReceiveDragFromTabbedWindowControlling:(id)arg1;
- (void)_setUpTabBar;
- (void)autocreateContexts:(id)arg1;
- (BOOL)window:(id)arg1 shouldRestoreStateForResponder:(id)arg2;
@property(readonly) IDEWorkspaceWindow *workspaceWindow;
- (id)_uniqueNameForNewWorkspaceTabController;
@property(readonly) IDEEditorArea *editorArea;
- (void)activateWorkspaceTabController:(id)arg1;
@property(readonly) IDEWorkspaceTabController *activeWorkspaceTabController;
- (void)_didChangeActiveWorkspaceTabController;
- (id)workspaceTabControllers;
@property(copy) NSString *stateSavingWindowFrame;
- (void)commitStateToDictionary:(id)arg1;
- (void)_configureStateSavingObservers;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_revertForNewWindowWithTabStateContext:(id)arg1 documentURL:(id)arg2 simpleEditorWindowLayout:(BOOL)arg3 completionBlock:(id)arg4;
- (void)_changeSizeForSimpleEditorWindowLayoutWithEditorDocumentURLOrNil:(id)arg1 workspaceTabController:(id)arg2;
- (void)windowDidLoad;
- (void)_handleWorkspaceSimpleFilesFocusedChanged;
- (void)_showWindowBehindWorkspaceWindow:(id)arg1;
- (void)setNextResponder:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setupFullScreenNotifications;
- (id)init;
- (void)_recordWorkspaceWindowCount;
- (void)_recordTabCount;

@end

@interface IDEBuildRunPhaseSheetController : IDEViewController <IDEFilePickerViewDelegate>
{
    DVTOutlineView *_outlineView;
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_deleteButton;
    DVTBorderedView *_glassBar;
    NSSearchField *_searchField;
    IDEScheme *_runContext;
    IDEWorkspace *_workspace;
    IDEBuildSchemeAction *_runPhase;
    NSString *_filterString;
    id _buildablesDidChangeNotificationToken;
}

+ (void)initialize;
@property(copy) NSString *filterString; // @synthesize filterString=_filterString;
@property IDEBuildSchemeAction *runPhase; // @synthesize runPhase=_runPhase;
@property IDEScheme *runContext; // @synthesize runContext=_runContext;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)filteredBuildables:(id)arg1;
- (id)filteredBuildActionEntries;
- (BOOL)doesFilterStringIncludeName:(id)arg1;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)deleteBlueprintsAction:(id)arg1;
- (void)filePickerView:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forTableColumn:(id)arg4 item:(id)arg5;
- (void)addBlueprintsAction:(id)arg1;
- (BOOL)_shouldEnableFilePickerItem:(id)arg1;
@property(readonly) NSArray *blueprintProviderWrappers;
@property IDEWorkspace *workspace;
- (void)invalidate;
- (void)loadView;
- (void)_updateDeleteButton;
- (BOOL)_getItemsToDelete:(id *)arg1;
- (void)updateBoundContent;
- (void)updateBoundIDEWorkspaceBinding;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDEBuildRunPhaseBlueprintProviderWrapper : NSObject
{
    id <IDEBlueprintProvider> _provider;
}

+ (id)keyPathsAffectingBlueprintWrappers;
@property(readonly) id <IDEBlueprintProvider> provider; // @synthesize provider=_provider;
- (id)navigableItem_image;
- (id)navigableItem_name;
@property(readonly) NSArray *blueprintWrappers;
- (id)initWithBlueprintProvider:(id)arg1;

@end

@interface IDEBuildRunPhaseBlueprintWrapper : NSObject <IDENavigableItemRepresentation>
{
    id <IDEBlueprint> _blueprint;
}

@property(readonly) id <IDEBlueprint> blueprint; // @synthesize blueprint=_blueprint;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
- (id)initWithBlueprint:(id)arg1;

// Remaining properties
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isMajorGroup;

@end

@interface IDELaunchRunPhaseSheetController : IDEViewController <IDECapsuleListViewDataSource>
{
    DVTTabChooserView *_tabChooser;
    IDECapsuleListView *_capsuleListView;
    DVTBorderedView *_capsuleListEnclosingBorderedView;
    NSPopUpButton *_runnablePopUp;
    NSPopUpButton *_debuggerSelectionControl;
    NSMatrix *_launchStyleMatrix;
    NSButtonCell *_waitForAppToLaunchButtonCell;
    DVTFilePathFieldCell *_workingDirectoryTextFieldCell;
    NSView *_infoTabViewContentView;
    NSView *_diagnosticsTabViewContentView;
    NSPopUpButton *_macroExpansionRunnableBuildablesPopUp;
    NSPopUpButton *_deviceAppDataPackagesPopUp;
    NSPopUpButton *_locationSimulationPopUp;
    DVTStackView *_optionsStackView;
    NSView *_locationsOptionView;
    NSView *_applicationDataOptionView;
    NSView *_resumeOptionView;
    NSView *_debugDocumentVersioningOptionView;
    NSView *_workingDirectoryOptionView;
    DVTChoice *_infoChoice;
    DVTChoice *_conditionsChoice;
    DVTChoice *_optionsChoice;
    DVTChoice *_diagnosticsChoice;
    DVTChoice *_debuggingChoice;
    BOOL _exectutableHasBeenSelected;
    BOOL _debuggerHasBeenSelected;
    NSColor *_descriptionTextColor;
    IDEScheme *_runContext;
    IDEWorkspace *_workspace;
    IDELaunchSchemeAction *_runPhase;
    int _launchStyleWhenDebuggerSetToNil;
    BOOL _isSupportedApplicationData;
    id <DVTObservingToken> _runDestinationObservingToken;
    id <DVTObservingToken> _runnableBuildableProductsObservingToken;
    id <DVTObservingToken> _runContextRunnableObservingToken;
    IDEArgumentsCapsuleSheetController *_argumentsViewController;
    IDEEnvironmentVariablesCapsuleSheetController *_environmentVariablesViewController;
    IDEManualSymbolLoadingCapsuleSheetController *_manualSymbolLoadingViewController;
    NSArray *_debuggerSpecifiers;
    unsigned long long _runnablePopUpRunnableBuildableProductsCount;
    BOOL _runnablePopUpHasCustomRunnable;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
@property DVTTabChooserView *tabChooser; // @synthesize tabChooser=_tabChooser;
@property(copy) NSColor *descriptionTextColor; // @synthesize descriptionTextColor=_descriptionTextColor;
@property BOOL debuggerHasBeenSelected; // @synthesize debuggerHasBeenSelected=_debuggerHasBeenSelected;
@property BOOL exectutableHasBeenSelected; // @synthesize exectutableHasBeenSelected=_exectutableHasBeenSelected;
@property IDELaunchSchemeAction *runPhase; // @synthesize runPhase=_runPhase;
@property IDEScheme *runContext; // @synthesize runContext=_runContext;
- (void)_collaspeManualSymbolLoadingCapsuleIfItExists;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
@property(readonly) IDEWorkspace *workspace;
- (id)DVTFilePathFieldCell:(id)arg1 resolvedPathForPath:(id)arg2;
- (void)DVTFilePathFieldCell:(id)arg1 chooserSelectedPath:(id)arg2;
- (void)_updateSupportedOptions;
- (void)_updateLocationSimulationUI;
- (void)_updateDeviceAppDataUI;
- (void)_selectMenuItemForDeviceApplicationPackage;
- (void)_selectDeviceAppDataPackage:(id)arg1;
- (id)_iconForBuildable:(id)arg1;
- (void)_macroExpansionRunnableBuildableSelected:(id)arg1;
- (void)_updateMacroExpansionRunnablePopUpSelection;
- (void)_updateMacroExpansionRunnablePopUp;
- (void)_updateRunnablePopUp;
- (void)_runnableBuildableProductsDidChange;
- (void)_runDestinationChanged;
- (void)runnablePopUpAction:(id)arg1;
- (void)_runPhaseRunnableChanged;
- (void)_runnableDidUpdate;
@property IDEDebuggerSpecifier *selectedDebuggerSpecifier;
- (void)_updateDebuggerPopUp:(id)arg1;
@property(readonly) NSArray *debuggerSpecifiers;
- (void)_selectedSchemeChanged:(id)arg1;
- (void)invalidate;
- (void)loadView;
- (void)updateBoundContent;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDEDefaultDebugBarContentProvider : NSObject <IDEDebugBarContentProvider>
{
    DVTGradientImageButton *_pauseResumeButton;
    IDEStepGradientImageButton *_stepOverButton;
    IDEStepGradientImageButton *_stepInButton;
    DVTGradientImageButton *_stepOutButton;
    IDEPathControl *_pathControl;
    IDEDebugBar *_debugBar;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    IDENavigableItem *_rootNavigableItem;
    IDENavigableItem *_selectedItem;
    id <DVTObservingToken> _workspaceFinishedLoadingStateObserverToken;
    id <DVTObservingToken> _debugSessionObserverToken;
    id <DVTObservingToken> _debugSessionStateObserverToken;
    id <DVTObservingToken> _currentStackFrameObserverToken;
    BOOL _handlingSetSelectedItem;
}

+ (id)keyPathsForValuesAffectingNavigableDebugItems;
+ (Class)debugSessionControllerClass;
@property IDEPathControl *pathControl; // @synthesize pathControl=_pathControl;
@property IDENavigableItem *selectedItem; // @synthesize selectedItem=_selectedItem;
@property IDENavigableItem *rootNavigableItem; // @synthesize rootNavigableItem=_rootNavigableItem;
@property(readonly) IDENavigableItemCoordinator *navigableItemCoordinator; // @synthesize navigableItemCoordinator=_navigableItemCoordinator;
@property IDEDebugBar *debugBar; // @synthesize debugBar=_debugBar;
- (void)_forgetNavigableItems:(id)arg1;
- (void)_updatePauseResumeButton:(int)arg1;
- (void)_updateButtons;
- (void)_currentStackFrameChanged:(id)arg1;
- (void)_debugSessionStateChanged;
- (void)_debugSessionChanged;
- (void)_workspaceFinishedLoadingChanged;
- (void)stepOut:(id)arg1;
- (void)stepInByInstruction:(id)arg1;
- (void)stepInSuspendingOtherThreads:(id)arg1;
- (void)stepIn:(id)arg1;
- (void)stepOverByInstruction:(id)arg1;
- (void)stepOverSuspendingOtherThreads:(id)arg1;
- (void)stepOver:(id)arg1;
- (BOOL)_controlShiftKeyOnlyInCurrentEvent;
- (BOOL)_controlKeyOnlyInCurrentEvent;
- (void)pauseOrResume:(id)arg1;
- (void)_retrySetSelectedItem;
- (void)_setSelectedItemForDebuggerBarUIOnly:(id)arg1;
- (void)_createAndAddStepOutButton:(id)arg1;
- (void)_createAndAddStepInButton:(id)arg1;
- (void)_createAndAddStepOverButton:(id)arg1;
- (void)_createAndAddPauseResumeButton:(id)arg1;
- (double)xOffsetForSharedLibrariesPopUpAnchoredOnDebugBar:(id)arg1;
- (struct CGRect)additionalGrabRectOfDebugBar:(id)arg1 inTermsOfView:(id)arg2;
- (void)invalidate:(id)arg1;
- (void)provideContent:(id)arg1;
@property(readonly) id <IDEDebugSession> debugSession;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly) NSArray *navigableDebugItems; // @dynamic navigableDebugItems;
- (void)removeRootNavigableItemFromCoordinator;
- (void)updateBoundContent;
- (id)domainIdentifier;

@end

@interface IDEStepGradientImageButton : DVTGradientImageButton <DVTInvalidation>
{
    id _optionMonitor;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _onlyAllowAllStepByInstructionBehavior;
    NSImage *_stepImage;
    NSImage *_stepSuspendingOtherThreadsImage;
    NSImage *_stepByInstructionImage;
    SEL _stepAction;
    SEL _stepSuspendingOtherThreadsAction;
    SEL _stepByInstructionAction;
}

+ (BOOL)_areOnlyControlShiftKeysPressed:(id)arg1;
+ (BOOL)_isOnlyTheControlKeyPressed:(id)arg1;
@property SEL stepByInstructionAction; // @synthesize stepByInstructionAction=_stepByInstructionAction;
@property(copy) NSImage *stepByInstructionImage; // @synthesize stepByInstructionImage=_stepByInstructionImage;
@property SEL stepSuspendingOtherThreadsAction; // @synthesize stepSuspendingOtherThreadsAction=_stepSuspendingOtherThreadsAction;
@property(copy) NSImage *stepSuspendingOtherThreadsImage; // @synthesize stepSuspendingOtherThreadsImage=_stepSuspendingOtherThreadsImage;
@property SEL stepAction; // @synthesize stepAction=_stepAction;
@property(copy) NSImage *stepImage; // @synthesize stepImage=_stepImage;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)_onlyAllowAllStepByInstructionBehavior:(BOOL)arg1;
- (void)_changeToStepByInstructionButton;
- (void)_changeToStepSuspendingOtherThreadsButton;
- (void)_changeToStepButton;
- (void)_handleEvent:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEDefaultDebugArea : IDEDebugArea <DVTSplitViewDelegate, DVTStatefulObject>
{
    DVTSplitView *_splitView;
    DVTReplacementView *_variablesReplacementView;
    DVTReplacementView *_consoleReplacementView;
    NSSegmentedControl *_variablesSwapButton;
    DVTExtension *_currentConsoleExtension;
    DVTExtension *_currentVariablesViewExtension;
    int _layoutMode;
    int _layoutFocusMode;
    double _variableViewWidthProportion;
    DVTSplitViewItem *_variablesViewSplitViewItem;
    DVTSplitViewItem *_consoleAreaSplitViewItem;
    int _restoreLayoutMode;
    int _restoreLayoutFocusMode;
    NSSegmentedControl *_consoleSwapButton;
    id _launchSessionObserver;
    id _miniDebuggerModeObserver;
    id _userMiniDebuggerModeObserver;
    NSImage *_consoleHasOutputImage;
    BOOL _consoleNotificationRegistered;
    BOOL _stillInMiniDebuggingMode;
}

+ (id)splitImage;
+ (id)consoleViewImage;
+ (id)consoleHasOutputImage;
+ (id)variablesViewImage;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property int layoutFocusMode; // @synthesize layoutFocusMode=_layoutFocusMode;
@property int layoutMode; // @synthesize layoutMode=_layoutMode;
- (double)_consoleAreaMinWidth;
- (double)_variablesViewMinWidth;
- (double)_currentVariableViewWidthProportion;
- (void)splitViewDidEndLiveResize:(id)arg1;
- (void)splitViewWillStartLiveResize:(id)arg1;
- (void)_resizeOnlyVisibleSubview;
- (void)_resizeBothVisibleSubviews;
- (void)_setSideBySideModeEnabled:(BOOL)arg1;
- (int)_layoutModeForForcedCollapse;
- (BOOL)_canShowBothViewsUsingWidth:(double)arg1;
- (void)splitViewItemDidExpandOrCollapseBecauseUserDraggedDivider:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)_adjustedHiddenSplitViewItemsMagitudeIfNeccessary;
- (void)_animateToLayoutMode:(int)arg1;
- (void)toggleVariableConsoleView:(id)arg1;
@property(readonly) IDEConsoleArea *consoleArea;
- (void)_setupSwapSegmentedControl:(id)arg1;
- (void)setVariablesSwapControlHidden:(BOOL)arg1;
- (void)_consoleHasOutput:(id)arg1;
- (void)watchForConsoleOutput:(BOOL)arg1;
- (void)_updateForDebuggingKVOChange;
- (void)_launchSessionChanged:(id)arg1;
@property DVTExtension *currentConsoleExtension; // @dynamic currentConsoleExtension;
@property DVTStateToken *stateToken; // @dynamic stateToken;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (BOOL)delegateFirstResponder;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_updateVisiblityOfVariablesViewSwapButton;
@property BOOL shouldShowLayoutControl; // @dynamic shouldShowLayoutControl;
- (void)activateConsole;
- (BOOL)canActivateConsole;
- (void)clearConsole;
- (BOOL)canClearConsole;
- (void)loadView;

@end

@interface IDEActionRunPhaseSheetController : IDEViewController <NSTableViewDataSource, IDECapsuleListViewDataSource, IDEActionSliceViewControllerDelegate>
{
    IDESchemeAction *_runPhase;
    NSArray *_actionTypeExtensions;
    IDEActionStackView *_actionStackView;
    IDEControlGroup *_controlGroup;
    DVTGradientImagePopUpButton *_addPopUpButton;
    DVTGradientImageButton *_removeButton;
    id <DVTObservingToken> _actionsObservingToken;
    id <DVTObservingToken> _actionSelectionObservingToken;
    NSMutableArray *_arrangedActionSliceControllers;
    NSArray *_actionUIExtensions;
}

+ (id)defaultViewNibName;
+ (void)initialize;
@property IDESchemeAction *runPhase; // @synthesize runPhase=_runPhase;
- (unsigned long long)capsuleListView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3;
- (BOOL)capsuleListView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3;
- (BOOL)capsuleListView:(id)arg1 writeRowWithIndex:(unsigned long long)arg2 toPasteboard:(id)arg3;
- (BOOL)capsuleListView:(id)arg1 shouldAllowDragOfRow:(long long)arg2;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (void)_moveActionFromIndex:(unsigned long long)arg1 toIndex:(long long)arg2;
- (void)deleteActionSlice:(id)arg1;
- (void)deleteSelectedAction:(id)arg1;
- (void)addAction:(id)arg1;
- (id)_mutablePhaseActions;
- (id)_phaseActions;
- (id)_actionsKey;
- (id)_newExecutionActionForType:(id)arg1;
@property(readonly) NSArray *actionTypeExtensions;
- (void)_actionsChanged:(id)arg1;
- (id)newActionSliceViewControllerForAction:(id)arg1;
- (void)_setUpAddMenu;
- (void)invalidate;
- (void)awakeFromNib;
- (void)updateBoundContent;
- (void)updateBoundIDEWorkspaceBinding;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDEPreActionRunPhaseSheetController : IDEActionRunPhaseSheetController
{
}

- (id)_actionsKey;

@end

@interface IDEPostActionRunPhaseSheetController : IDEActionRunPhaseSheetController
{
}

- (id)_actionsKey;

@end

@interface IDERunPauseContinueToolbarButton : DVTDelayedMenuButton
{
    IDEWorkspaceWindowController *_windowController;
    id <DVTObservingToken> _toolbarIdleObservingToken;
    NSString *_label;
    NSString *_tooltip;
    NSToolbarItem *_toolbarItem;
    BOOL _isValidToolbarItem;
}

@property BOOL isValidToolbarItem; // @synthesize isValidToolbarItem=_isValidToolbarItem;
- (void)performProfileAction:(id)arg1;
- (void)performRunAction:(id)arg1;
- (void)performTestAction:(id)arg1;
- (void)performAnalyzeAction:(id)arg1;
- (BOOL)menuItemRepresentsBuildOnly:(id)arg1;
- (void)_setToolbarItem:(id)arg1;
- (id)_toolbarItem;
- (void)_setButtonToBuildStyle:(id)arg1 menuItem:(id)arg2;
- (void)_setButtonToProfileStyle:(id)arg1 menuItem:(id)arg2;
- (void)_setButtonToTestStyle:(id)arg1 menuItem:(id)arg2;
- (void)_setButtonToAnalyzeStyle:(id)arg1 menuItem:(id)arg2;
- (void)_setButtonToRunStyle:(id)arg1 menuItem:(id)arg2;
- (void)_updateEnablement;
- (void)_updateIcon;
- (void)_updateToolbarItem;
- (id)initWithWindowController:(id)arg1;
- (id)addProfileButtonToMenu:(id)arg1;
- (id)addRunButtonToMenu:(id)arg1;
- (id)addTestButtonToMenu:(id)arg1;
- (id)addAnalyzeButtonToMenu:(id)arg1;
- (id)_newToolbarViewHitTest:(struct CGPoint)arg1;
- (void)_swizzleToolbarViewHitTest;

@end

@interface _IDEWorkspacePartsVisibilityToolbarViewController : DVTToolbarViewController
{
    id <DVTObservingToken> _navigatorVisibilityObservationToken;
    id <DVTObservingToken> _debuggerVisibilityObservationToken;
    id <DVTObservingToken> _utilitiesVisibilityObservationToken;
}

+ (id)_imagesForImageNames:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)_menuItemTitleForSplitViewWithTag:(unsigned long long)arg1 state:(BOOL)arg2;
- (void)_menuItemAction:(id)arg1;
- (void)_segmentStateDidChange:(id)arg1;
- (void)_toggleStateForSplitViewWithTag:(unsigned long long)arg1;
- (id)_propertyNameForSplitViewWithTag:(unsigned long long)arg1;
- (id)menuForMenuFormRepresentation;
- (id)initWithToolbarItemIdentifier:(id)arg1 window:(id)arg2;

@end

@interface _IDESearchFieldToolbarViewController : DVTToolbarViewController
{
}

- (id)initWithToolbarItemIdentifier:(id)arg1 window:(id)arg2;

@end

@interface _IDEActivityViewToolbarViewController : DVTToolbarViewController
{
}

@property(readonly) IDEActivityPlaceholderView *placeholderView;
- (id)initWithToolbarItemIdentifier:(id)arg1 window:(id)arg2;

@end

@interface _IDEActivityViewControllerToolbarItem : DVTViewControllerToolbarItem
{
}

- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (id)activityToolbarViewController;

@end

@interface IDEDebuggingWindowBehaviorViewController : DVTToolbarPopUpViewController
{
    id <DVTObservingToken> _debuggingWindowBehaviorObserverToken;
}

- (id)initWithPopUpButton:(id)arg1 images:(id)arg2 actionBlock:(id)arg3 itemIdentifier:(void)arg4 window:(id)arg5;

@end

@interface IDEWorkspaceToolbarItemProvider : NSObject <IDEToolbarItemProvider>
{
}

+ (id)_createRunPauseContinueButton:(id)arg1;
+ (id)itemForItemIdentifier:(id)arg1 forToolbarInWindow:(id)arg2;

@end

@interface _IDETmpSplitView : NSSplitView
{
    double _dividerThickness;
    NSColor *_dividerColor;
    BOOL _suppressFrameWarnings;
}

@property BOOL suppressFrameWarnings; // @synthesize suppressFrameWarnings=_suppressFrameWarnings;
@property(copy) NSColor *dividerColor; // @synthesize dividerColor=_dividerColor;
@property double dividerThickness; // @synthesize dividerThickness=_dividerThickness;
- (BOOL)_validateSubviewFrames;
- (void)drawDividerInRect:(struct CGRect)arg1;

@end

@interface IDENavBar : DVTAutoLayoutView
{
    int _gradientStyle;
    DVTBorderedView *_pathBorderedView;
    IDEPathControl *_pathControl;
    IDEControlGroup *_leftControlGroup;
    IDEControlGroup *_rightControlGroup;
    int _borderSides;
}

+ (id)textColorForGradientStyle:(int)arg1;
+ (id)interiorHighlightColorForGradientStyle:(int)arg1;
+ (id)inactiveInteriorBorderColorForGradientStyle:(int)arg1;
+ (id)interiorBorderColorForGradientStyle:(int)arg1;
+ (id)inactiveBackgroundGradientForGradientStyle:(int)arg1;
+ (id)backgroundGradientForGradientStyle:(int)arg1;
+ (id)inactiveBorderColorForGradientStyle:(int)arg1;
+ (id)borderColorForGradientStyle:(int)arg1;
@property IDEControlGroup *rightControlGroup; // @synthesize rightControlGroup=_rightControlGroup;
@property IDEPathControl *pathControl; // @synthesize pathControl=_pathControl;
@property IDEControlGroup *leftControlGroup; // @synthesize leftControlGroup=_leftControlGroup;
@property int gradientStyle; // @synthesize gradientStyle=_gradientStyle;
@property int borderSides; // @synthesize borderSides=_borderSides;
- (struct CGRect)grabRect;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_controlGroupDidChange:(id)arg1;
- (void)_IDENavBarSharedInit;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)_updateBorderSidesForSubviews;

@end

@interface IDEWorkspaceWindow : NSWindow
{
    NSString *_title;
    DVTRolloverImageButton *_lockButton;
    BOOL _isCapturingMiniWindowImage;
    BOOL _ignoresOrderFront;
}

+ (id)lastActiveWorkspaceWindow;
- (void)_invalidateCursorRectsForView:(id)arg1 force:(BOOL)arg2;
- (BOOL)_addCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3;
- (void)_setCursorForMouseLocation:(struct CGPoint)arg1;
- (BOOL)_keyViewRedirectionDisabled;
- (void)recalculateKeyViewLoop;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (void)becomeMainWindow;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)orderFront:(id)arg1;
- (void)setIgnoresOrderFront:(BOOL)arg1;
- (BOOL)ignoresOrderFront;
- (void)setWindowController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsCapturingMiniWindowImage:(BOOL)arg1;
- (BOOL)isMainWindow;
- (BOOL)isKeyWindow;
- (void)close;
- (struct CGRect)adjustedFrameForCascade:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)_adjustedFrameForSaving:(struct CGRect)arg1;

@end

@interface IDEPreferencesController : NSWindowController <NSWindowRestoration, NSToolbarDelegate>
{
    DVTReplacementView *_paneReplacementView;
    DVTExtension *_currentExtension;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)defaultPreferencesController;
@property DVTExtension *currentExtension; // @synthesize currentExtension=_currentExtension;
@property(retain) DVTReplacementView *paneReplacementView; // @synthesize paneReplacementView=_paneReplacementView;
- (void)selectPreviousTab:(id)arg1;
- (void)selectNextTab:(id)arg1;
- (void)_selectToolbarItem:(id)arg1;
- (void)showPreferencesPanel:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)finalize;
- (void)windowWillClose:(id)arg1;
- (void)selectPreferencePaneWithIdentifier:(id)arg1;
- (void)windowDidLoad;
- (id)initWithWindow:(id)arg1;
- (void)_cachePreferencePaneExtensions;

@end

@interface IDEEditorVersionsMode : IDEEditorModeViewController
{
    id <DVTObservingToken> _editorToken;
    id <DVTObservingToken> _selectedMergeDescriptorObserver;
    id <DVTObservingToken> _conflictCountObserver;
    int _transientEditorSubmode;
    id _editorCustomizationBlock;
    DVTDiffDescriptor *_selectedMergeDescriptor;
    unsigned long long _conflictCount;
}

+ (id)stateSavingIdentifiers;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingComparisonEditorSubmode;
+ (id)keyPathsForValuesAffectingComparisonEditor;
@property unsigned long long conflictCount; // @synthesize conflictCount=_conflictCount;
@property DVTDiffDescriptor *selectedMergeDescriptor; // @synthesize selectedMergeDescriptor=_selectedMergeDescriptor;
@property(copy) id editorCustomizationBlock; // @synthesize editorCustomizationBlock=_editorCustomizationBlock;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (id)_stealPrimaryEditorContext;
- (id)editorContexts;
- (void)_setPersistentRepresentation:(id)arg1 forIdentifier:(id)arg2;
- (id)_persistentRepresentationForIdentifier:(id)arg1;
- (void)_stampEditorLayoutConfiguration:(id)arg1 forIdentifier:(id)arg2;
- (id)_liftEditorLayoutConfigurationForIdentifier:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
@property BOOL showMiniIssueNavigator;
@property(readonly) IDEComparisonEditorSubmode *comparisonEditorSubmode;
@property(readonly) IDEComparisonEditor *comparisonEditor;
@property int editorSubmode;
- (void)resetEditor;
- (BOOL)canResetEditor;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (id)_initWithPrimaryEditorContext:(id)arg1;

@end

@interface IDEEditorBasicMode : IDEEditorModeViewController
{
}

+ (id)stateSavingIdentifiers;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (id)editorContexts;
- (void)_setPersistentRepresentation:(id)arg1 forIdentifier:(id)arg2;
- (id)_persistentRepresentationForIdentifier:(id)arg1;
- (void)_stampEditorLayoutConfiguration:(id)arg1 forIdentifier:(id)arg2;
- (id)_liftEditorLayoutConfigurationForIdentifier:(id)arg1;
- (id)_stealPrimaryEditorContext;
- (BOOL)canCreateSplitForNavigationHUD;
- (void)loadView;

@end

@interface _IDEGeniusResultsContext : NSObject
{
    NSString *_geniusCategory;
    IDENavigableItem *_geniusRootNavigableItem;
}

@property IDENavigableItem *geniusRootNavigableItem; // @synthesize geniusRootNavigableItem=_geniusRootNavigableItem;
@property(copy) NSString *geniusCategory; // @synthesize geniusCategory=_geniusCategory;

@end

@interface IDEEditorGeniusMode : IDEEditorModeViewController <IDEEditorContextDelegate, IDEEditorMultipleContextDelegate, NSSplitViewDelegate>
{
    int _layout;
    id <DVTObservingToken> _geniusResultsObservingToken;
    IDEEditorMultipleContext *_alternateEditorMultipleContext;
    NSMapTable *_geniusResultContexts;
    id _pendingEditorLayoutConfiguration;
    id _pendingPersistentRepresentation;
    NSString *_pendingStateSavingIdentifier;
    BOOL _isRestoringState;
    BOOL _isRestoringPendingState;
    BOOL _didInitialViewInstall;
}

+ (id)keyPathsForValuesAffectingSelectedAlternateEditorContext;
+ (id)stateSavingIdentifiers;
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property IDEEditorMultipleContext *alternateEditorMultipleContext; // @synthesize alternateEditorMultipleContext=_alternateEditorMultipleContext;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (id)_stealPrimaryEditorContext;
- (id)selectedAlternateEditorContext;
- (BOOL)canCreateSplitForNavigationHUD;
- (void)resetEditor;
- (BOOL)canResetEditor;
- (BOOL)_canResetEditor:(BOOL)arg1 keeping:(id)arg2;
- (void)_closeAllSplitsKeeping:(id)arg1;
- (void)removeAssistantEditor;
- (BOOL)canRemoveAssistantEditor;
- (id)addNewAssistantEditor;
- (BOOL)canAddNewAssistantEditor;
- (void)addAssistantEditor;
- (BOOL)canAddAssistantEditor;
- (void)setAssistantEditorsLayout:(int)arg1;
- (BOOL)canChangeAssistantEditorsLayout;
- (id)editorContexts;
- (BOOL)openEditorOpenSpecifier:(id)arg1 editorContext:(id)arg2;
- (BOOL)openEditorHistoryItem:(id)arg1 editorContext:(id)arg2;
- (void)_setPersistentRepresentation:(id)arg1 forIdentifier:(id)arg2;
- (void)_setPersistentRepresentation:(id)arg1 forIdentifier:(id)arg2 excludingEditorContext:(id)arg3;
- (id)_persistentRepresentationForIdentifier:(id)arg1;
- (void)_stampEditorLayoutConfiguration:(id)arg1 forIdentifier:(id)arg2;
- (id)_liftEditorLayoutConfigurationForIdentifier:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)removeSplitForEditorContext:(id)arg1;
- (void)addSplitForEditorContext:(id)arg1;
- (id)editorContext:(id)arg1 navigableItemForEditingFromArchivedRepresentation:(id)arg2 error:(id *)arg3;
- (id)_navigableItemForEditorContext:(id)arg1 fromGeniusArchivedRepresentation:(id)arg2 error:(id *)arg3;
- (id)_navigableItemForEditorContext:(id)arg1 inGeniusCategoryNavigableItem:(id)arg2 withDocumentURLOrNil:(id)arg3;
- (id)_manualCategoryNavigableItemForEditorContext:(id)arg1 withDocumentURLOrNil:(id)arg2;
- (id)_navigableItemForEditorContext:(id)arg1 fromStructureArchivedRepresentation:(id)arg2 error:(id *)arg3;
- (id)_manualCategoryNavigableItemForEditorContext:(id)arg1 withStructureNavigableItem:(id)arg2;
- (id)_navigableItemForEditorContext:(id)arg1 bySelectingRawDocumentURLInManualDomain:(id)arg2;
- (id)_resetManualCategoryNavigableItemForEditorContext:(id)arg1 toDomainWithIdentifier:(id)arg2;
- (id)_manualCategoryNavigableItemForEditorContext:(id)arg1;
- (id)_selectedCategoryNavigableItemForEditorContext:(id)arg1;
- (id)_navigableItemForGeniusCategory:(id)arg1 editorContext:(id)arg2;
- (BOOL)provideWorkspaceStructureForEmptyEditorContext:(id)arg1;
- (void)_editorContext:(id)arg1 openingEmptyEditorInsteadOfNavigableItem:(id)arg2;
- (BOOL)editorContext:(id)arg1 emptyEditorRootNavigableItem:(id *)arg2 selectedNavigableItem:(id *)arg3;
- (void)editorContext:(id)arg1 didUpdateMenu:(id)arg2;
- (BOOL)canCloseDocumentForEditorContext:(id)arg1;
- (void)editorContext:(id)arg1 didSetNavigableItem:(id)arg2;
- (void)editorMultipleContext:(id)arg1 didSplitEditorContext:(id)arg2 creatingEditorContext:(id)arg3;
- (void)_setDefaultGeniusCategoryForEditorContext:(id)arg1;
- (void)_updateRootNavigableItemForEditorContext:(id)arg1;
- (void)_primitiveSetGeniusCategory:(id)arg1 forEditorContext:(id)arg2;
- (id)_geniusCategoryForEditorContext:(id)arg1;
- (void)_setGeniusRootNavigableItem:(id)arg1 forEditorContext:(id)arg2;
- (id)_geniusRootNavigableItemForEditorContext:(id)arg1;
- (id)_geniusResultsContextForEditorContext:(id)arg1;
- (id)_editorGeniusResults;
@property BOOL splitsVertical;
- (void)_setSplitsVertical:(BOOL)arg1;
@property double splitPosition;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_cancelPendingStateRestoration;
- (void)_setupPendingStateRestorationWithLayoutConfiguration:(id)arg1 persistentRepresentation:(id)arg2 stateSavingIdentifier:(id)arg3;
- (void)loadView;
- (id)_initWithPrimaryEditorContext:(id)arg1;

@end

@interface IDEControlGroup : DVTBorderedView
{
    BOOL _drawsInnerBorders;
    NSColor *_innerBorderColor;
    NSColor *_innerInactiveBorderColor;
    int _solidBorderSides;
}

@property int solidBorderSides; // @synthesize solidBorderSides=_solidBorderSides;
@property(copy) NSColor *innerInactiveBorderColor; // @synthesize innerInactiveBorderColor=_innerInactiveBorderColor;
@property(copy) NSColor *innerBorderColor; // @synthesize innerBorderColor=_innerBorderColor;
@property BOOL drawsInnerBorders; // @synthesize drawsInnerBorders=_drawsInnerBorders;
- (BOOL)isOpaque;
- (BOOL)isShowingShadow;
- (void)setShadowSides:(int)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setInactiveBackgroundGradient:(id)arg1;
- (void)setInactiveBackgroundColor:(id)arg1;
- (void)setBackgroundGradient:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBorderSides:(int)arg1;
- (void)setAllInactiveBordersToColor:(id)arg1;
- (void)setAllBordersToColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)controlViewDidResize:(id)arg1;
- (unsigned long long)numberOfControlViews;
@property(readonly) NSArray *controlViews;
- (void)removeControlView:(id)arg1;
- (void)addControlViewLast:(id)arg1;
- (void)addControlViewFirst:(id)arg1;
- (void)_addControlView:(id)arg1 isFirst:(BOOL)arg2;
- (id)_borderedViewForControlView:(id)arg1;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)_propagateDrawingPropertiesToSubview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _IDEEditorStepperArrowButton : DVTGradientImageButton
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithWithDirection:(BOOL)arg1;

@end

@interface IDEEditorStepperView : DVTAutoLayoutView
{
    DVTGradientImageButton *_leftArrowButton;
    DVTGradientImageButton *_rightArrowButton;
    NSView *_centerView;
    NSArrayController *_arrayController;
    BOOL _drawRightBorder;
}

+ (id)keyPathsForValuesAffectingCanMove;
+ (id)_arrowButtonWithDirection:(BOOL)arg1;
@property BOOL drawRightBorder; // @synthesize drawRightBorder=_drawRightBorder;
@property NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
- (void)setGradientStyle:(int)arg1;
- (void)selectPrevious:(id)arg1;
- (void)selectNext:(id)arg1;
- (BOOL)canMove;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)newCenterView;
- (void)layoutBottomUp;
- (struct CGSize)centerViewSizeInHeight:(double)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEEditorModeToolbarViewController : DVTToolbarViewController
{
}

+ (id)_imagesForImageNames:(id)arg1;
- (void)_segmentStateDidChange:(id)arg1;
- (void)_setEditorModeForMenuItem:(id)arg1;
- (void)_setEditorMode:(int)arg1;
- (long long)_stateForMenuItemTag:(long long)arg1 editorModeClass:(Class)arg2 classAccessor:(SEL)arg3 instanceAccessor:(SEL)arg4;
- (id)_editorModeViewController;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)menuForMenuFormRepresentation;
- (id)initWithToolbarItemIdentifier:(id)arg1 window:(id)arg2;

@end

@interface IDEActionStackView : IDECapsuleListView
{
    id <IDEActionStackViewDelegate> _delegate;
}

@property id <IDEActionStackViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)drawRect:(struct CGRect)arg1;
- (void)invalidateLayout;
- (id)initWithFrame:(struct CGRect)arg1 stackView:(id)arg2;

@end

@interface IDEFirstResponderView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)acceptsFirstResponder;

@end

@interface IDEEditorEmpty : IDEEditor
{
    NSString *_emptyContentString;
    IDEFirstResponderView *_firstResponderView;
    DVTLozengeTextField *_lozengeTextField;
    NSProgressIndicator *_progressIndicator;
    id <DVTObservingToken> _workspaceActivityObserver;
    BOOL _hideWorkspaceLoadingProgressIndicator;
}

@property BOOL hideWorkspaceLoadingProgressIndicator; // @synthesize hideWorkspaceLoadingProgressIndicator=_hideWorkspaceLoadingProgressIndicator;
- (void)setEmptyContentString:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_finishViewDidInstall;
- (void)invalidate;
- (void)loadView;
- (void)_centerViewInSuperView:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

@end

@interface IDEOrganizerWindowController : NSWindowController <NSWindowRestoration, NSToolbarDelegate, NSWindowDelegate, IDEEditorAreaContainer, DVTStatefulObject, DVTStateRepositoryDelegate, DVTReplacementViewDelegate>
{
    DVTReplacementView *_contentReplacementView;
    NSArray *_sources;
    NSArray *_organizerSourceExtensions;
    NSArray *_organizerSourceExtensionIdentifiers;
    NSDictionary *_organizerSourceExtensionsForIdentifier;
    DVTExtension *_currentExtension;
    DVTStateToken *_stateToken;
    DVTStateRepository *_stateRepository;
    DVTDelayedValidator *_stateSavingValidator;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)sharedOrganizerWindowController;
@property(readonly) DVTDelayedValidator *stateSavingValidator; // @synthesize stateSavingValidator=_stateSavingValidator;
@property DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property(readonly) DVTStateRepository *stateRepository; // @synthesize stateRepository=_stateRepository;
@property DVTExtension *currentExtension; // @synthesize currentExtension=_currentExtension;
@property(copy) NSArray *sources; // @synthesize sources=_sources;
- (BOOL)_loadStateData:(id *)arg1;
- (BOOL)_saveStateData:(id *)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (id)_stateRepositoryFilePath;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)stateRepositoryDidChange:(id)arg1;
@property(readonly) IDEEditorArea *editorArea;
- (void)showWindow:(id)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)selectNextTab:(id)arg1;
- (void)selectNextTabForwards:(BOOL)arg1;
- (id)_selectableToolbarItems;
- (void)_selectToolbarItem:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (void)windowDidResize:(id)arg1;
- (void)_setWindowTitleWithExtension:(id)arg1;
- (id)currentOrganizerSource;
- (void)showOrganizerSourceWithIdentifier:(id)arg1;
- (void)windowDidLoad;
- (void)_cacheOrganizerSourceExtensions;
- (id)init;

@end

@interface IDEOrganizerWindow : NSWindow
{
    BOOL _firstResponderLocked;
}

@property BOOL firstResponderLocked; // @synthesize firstResponderLocked=_firstResponderLocked;
- (BOOL)makeFirstResponder:(id)arg1;

@end

@interface IDEAppPrefPaneController : DVTViewController
{
    NSUserDefaultsController *defaultsController;
}

@property NSUserDefaultsController *defaultsController; // @synthesize defaultsController;
@property(readonly) NSString *modifiedClickLabel;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)loadView;

@end

@interface IDEConsoleArea : IDEViewController <DVTFindBarHostable, DVTScopeBarHost, IDEConsoleTextViewStandardIODelegate, IDEDebuggerBarConsoleInfoProvider, DVTCompletingTextViewDelegate>
{
    DVTScopeBarView *_scopeBar;
    IDEConsoleTextView *_consoleView;
    NSPopUpButton *_filterModePopUpButton;
    NSButton *_clearConsoleButton;
    NSSegmentedControl *_swapButton;
    IDEWorkspaceDocument *_workspaceDocument;
    double _clearConsoleButtonSeparation;
    NSMutableArray *_inputHistoryForDebugger;
    unsigned long long _inputHistoryIndexForDebugger;
    NSString *_userEnteredTextBeforeShowingCommandHistory;
    NSMutableSet *_consoleAdaptors;
    double _lastClearTime;
    id <DVTObservingToken> _workspaceDocumentObserverToken;
    id <DVTObservingToken> _launchSessionObservingToken;
    id <DVTObservingToken> _consoleAdaptorsObservingToken;
    id <DVTObservingToken> _debugSessionStateObservingToken;
    id <DVTObservingToken> _debuggingWindowBehaviorObservingToken;
    id <DVTObservingToken> _userWantsMiniDebuggingConsoleObservingToken;
    id <DVTObservingToken> _debugSessionObservingToken;
    DVTScopeBarController *_findScopeBarController;
    DVTScopeBarsManager *_scopeBarsManager;
    struct _NSRange _originalSelection;
    id _findStringChangedNotificationToken;
    int _filterMode;
    BOOL _shouldShowLayoutControl;
    BOOL _hasNewInterestingOutput;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property BOOL hasNewInterestingOutput; // @synthesize hasNewInterestingOutput=_hasNewInterestingOutput;
@property int filterMode; // @synthesize filterMode=_filterMode;
@property(readonly) NSSegmentedControl *swapButton; // @synthesize swapButton=_swapButton;
@property BOOL shouldShowLayoutControl; // @synthesize shouldShowLayoutControl=_shouldShowLayoutControl;
- (void)completingTextView:(id)arg1 willPassContextToStrategies:(id)arg2 atWordStartLocation:(unsigned long long)arg3;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (void)_assertUnsupportedAction;
- (void)replaceAndFindPrevious:(id)arg1;
- (void)replaceAndFindNext:(id)arg1;
- (void)replaceAll:(id)arg1;
- (void)useSelectionForReplace:(id)arg1;
- (void)replace:(id)arg1;
- (void)findAndReplace:(id)arg1;
- (void)hideFindBar:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)find:(id)arg1;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (BOOL)dvtFindBar:(id)arg1 validateUserInterfaceItem:(id)arg2;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
@property(readonly) NSView *scopeBarsBaseView;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)_findBar;
- (id)_createFindBar;
- (void)_installFindBar;
- (BOOL)_isFindBarInstalled;
- (void)showNextCommandFromHistory:(id)arg1;
- (void)showPreviousCommandFromHistory:(id)arg1 currentStringAfterPrompt:(id)arg2;
- (void)consoleView:(id)arg1 didEndText:(id)arg2 forDebugger:(BOOL)arg3;
@property(readonly) BOOL tracksInputHistoryForDebugger;
@property(readonly) NSMutableArray *inputHistoryForDebugger;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_outputForConsole:(id)arg1;
- (void)_debuggingWindowBehaviorChanged;
- (void)_debugSessionStateChanged;
- (void)_updateShowLayoutControl:(int)arg1;
- (void)_dealWithConsoleAdaptorsKVOChange:(id)arg1;
- (BOOL)delegateFirstResponder;
- (void)_removeConsoleAdaptors:(id)arg1;
- (void)_addConsoleAdaptors:(id)arg1;
- (void)_appendItem:(id)arg1;
- (void)_clearText;
- (void)invalidate;
- (void)_removeObserverForConsoleAdaptor:(id)arg1;
- (void)_filterChanged;
- (void)clearConsole:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_setWorkspaceDocument:(id)arg1;
- (void)_removeCurrentConsoleAdaptors;
- (id)_sortedCompletionStrategiesForDebuggerIdentifier:(id)arg1;
- (void)_installCompletionStrategiesBasedOnDebugger;
- (void)_invalidateFindBarResults;
- (void)activateConsole;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;

@end

@interface IDEConsoleTextView : DVTCompletingTextView <DVTTextFindable, DVTFindBarFindable>
{
    id <IDEConsoleTextViewStandardIODelegate> _stdIODelegate;
    struct _NSRange _lastLineTextRange;
    long long _lastRemovableTextLocation;
    NSString *_promptString;
    DVTTextCompletionDataSource *_consoleTextViewcompletionsDataSource;
    NSDictionary *_debuggerPromptTextAttributes;
    NSDictionary *_debuggerInputTextAttributes;
    NSDictionary *_debuggerOutputTextAttributes;
    NSDictionary *_debuggedTargetInputTextAttributes;
    NSDictionary *_debuggedTargetOutputTextAttributes;
    NSDictionary *_textTypeToAttributes;
    NSMutableArray *_itemsToAppendAfterDelay;
    int _logMode;
    BOOL _hasBeenScrolled;
}

+ (void)initialize;
@property int logMode; // @synthesize logMode=_logMode;
@property struct _NSRange lastLineTextRange; // @synthesize lastLineTextRange=_lastLineTextRange;
@property id <IDEConsoleTextViewStandardIODelegate> standardIODelegate; // @synthesize standardIODelegate=_stdIODelegate;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)paste:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (id)_attributesForConsoleItem:(id)arg1;
- (void)insertText:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (BOOL)_isValidForHistoryTracking;
- (id)writablePasteboardTypes;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (void)keyDown:(id)arg1;
- (void)_sendTextToTargetIfNecessary:(id)arg1;
- (void)_moveInsertionPointToEnd;
- (id)userEnteredTextAfterPromptUpToLocation:(unsigned long long)arg1;
- (id)userEnteredTextAfterPrompt;
- (void)repeatInput:(id)arg1;
- (void)_appendNonPromptConsoleItem:(id)arg1;
- (void)_appendPromptConsoleItem:(id)arg1;
- (void)_appendPromptString:(id)arg1;
- (void)_appendConsoleItem:(id)arg1;
- (void)appendConsoleItemsImmediatlyWithoutScrolling:(id)arg1;
- (void)_appendConsoleItemsWaitingToBeAppended;
- (void)appendConsoleItemsAfterDelay:(id)arg1;
- (void)appendConsoleItemAfterDelay:(id)arg1;
- (void)_resetTypingAttributes;
- (struct _NSRange)_rangeBeforeLastLineText;
- (void)_processInputTextForCompleteLineAndSendToDelegate:(BOOL)arg1;
- (void)clearConsoleItems;
- (void)_scrollToBottom;
- (BOOL)_shouldScrollToTheBottom;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (void)_batchReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 attributes:(id)arg3 inRange:(struct _NSRange)arg4;
- (struct _NSRange)_inputTextRange;
- (id)_realString;
- (void)_reapplyAttributes;
- (void)_recreateAttributes;
- (void)_themeColorsUpdated;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setCompletionStrategies:(id)arg1;
- (id)completionsDataSource;
- (BOOL)shouldAutoCompleteAtLocation:(unsigned long long)arg1;
- (double)autoCompletionDelay;
- (void)_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property unsigned long long supportedMatchingOptions;

@end

@interface IDEConsoleTextCompletionDataSource : DVTTextCompletionDataSource
{
    NSArray *_consoleTextViewStrategies;
}

- (void)_setStrategies:(id)arg1;
- (id)strategies;

@end

@interface IDESaveMultipleItem : NSObject
{
    IDEEditorDocument *_editorDocument;
    BOOL _isSelected;
}

@property BOOL isSelected; // @synthesize isSelected=_isSelected;
@property(readonly) IDEEditorDocument *editorDocument; // @synthesize editorDocument=_editorDocument;
- (id)initWithEditorDocument:(id)arg1;

@end

@interface IDESaveMultipleWindowController : NSWindowController
{
    NSArrayController *documentArrayController;
    NSTableView *tableView;
    NSString *_title;
    BOOL _hasDontSaveButton;
    BOOL _hasCancelButton;
    NSString *_cancelButtonTitle;
}

@property(copy) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property BOOL hasCancelButton; // @synthesize hasCancelButton=_hasCancelButton;
@property BOOL hasDontSaveButton; // @synthesize hasDontSaveButton=_hasDontSaveButton;
@property(copy) NSString *title; // @synthesize title=_title;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)dontSaveAction:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)saveAction:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)runWithEditorDocuments:(id)arg1 callbackBlock:(id)arg2;
- (id)_openWindowTerminationDisablingReason;
- (id)init;

@end

@interface IDEInspectorViewController : IDEViewController <NSUserInterfaceValidations, IDEBindableDeclarativeInspectorController>
{
    NSArrayController *_inspectedDocumentsController;
    NSArrayController *_inspectedObjectsController;
    NSArray *_content;
    NSArray *_inspectedDocuments;
    id _selectionProxy;
    id _selectedDocumentsProxy;
    NSDictionary *_issueInfoDictionary;
    NSView<DVTIssueDisplayingView> *_issueDisplayingView;
    IDEInspectorCategoryController *_categoryController;
    IDEUtilityArea *_utilityArea;
    NSMutableDictionary *_keyPathTriggeringReloadObservers;
    DVTDelayedValidator *_reloadInspectorDelayedValidator;
}

+ (id)inspectorConfiguredDisclosureView;
+ (id)keyPathsForValuesAffectingInspectedObject;
+ (id)keyPathsForValuesAffectingInspectedObjects;
@property IDEUtilityArea *utilityArea; // @synthesize utilityArea=_utilityArea;
@property IDEInspectorCategoryController *categoryController; // @synthesize categoryController=_categoryController;
@property NSView<DVTIssueDisplayingView> *issueDisplayingView; // @synthesize issueDisplayingView=_issueDisplayingView;
@property(copy) NSDictionary *issueInfoDictionary; // @synthesize issueInfoDictionary=_issueInfoDictionary;
@property(readonly) id <IDEInspectorContentController> inspectedDocumentsController; // @synthesize inspectedDocumentsController=_inspectedDocumentsController;
@property(readonly) id <IDEInspectorContentController> inspectedObjectsController; // @synthesize inspectedObjectsController=_inspectedObjectsController;
@property(readonly) BOOL availableForAllVersionsOfMacOSX;
@property(readonly) BOOL availableForMacOSX1070AndLater;
@property(readonly) BOOL availableForMacOSX1060AndEarlier;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)undoManager;
- (BOOL)supportsDocumentUndo;
@property(readonly) id inspectedObject;
@property(readonly) NSArray *inspectedObjects;
@property(readonly) NSBundle *bundle;
@property(readonly) NSArray *inspectedDocuments; // @dynamic inspectedDocuments;
- (id)dvtExtraBindings;
@property(copy) NSArray *content; // @dynamic content;
- (void)editorDocumentShouldCommitEditing:(id)arg1;
- (BOOL)_tracksDocuments;
- (void)viewWillUninstall;
- (void)loadView;
- (void)invalidate;
- (void)reloadInspectorFromFileWhenKeyPathChanges:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)selectedDocuments;
- (id)selection;

@end

@interface IDEAnnotationContext : DVTAnnotationContext
{
    IDEEditor *_editor;
    NSDocument *_document;
    IDEWorkspaceTabController *_workspaceTabController;
}

@property IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property NSDocument *document; // @synthesize document=_document;
@property IDEEditor *editor; // @synthesize editor=_editor;
- (id)description;
@property(readonly) IDEWorkspace *workspace;
- (id)initWithEditor:(id)arg1 document:(id)arg2 fileDataType:(id)arg3 workspaceTabController:(id)arg4;
- (id)initWithFileDataType:(id)arg1;

@end

@interface IDEEditorDocumentValidatedUserInterfaceItem : NSObject <NSValidatedUserInterfaceItem>
{
    SEL _action;
    long long _tag;
}

@property long long tag; // @synthesize tag=_tag;
@property SEL action; // @synthesize action=_action;

@end

@interface IDEEditorDocument : NSDocument <IDEReadOnlyItem>
{
    DVTExtension *_extension;
    NSMutableSet *_documentEditors;
    NSMutableArray *_pendingChanges;
    DVTStackBacktrace *_creationBacktrace;
    DVTStackBacktrace *_invalidationBacktrace;
    int _readOnlyStatus;
    DVTFilePath *_filePath;
    DVTUndoManager *_dvtUndoManager;
    id _willCloseUndoGroupNotificationToken;
    id _willUndoChangeNotificationToken;
    id _willRedoChangeNotificationToken;
    NSURL *_ide_representedURL;
    DVTFileDataType *_ide_hintedFileDataType;
    BOOL _isClosing;
    BOOL _isClosingForRevert;
    BOOL _isSaving;
    BOOL _isInvalidated;
    BOOL _wholeDocumentChanged;
    BOOL _trackFileSystemChanges;
    BOOL _calledEditorDocumentWillClose;
    BOOL _calledEditorDocumentDidClose;
    BOOL _didDisableAutomaticTermination;
    BOOL _isUnlockingDocument;
    BOOL _ide_isRepresentationEditable;
    BOOL _ide_isTemporaryDocument;
}

+ (id)editedFileContents;
+ (id)readableTypes;
+ (Class)undoManagerClass;
+ (BOOL)_shouldShowUtilititesAreaAtLoadForSimpleFilesFocusedWorkspace;
+ (BOOL)shouldTrackFileSystemChanges;
+ (BOOL)shouldUnlockFileURLBeforeMakingChanges;
+ (void)initialize;
@property DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly) DVTStackBacktrace *creationBacktrace; // @synthesize creationBacktrace=_creationBacktrace;
@property DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property int readOnlyStatus; // @synthesize readOnlyStatus=_readOnlyStatus;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL trackFileSystemChanges; // @synthesize trackFileSystemChanges=_trackFileSystemChanges;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)restoreDocumentWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
- (BOOL)makeWritableWithError:(id *)arg1;
@property(readonly) NSURL *readOnlyItemURL;
- (int)_underlyingFileReadOnlyStatus;
- (void)revertDocumentToSaved:(id)arg1;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (BOOL)canRevert;
- (id)editedContents;
- (id)diffDataSource;
- (id)updatedLocationFromLocation:(id)arg1 toTimestamp:(double)arg2;
- (id)emptyPrivateCopy;
- (id)privateCopy;
- (void)updateChangedLocation:(id)arg1;
- (void)_sendOutDocumentUpdateLocation;
- (void)updateChangeCount:(unsigned long long)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(readonly) BOOL canSaveAs;
@property(readonly) BOOL canSave;
- (BOOL)isClosingForRevert;
- (void)closeToRevert;
@property(readonly, getter=isClosed) BOOL closed;
- (void)close;
- (void)editorDocumentDidClose;
- (void)_editorDocumentDidClose;
- (void)editorDocumentWillClose;
- (void)_editorDocumentWillClose;
- (void)_invalidate;
- (void)saveDocumentAs:(id)arg1;
- (void)saveDocument:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)initWithType:(id)arg1 error:(id *)arg2;
- (void)_handleDocumentFileChanges:(id)arg1;
- (id)windowForSheet;
- (id)ide_displayName;
- (void)setFileURL:(id)arg1;
- (void)_respondToFileChangeOnDiskWithFilePath:(id)arg1;
- (BOOL)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (void)unregisterDocumentEditor:(id)arg1;
- (void)registerDocumentEditor:(id)arg1;
- (id)_documentEditors;
- (void)setUndoManager:(id)arg1;
- (id)undoManager;
- (void)_unlockIfNeededCompletionBlock:(id)arg1;
- (id)init;
- (void)setSdefSupport_displayName:(id)arg1;
- (id)sdefSupport_displayName;
@property BOOL ide_isRepresentationEditable;
@property DVTFileDataType *ide_hintedFileDataType;
@property(copy) NSURL *ide_representedURL;
@property(readonly) BOOL ide_isTextRepresentation;
@property BOOL ide_isTemporaryDocument;

@end

@interface IDEIconCreatorImageRep : NSImageRep
{
    NSImage *_baseImage;
    NSImage *_badgeImage;
    BOOL _isDirty;
}

@property BOOL isDirty; // @synthesize isDirty=_isDirty;
@property NSImage *baseImage; // @synthesize baseImage=_baseImage;
@property NSImage *badgeImage; // @synthesize badgeImage=_badgeImage;
- (BOOL)draw;

@end

@interface IDEIconCreator : NSObject
{
}

+ (id)imageForURL:(id)arg1 fileDataTypeHint:(id)arg2;
+ (id)imageWithBaseImage:(id)arg1 badgeImage:(id)arg2 isDirty:(BOOL)arg3;
+ (id)imageWithBaseImage:(id)arg1 isDirty:(BOOL)arg2;
+ (id)_imageWithBaseImage:(id)arg1 badgeImage:(id)arg2 isDirty:(BOOL)arg3;

@end

@interface IDENavigatorDataCell : DVTImageAndTextCell
{
    BOOL _usesGroupHeaderStyle;
}

+ (void)initialize;
@property BOOL usesGroupHeaderStyle; // @synthesize usesGroupHeaderStyle=_usesGroupHeaderStyle;
- (id)titleDropShadow;
- (id)subtitleFont;
- (void)setFont:(id)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)setBaseImageSize:(struct CGSize)arg1;
- (void)_setBaseImageSize:(struct CGSize)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface IDENavigatorStatusCell : NSActionCell
{
    unsigned long long _imageScaling;
    struct CGSize _baseImageSize;
    NSImage *_image;
    NSAttributedString *_attributedStringValue;
    int _statusCellType;
}

+ (void)initialize;
@property(readonly) int statusCellType; // @synthesize statusCellType=_statusCellType;
@property NSImage *image; // @synthesize image=_image;
@property struct CGSize baseImageSize; // @synthesize baseImageSize=_baseImageSize;
@property unsigned long long imageScaling; // @synthesize imageScaling=_imageScaling;
- (struct CGSize)cellSize;
- (id)attributedStringValue;
@property(copy) NSString *title; // @dynamic title;
- (void)setHighlighted:(BOOL)arg1;
- (void)_validateCachedAttributedStringValue;
- (void)_clearAttributedStringValue;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImageStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawCharacterStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTextStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawStatusStringInPathRect:(struct CGRect)arg1 view:(id)arg2;
- (id)initWithType:(int)arg1;
- (id)dvtExtraBindings;

@end

@interface _IDEWindowMenuController : NSObject <NSMenuDelegate>
{
}

- (void)_activateWorkspaceTabController:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface IDEApplication : DVTApplication
{
    _IDEWindowMenuController *_windowMenuController;
    id _ideEventDelegate;
}

@property id <IDEApplicationEventDelegate> eventDelegate; // @synthesize eventDelegate=_ideEventDelegate;
- (void)endSheet:(id)arg1 returnCode:(long long)arg2;
- (void)beginSheet:(id)arg1 modalForWindow:(id)arg2 modalDelegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)closeAll:(id)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3;
- (void)terminate:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)_errorAlert:(id)arg1 wasPresentedWithResult:(long long)arg2 inContext:(id)arg3;
- (void)updateWindowsItem:(id)arg1;
- (void)changeWindowsItem:(id)arg1 title:(id)arg2 filename:(BOOL)arg3;
- (void)addWindowsItem:(id)arg1 title:(id)arg2 filename:(BOOL)arg3;
- (void)removeWindowsItem:(id)arg1;
- (void)setWindowsMenu:(id)arg1;
- (void)reportException:(id)arg1;
- (void)_enableFloatingDebugger;
- (id)_findDebuggingWorkspaceWindowOrFrontmostWorkspaceWindow;
@property(readonly) IDEWorkspaceWindow *keyWorkspaceWindow;
@property(readonly) IDEWorkspaceWindow *lastActiveWorkspaceWindow;
- (void)setSdefSupport_activeWorkspaceDocument:(id)arg1;
- (id)sdefSupport_activeWorkspaceDocument;
- (void)insertInSdefSupport_workspaceDocuments:(id)arg1;
- (id)sdefSupport_newWorkspaceDocument:(id)arg1;
- (id)sdefSupport_workspaceDocuments;
- (void)insertInSdefSupport_projects:(id)arg1 atIndex:(long long)arg2;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)sdefSupport_classModelDocuments;
- (id)sdefSupport_symbolicBreakpoints;
- (id)sdefSupport_fileBreakpoints;
- (id)sdefSupport_breakpoints;

@end

@interface IDESourceControlCommandHandler : NSObject <IDECommandHandlerVendor, IDECommandHandler>
{
    id <IDESelectionSource> _selectionSource;
}

+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
@property(readonly) id <IDESelectionSource> selectionSource; // @synthesize selectionSource=_selectionSource;
- (void)quickCheckoutCommand:(id)arg1;
- (void)repositoriesCommand:(id)arg1;
- (void)refreshFileStatusCommand:(id)arg1;
- (void)goOnlineOfflineCommand:(id)arg1;
- (void)resolvedCommand:(id)arg1;
- (void)ignoreCommand:(id)arg1;
- (void)revertCommandAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)revertCommand:(id)arg1;
- (void)addCommand:(id)arg1;
- (void)updateSelectedFilesNoUICommand:(id)arg1;
- (void)updateSelectedFilesCommand:(id)arg1;
- (void)updateBeforeCommitAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)askToUpdateBeforeCommittingSelectedFilePaths:(id)arg1;
- (void)_commitSelectedFilePaths:(id)arg1;
- (void)commitSelectedFilesCommand:(id)arg1;
- (void)updateAllCommand:(id)arg1;
- (void)performSourceControlUpdateForFiles:(id)arg1;
- (void)updateFilesNoUI:(id)arg1;
- (void)updateFiles:(id)arg1;
- (void)mergeBranchesCommand:(id)arg1;
- (void)pushCommand:(id)arg1;
- (void)updateCommand:(id)arg1;
- (void)commitCommand:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)filePathsOfSelectedItems;
- (id)selectedNavigableItemArchivableRepresentations;
- (void)displayError:(id)arg1;
- (id)workspace;
- (id)workspaceDocument;
- (id)_initWithSelectionSource:(id)arg1;

@end

@interface IDEEditorContents : NSObject
{
    NSArray *_historyStacks;
    long long _selectedIndex;
}

@property(readonly) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(readonly) NSArray *historyStacks; // @synthesize historyStacks=_historyStacks;
- (id)description;
@property(readonly) IDEEditorHistoryStack *selectedHistoryStack;
- (id)initWithHistoryStacks:(id)arg1 selectedIndex:(long long)arg2;

@end

@interface IDEEditorHistoryStack : NSObject
{
    NSArray *_previousHistoryItems;
    NSArray *_nextHistoryItems;
    IDEEditorHistoryItem *currentHistoryItem;
}

@property(readonly) IDEEditorHistoryItem *currentEditorHistoryItem; // @synthesize currentEditorHistoryItem=currentHistoryItem;
@property(readonly) NSArray *nextHistoryItems; // @synthesize nextHistoryItems=_nextHistoryItems;
@property(readonly) NSArray *previousHistoryItems; // @synthesize previousHistoryItems=_previousHistoryItems;
- (id)description;
- (id)initWithCurrentEditorHistoryItem:(id)arg1 previousHistoryItems:(id)arg2 nextHistoryItems:(id)arg3;
- (id)initWithCurrentEditorHistoryItem:(id)arg1;

@end

@interface IDEIgnoredImageView : NSImageView
{
}

- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;

@end

@interface IDEWelcomeWindowController : NSWindowController <NSWindowRestoration>
{
    NSArrayController *_projectsArrayController;
    DVTTableView *_projectsTableView;
    NSTableColumn *_tableColumn;
    IDEWelcomeWindowHighlightButton *_newProjectAssistantButton;
    IDEWelcomeWindowHighlightButton *_sourceControlButton;
    IDEWelcomeWindowHighlightButton *_openToolsDocsButton;
    IDEWelcomeWindowHighlightButton *_openDevCenterDocsButton;
    NSTextField *_newProjectAssistantButtonTitle;
    NSTextField *_sourceControlButtonTitle;
    NSTextField *_openToolsDocsButtonTitle;
    NSTextField *_openDevCenterDocsButtonTitle;
    NSTextField *_newProjectAssistantButtonDescription;
    NSTextField *_sourceControlButtonDescription;
    NSTextField *_openToolsDocsButtonDescription;
    NSTextField *_openDevCenterDocsButtonDescription;
    IDEIgnoredImageView *_welcomeIconsView;
    IDEIgnoredImageView *_backgroundImageView;
    NSImageView *_welcomeToXcodeAccessibilityProxy;
}

+ (void)_someOtherWindowWasOpened:(id)arg1;
+ (void)_docWindowWillClose:(id)arg1;
+ (void)_addDocWindowNotificationObservers:(id)arg1;
+ (void)_removeDocWindowNotificationObservers;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (BOOL)_canCoexistWithWindow:(id)arg1;
+ (id)sharedWelcomeWindowController;
+ (void)initialize;
@property NSArrayController *projectsArrayController; // @synthesize projectsArrayController=_projectsArrayController;
- (void)_windowDidBecomeKeyOrMain:(id)arg1;
- (void)_addWindowNotificationObservers;
- (void)_removeWindowNotificationObservers;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)openDevCenterDocs:(id)arg1;
- (void)openToolsDocs:(id)arg1;
- (void)openSourceControl:(id)arg1;
- (void)openNewProjectAssistant:(id)arg1;
- (void)openSelected:(id)arg1;
- (void)closeWelcomeWindow:(id)arg1;
- (void)runOpenPanel:(id)arg1;
- (void)openWelcomeWindowIfAppropriate:(id)arg1;
- (void)openWelcomeWindow:(id)arg1;
- (void)_openWelcomeWindowWithAutoCloseEnabled:(BOOL)arg1;
- (void)showWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)windowWillLoad;
@property(readonly) NSString *xcodeVersion;

@end

@interface IDEWelcomeWindowLozengeView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEWelcomeWindowHighlightButtonCell : NSButtonCell
{
    BOOL _mouseOver;
    BOOL _mouseDown;
    BOOL _external;
}

+ (id)_externalImage;
+ (id)_internalImage;
@property BOOL external; // @synthesize external=_external;
@property BOOL mouseOver; // @synthesize mouseOver=_mouseOver;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEWelcomeWindowHighlightButton : NSButton
{
    NSTrackingArea *_trackingArea;
}

@property BOOL external;
- (id)hitTest:(struct CGPoint)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)isFlipped;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)updateTrackingAreas;

@end

@interface IDEWelcomeWindowRecent : NSObject <NSCopying>
{
    NSURL *_url;
}

+ (id)_descriptionForLastOpenedDate:(id)arg1 isLastOpenedDate:(BOOL)arg2;
+ (id)recentsForURLs:(id)arg1;
@property(readonly) NSString *lastOpenedDate;
@property(readonly) NSString *truncatedPath;
@property(readonly) NSString *name;
@property(readonly) NSImage *image;
@property(readonly) NSURL *url;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface IDEWelcomeWindowTableCell : NSCell
{
}

+ (struct CGRect)_frameForSubTitle:(id)arg1 withImageFrame:(struct CGRect)arg2 cellFrame:(struct CGRect)arg3 titleFrame:(struct CGRect)arg4;
+ (struct CGRect)_frameForTitle:(id)arg1 withImageFrame:(struct CGRect)arg2 cellFrame:(struct CGRect)arg3;
+ (struct CGRect)_imageFrameWithCellFrame:(struct CGRect)arg1;
+ (id)_subTitleParagraphStyle;
+ (id)_titleParagraphStyle;
- (id)stringValue;
- (unsigned long long)type;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_attributedSubTitleWithString:(id)arg1 usingHighlight:(BOOL)arg2;
- (id)_attributedTitleUsingHighlight:(BOOL)arg1;
- (BOOL)_shouldUseHighlightInView:(id)arg1;
- (id)_fullSubTitle;
- (id)_subTitle;
- (id)_title;
- (id)_image;
- (id)_recent;
- (void)setObjectValue:(id)arg1;

@end

@interface IDEEditorDocumentPreviewProvider : NSObject <DVTInvalidation>
{
    IDENavigableItem *_navigable;
    IDEEditorDocument<DVTTextReplacable> *_document;
    IDEEditorDocument<DVTTextReplacable> *_preview;
    double _branchTime;
    NSArray *_allResults;
    NSIndexSet *_replaceResultsIndexSet;
    NSString *_replacementString;
    NSArray *_documentLocations;
    NSArray *_previewLocations;
    NSPointerArray *_originalRowViewCache;
    NSPointerArray *_previewRowViewCache;
    NSURL *_url;
    DVTDispatchLock *_cacheLock;
    DVTStackBacktrace *_invalidationBacktrace;
    IDEWorkspaceDocument *_workspaceDocument;
    BOOL _isInvalidated;
    BOOL _disclosed;
}

+ (double)minimumRowHeight;
+ (id)performanceLogAspect;
+ (struct dispatch_queue_s *)populationQueue;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL disclosed; // @synthesize disclosed=_disclosed;
@property DVTDispatchLock *cacheLock; // @synthesize cacheLock=_cacheLock;
@property(copy) NSIndexSet *replaceResultsIndexSet; // @synthesize replaceResultsIndexSet=_replaceResultsIndexSet;
@property NSString *replacementString; // @synthesize replacementString=_replacementString;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(readonly) IDENavigableItem *batchFindNavigable; // @synthesize batchFindNavigable=_navigable;
- (void)didReplaceFindResults;
- (void)willReplaceFindResults;
- (void)updateSelectedLocation:(id)arg1 forView:(id)arg2 atIndex:(long long)arg3 preview:(BOOL)arg4;
- (double)minimumHeightForRowAtIndex:(long long)arg1 withWidth:(double)arg2;
- (id)generateViewWithRect:(struct CGRect)arg1;
- (void)populateView:(id)arg1 forPreviewAtIndex:(long long)arg2;
- (void)populateView:(id)arg1 forDocumentAtIndex:(long long)arg2;
- (void)invalidatePreview;
- (void)setupPreview;
- (void)_editorDocumentDidChangeNote:(id)arg1;
- (void)_removeDocumentDidChangeObservation;
- (void)setupDocument;
- (void)updateReplacementsInPreview;
@property(readonly) NSArray *previewLocations;
@property(readonly) NSArray *originalLocations;
@property(readonly) NSArray *allResults;
@property(readonly) IDEEditorDocument<DVTTextReplacable> *preview; // @synthesize preview=_preview;
@property(readonly) IDEEditorDocument<DVTTextReplacable> *document; // @synthesize document=_document;
@property(readonly) long long rowCount;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
@property(readonly) NSImage *image;
@property(readonly) NSString *name;
- (id)initWithBatchFindGroupNavigableItem:(id)arg1 workspaceDocument:(id)arg2;

@end

@interface IDEIndexCompletionStrategy : DVTTextCompletionStrategy
{
}

- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 areDefinitive:(char *)arg3;
- (void)prepareForDocumentLocation:(id)arg1 context:(id)arg2;

@end

@interface IDEFrameworkFilePath : NSObject
{
    DVTFilePath *_filePath;
    NSString *_name;
    NSMutableArray *_childPathComponents;
    unsigned long long _frameworkFilePathType;
}

+ (id)structureNavigableItemForFrameworkURL:(id)arg1 inCoordinator:(id)arg2 inWorkspace:(id)arg3 error:(id *)arg4;
+ (id)_rootFrameworksFilePath;
+ (id)_allSDKFrameworksFilePaths;
+ (BOOL)isFrameworkURL:(id)arg1;
+ (id)keyPathsForValuesAffectingNavigableItem_documentType;
@property(copy) NSArray *childPathComponents; // @synthesize childPathComponents=_childPathComponents;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) IDETypeIdentifier *ideModelObjectTypeIdentifier;
- (id)navigableItem_conformanceString;
- (id)initWithFilePath:(id)arg1 name:(id)arg2 type:(int)arg3;
- (id)init;
- (id)_pathOfNamesForDescendantWithFilePath:(id)arg1;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;

@end

@interface IDEFrameworkFilePathDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDERoundToolbarButtonCell : NSButtonCell
{
    NSImage *_activeImage;
    NSImage *_inactiveImage;
    NSImage *_pressedImage;
    BOOL _mouseDown;
}

@property(copy) NSImage *pressedImage; // @synthesize pressedImage=_pressedImage;
@property(copy) NSImage *inactiveImage; // @synthesize inactiveImage=_inactiveImage;
@property(copy) NSImage *activeImage; // @synthesize activeImage=_activeImage;
- (struct CGSize)cellSize;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDERoundToolbarButton : NSButton
{
}

+ (id)toolbarButtonWithActiveImage:(id)arg1 inactiveImage:(id)arg2 pressedImage:(id)arg3 buttonType:(unsigned long long)arg4;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)isFlipped;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEOpenQuicklyTableView : DVTTableView
{
    id _becomeKeyNotificationObserver;
    id _resignKeyNotificationObserver;
}

- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (BOOL)acceptsFirstResponder;
- (void)viewWillMoveToWindow:(id)arg1;

@end

@interface IDEOpenQuicklySearchContext : NSObject
{
    IDEWorkspaceTabController *_workspaceTabController;
    NSString *_rawInput;
    NSString *_trimmedInput;
    NSString *_line;
    IDEOpenQuicklyMatchContext *_matchContext;
}

@property(readonly) IDEOpenQuicklyMatchContext *matchContext; // @synthesize matchContext=_matchContext;
@property(readonly) NSString *line; // @synthesize line=_line;
@property(readonly) NSString *trimmedInput; // @synthesize trimmedInput=_trimmedInput;
@property(readonly) NSString *rawInput; // @synthesize rawInput=_rawInput;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
- (id)description;
@property(readonly) IDEOpenQuicklyPattern *pattern;
- (id)initWithRawInput:(id)arg1 workspaceTabController:(id)arg2;

@end

@interface IDEOpenQuicklyMatchContext : NSObject
{
    NSString *_workspacePath;
    NSString *_input;
    NSString *_line;
    IDEOpenQuicklyPattern *_pattern;
}

@property(readonly) IDEOpenQuicklyPattern *pattern; // @synthesize pattern=_pattern;
@property(readonly) NSString *line; // @synthesize line=_line;
@property(readonly) NSString *workspacePath; // @synthesize workspacePath=_workspacePath;
- (id)description;
- (id)initWithWorkspacePath:(id)arg1 input:(id)arg2 line:(id)arg3;

@end

@interface IDEOpenQuicklyDataSource : NSObject
{
    NSMutableDictionary *_searchPathsToFlattenedContents;
    NSMutableDictionary *_searchPathsToObservers;
    long long _scanningOperationCount;
    long long contentMode;
}

+ (id)keyPathsForValuesAffectingScanning;
+ (void)THREAD_exploreURL:(id)arg1 mode:(long long)arg2 candidateMatchPath:(id)arg3 displayPath:(id)arg4 exploredURLs:(id)arg5 fileManager:(id)arg6 updateBlock:(id)arg7;
+ (id)sharedUserAbsolutePathDataSource;
+ (id)sharedSDKHeaderDataSource;
@property long long scanningOperationCount; // @synthesize scanningOperationCount=_scanningOperationCount;
@property(readonly, getter=isScanning) BOOL scanning;
- (id)observeSearchPaths:(id)arg1 observeInitalValue:(BOOL)arg2 withObservationHandler:(id)arg3;
- (id)matchesForResults:(id)arg1 inContext:(id)arg2;
- (id)flattenedContentsForSearchPath:(id)arg1;
- (void)addSearchPaths:(id)arg1;
- (void)notifyObserversOfSearchPath:(id)arg1 ofResults:(id)arg2;
- (void)explorePath:(id)arg1 updateBlock:(id)arg2;
- (id)initWithContentMode:(long long)arg1;

@end

@interface IDEOpenQuicklyMatch : NSObject <NSCopying>
{
    NSString *_matchedCandidate;
    DVTDocumentLocation *_location;
}

@property(readonly) NSString *matchedCandidate; // @synthesize matchedCandidate=_matchedCandidate;
- (double)scoreGivenMatchContext:(id)arg1;
- (int)matchTypeGivenMatchContext:(id)arg1;
- (id)matchURLGivenMatchContext:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToOpenQuicklyMatch:(id)arg1;
- (id)locationGivenMatchContext:(id)arg1;
- (id)standardizedFileURLGivenMatchContext:(id)arg1;
- (id)displayPathGivenMatchContext:(id)arg1;
@property(readonly) NSImage *image;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLocation:(id)arg1 matchedCandidate:(id)arg2;
- (id)initWithMatchedCandidate:(id)arg1;

@end

@interface IDEOpenQuicklyMatchCell : NSActionCell
{
    IDEOpenQuicklyMatchContext *_matchContext;
    NSImage *_image;
}

+ (struct CGRect)_frameForSubtitleWithImageFrame:(struct CGRect)arg1 titleFrame:(struct CGRect)arg2;
+ (struct CGRect)_frameForTitleWithImageFrame:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2;
+ (struct CGRect)_imageFrameWithCellFrame:(struct CGRect)arg1;
+ (id)_subtitleAttributesUsingHighlight:(BOOL)arg1;
+ (id)_titleAttributesUsingHighlight:(BOOL)arg1;
+ (id)_paragraphStyle;
@property IDEOpenQuicklyMatchContext *matchContext; // @synthesize matchContext=_matchContext;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_attributedSubtitleUsingHighlight:(BOOL)arg1;
- (id)_attributedTitleUsingHighlight:(BOOL)arg1;
- (BOOL)_shouldUseHighlightInView:(id)arg1;
- (id)_subtitle;
- (id)_formatDisplayPath:(id)arg1;
- (id)_titleWithAttributes:(id)arg1;
- (id)_image;
- (id)location;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)_match;
- (void)setObjectValue:(id)arg1;
- (void)_dropCaches;

@end

@interface IDEOpenQuicklyQuery : NSObject
{
    NSArray *_matchProviders;
    NSArray *_observationTokens;
    IDEOpenQuicklySearchContext *_context;
    id <DVTObservingToken> _trimmedInputObservingToken;
    NSArray *_matches;
    NSArray *_providerClasses;
    DVTDelayedValidator *_matchValidator;
    id <IDEOpenQuicklyQueryDelegate> _delegate;
    BOOL _ignoreUpdates;
    BOOL _idle;
}

+ (id)unscopedProviderClasses;
+ (id)scopedProviderClasses;
@property id <IDEOpenQuicklyQueryDelegate> delegate; // @synthesize delegate=_delegate;
@property(getter=isIdle) BOOL idle; // @synthesize idle=_idle;
@property(copy) NSArray *matches; // @synthesize matches=_matches;
@property IDEOpenQuicklySearchContext *context; // @synthesize context=_context;
- (void)validateMatchesImmediately;
- (void)validateMatches:(id)arg1;
- (id)sortedTopMatches:(long long)arg1;
- (void)invokeBlockWithScoredMatches:(id)arg1;
- (long long)totalNumberOfMatches;
- (BOOL)_allMatchProvidersAreIdle;
- (id)initWithProviderClasses:(id)arg1;

@end

@interface IDEOpenQuicklyBoolToProgressValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface IDEOpenQuicklyWindowController : NSWindowController <IDEOpenQuicklyQueryDelegate, NSTableViewDelegate>
{
    DVTScopeBarView *_scopeBarView;
    DVTSearchField *_searchField;
    NSArrayController *_arrayController;
    IDEOpenQuicklyTableView *_tableView;
    DVTBorderedView *_pathControlBorderedView;
    NSPathControl *_pathControl;
    NSButton *_okButton;
    NSTextField *_scanningLabel;
    NSProgressIndicator *_scanningProgressIndicator;
    NSURL *_selectedURL;
    NSMutableArray *_bindingTokens;
    IDEWorkspaceTabController *_workspaceTabController;
    IDEOpenQuicklyQuery *_query;
    BOOL _scoped;
    BOOL _runningModal;
    BOOL _windowClosed;
}

+ (int)_skipPanelBehavior;
+ (BOOL)_openLocation:(id)arg1 forInput:(id)arg2 forWorkspaceTabController:(id)arg3 scoped:(BOOL)arg4;
+ (BOOL)_openLocation:(id)arg1 forWorkspaceTabController:(id)arg2 scoped:(BOOL)arg3;
+ (BOOL)_workspace:(id)arg1 containsContainerWithFilePath:(id)arg2;
+ (void)_addRecentInputString:(id)arg1;
+ (id)openQuicklyWindowController;
@property(copy) NSURL *selectedURL; // @synthesize selectedURL=_selectedURL;
@property IDEOpenQuicklyQuery *query; // @synthesize query=_query;
- (void)pathControlAction:(id)arg1;
- (void)tableDoubleClickAction:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)okAction:(id)arg1;
- (void)searchAction:(id)arg1;
- (void)_openSelectedMatchesClosingPanelIfSuccessful:(BOOL)arg1;
- (void)activeSpaceChanged:(id)arg1;
- (void)beginOpeningQuicklyScopped:(BOOL)arg1 feelingLucky:(BOOL)arg2;
- (void)_configureWindowForRunningScoped;
- (void)_registerForActiveSpaceChangedNotifications;
- (BOOL)_tryGettingLucky:(BOOL)arg1;
- (BOOL)_openMatches:(id)arg1;
- (BOOL)_openSingleMatch:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)_updateQueryString:(id)arg1 updateInterface:(BOOL)arg2;
- (void)openQuicklyQueryDidUpdate:(id)arg1;
- (void)_updateSelectedURL;
- (void)_captureQueryStringFromFrontmostEditor;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)windowWillClose:(id)arg1;
- (void)awakeFromNib;
- (id)_openWindowTerminationDisablingReason;

@end

@interface IDEActivityView : DVTLayerHostingView
{
    IDEActivityMultiActionIndicatorLayer *_multiActionIndicatorLayer;
    CALayer<IDEActivityClickableLayer> *_currentClickedLayer;
    IDEActivityPopUpBottomBarLayer *_popUpBottomBarLayer;
    IDEActivityReportLayer *_currentActivityReportLayer;
    NSImage *_cachedLCDImageBackgroundLayerContents;
    CAReplicatorLayer *_reportLayerSeparatorsLayer;
    CALayer *_reportLayerContainerLayer;
    CALayer *_lcdImageBackgroundLayer;
    CALayer *_containerLayer;
    long long _popUpState;
    IDEWorkspaceWindowController *_workspaceWindowController;
    id <DVTObservingToken> _activityReportManagerCompletedReportsObservingToken;
    id <DVTObservingToken> _activityReportManagerValidObservingToken;
    id <DVTInvalidation> _activityReportManagerObservingToken;
    NSMapTable *_strongReportLayersToStrongMinimumTimeTimers;
    NSMutableSet *_activityReportsUnderMinimumDisplayTime;
    NSMutableArray *_backgroundActivitiesLongerThanDelay;
    NSMapTable *_strongDelayedValidatorsByStrongReport;
    NSMapTable *_strongReportsToStrongReportLayers;
    NSMutableSet *_completedReportsToShowInPopUpAfterMinimumTimeHasExpired;
    IDEActivityReport *_activityReportDisplayingOnPopUpOpen;
    NSMutableArray *_orderedReportsInActivityPopUp;
    NSMutableSet *_completedReportsInPopUp;
    id _popUpLocalEventHandler;
    NSMapTable *_strongIssueCategoryToIssueCountByURLTable;
    IDEActivityIssuesContainerLayer *_issuesContainerLayer;
    id <DVTObservingToken> _containerLabelObservingToken;
    id <DVTObservingToken> _issueManagerObservingToken;
    id <DVTObservingToken> _issueObservingToken;
    IDEActivityIssueCategory *_warningsIssueCategory;
    IDEActivityIssueCategory *_analyzerIssueCategory;
    IDEActivityIssueCategory *_errorsIssueCategory;
    struct {
        unsigned int setup:1;
        unsigned int displayedReportIsCompleted:1;
        unsigned int issuesLayerWasMadeVisible:1;
        unsigned int forcedDisplayedReportUpdateIsScheduled:1;
        unsigned int _reserved:4;
    } _flags;
}

+ (struct CGSize)scaledSizeWithMaximumWidth:(double)arg1 forToolbarDisplayMode:(unsigned long long)arg2 sizeMode:(unsigned long long)arg3;
+ (struct CGSize)defaultSizeForToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;
@property IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
@property long long popUpState; // @synthesize popUpState=_popUpState;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)clickableLayerForEvent:(id)arg1;
- (id)clickableLayerAtPoint:(struct CGPoint)arg1;
- (void)openIssuesNavigator;
- (void)closeActivityPopUpWithAnimation:(BOOL)arg1;
- (void)openActivityPopUp;
- (void)setActivityViewHeight:(double)arg1;
- (void)stopMonitoringForEventsToClosePopUp;
- (BOOL)isMonitoringForEventsToCloseUp;
- (void)startMonitoringForEventsToClosePopUp;
- (void)updateActivityPopUp;
- (void)showCompletionStatusForCompletedReport:(id)arg1;
- (void)removeReportFromPopUp:(id)arg1;
- (void)addReportToPopUp:(id)arg1;
- (struct CGPoint)positionForContainerLayerGivenTransitionToExpandedState:(BOOL)arg1;
- (struct CGRect)boundsForContainerLayerGivenTransitionToExpandedState:(BOOL)arg1 popUpHeightHint:(double)arg2;
- (BOOL)inOrTransitioningToPopUpState:(long long)arg1;
- (void)cancelDisplayedReport:(id)arg1;
- (void)stopObservingActivityReports;
- (void)startObservingActivityReports;
- (void)updateMultiActionIndicator;
- (id)cachedLCDImageBackgroundLayerContents;
- (id)innerGlowShadow;
- (id)bottomHighlightShadow;
- (void)makeSureIssuesLayerIsVisible;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setupOrTearDown;
- (void)tearDown;
- (void)setup;
- (void)teardownLayers;
- (void)setupLayers;
- (struct CGColor *)activityViewPopUpBackgroundColorNoAlpha;
- (struct CGColor *)activityViewBorderCGColorNoAlpha;
- (struct CGRect)insetRootLayerBounds;
- (struct CGRect)reportLayerSeparatorsLayerFrame;
- (struct CGRect)popUpBottomBarLayerFrame;
- (struct CGRect)multiActionIndicatorLayerFrame;
- (struct CGRect)issuesContainerLayerFrame;
@property struct CGSize contentSize;
- (void)sizeToFitToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;
- (void)stopObservingIssues;
- (void)startObservingIssues;
- (void)updateIssuesForAllURLsWithIssues;
- (void)updateNumberOfIssuesForURL:(id)arg1;
- (id)issuesForDocumentURLOrSharedPlaceholderURL:(id)arg1;
- (id)activityViewLocalURLForIssueManagerURL:(id)arg1;
- (id)sharedPlaceholderURLForIssuesWithNoDocument;
- (void)setNumberOfIssues:(long long)arg1 forURL:(id)arg2 inCategory:(id)arg3;
- (long long)numberOfIssuesForURL:(id)arg1 inCategory:(id)arg2;
- (void)unschedulePendingForcedDisplayedReportUpdate;
- (void)scheduleForcedDisplayedReportUpdate;
- (id)orderedActivityReportsForPopUp;
- (void)chooseAndDisplayNextActivityReportOnOpeningPopUp;
- (void)chooseAndDisplayNextActivityReportAfterIdlePreDelay;
- (void)chooseAndDisplayNextActivityReportAfterReportCompleted;
- (void)chooseAndDisplayNextActivityReportAfterMinimumTimeExpiredOrDelayExpired;
- (void)chooseAndDisplayNextActivityReportAfterChangeInReports;
- (id)nextActivityReportToDisplay;
- (BOOL)hasReportMetDisplayDelay:(id)arg1;
- (void)delayedSetDisplayedReport:(id)arg1;
- (void)startDelayValidatorForReport:(id)arg1;
- (void)tryToDisplayReport:(id)arg1;
- (void)setDisplayedReport:(id)arg1;
- (id)activityReportLayerForReport:(id)arg1;
- (void)setActivityReportLayer:(id)arg1 forReport:(id)arg2;
- (void)stopAndRemoveMinimumDisplayTimeTimerForActivityReportLayer:(id)arg1;
- (void)startMinimumDisplayTimeTimerForActivityReportLayer:(id)arg1;
- (id)minimumDisplayTimeTimerForActivityReportLayer:(id)arg1;
- (void)minimumTimeTimerForActivityReportLayerDidExpire:(id)arg1;
- (void)minimumTimeForActivityReportLayerDidExpire:(id)arg1;
- (void)setHaveReachedMinimumDisplayTime:(BOOL)arg1 forActivityReportLayer:(id)arg2;
- (BOOL)haveReachedMinimumDisplayTimeForActivityReportLayer:(id)arg1;
@property(readonly) IDEActivityReport *displayedReport;
- (id)activityReports;
- (id)orderedActivityReports;
- (id)activityReportManager;
- (id)workspaceTabController;
- (id)workspace;
- (id)workspaceDocument;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)activityViewCommonInit;

@end

@interface IDEUtilityArea : IDEViewController <IDENavigableItemCoordinatorDelegate>
{
    DVTChooserView *_chooserView;
    DVTBorderedView *_borderedView;
    DVTStackView *_stackView;
    NSScrollView *_scrollView;
    DVTDisclosureView *_lastDisclosureView;
    DVTChoice *_selectedCategoryChoice;
    NSMapTable *_categoriesToChoices;
    NSMapTable *_sliceExtensionsToReplacementViews;
    NSMapTable *_sliceExtensionsToWrappingViews;
    NSMapTable *_installedSliceExtensionsToReplacementViews;
    NSMutableSet *_invalidReplacementViewExtensions;
    NSArray *_builtinCategories;
    DVTMutableOrderedSet *_userPreferredCategories;
    NSSet *_displayedSliceViewControllers;
    DVTDelayedValidator *_validator;
    DVTExtension *_displayedCategory;
    IDESelection *_content;
    id <DVTObservingToken> _installToken;
    id <DVTObservingToken> _forgotItemsNotificationToken;
    NSArray *_contentNavigableItems;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    IDEUtilityPlaceholderView *_placeholderView;
    IDEEditorDocument *_retainedDocument;
    id _retainedDocumentWillCloseNotificationToken;
    BOOL _openDocumentsChanged;
}

+ (id)utilityConfiguredDisclosureView;
+ (id)notApplicablePlaceholder;
+ (id)emptySelectionPlaceholder;
+ (id)defaultViewNibName;
@property(readonly) NSSet *displayedSliceViewControllers; // @synthesize displayedSliceViewControllers=_displayedSliceViewControllers;
@property(copy) NSArray *contentNavigableItems; // @synthesize contentNavigableItems=_contentNavigableItems;
@property(copy) NSArray *builtinCategories; // @synthesize builtinCategories=_builtinCategories;
@property(readonly) DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(readonly) DVTChooserView *chooserView; // @synthesize chooserView=_chooserView;
@property(readonly) DVTStackView *stackView; // @synthesize stackView=_stackView;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)invalidate;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_navigableItemCoordinatorDidForgetItems:(id)arg1;
- (void)workspaceWindowIsClosing;
- (void)loadView;
- (void)userSelectedCategoryChoiceFromMenu:(id)arg1;
- (void)chooserView:(id)arg1 userDidSelectChoices:(id)arg2;
- (void)noteUserDidExplicitlyChooseChoice:(id)arg1;
- (id)willReplaceSliceViewControllers:(SEL)arg1;
- (void)_rebuildCategoriesAndStack;
- (id)_preferredChoiceForChoices:(id)arg1;
- (void)_rebuildStackWithNavigableItems:(id)arg1;
- (void)_stackClippingViewFrameChanged:(id)arg1;
- (void)_updateLastDisclosureViewBorderColor;
- (void)invalidateStack;
- (id)_categoriesForNavigables:(id)arg1;
- (id)_editorContributedCategoryExtensionsForNavigable:(id)arg1;
- (id)_categoriesForCategoryIdentifiers:(id)arg1;
- (id)_categoryForCategoryIdentifier:(id)arg1;
- (id)choiceMatchingExtensionIdentifier:(id)arg1;
- (id)defaultChoice;
- (id)_choicesForCategories:(id)arg1;
- (id)_choiceForCategory:(id)arg1;
- (id)_sliceViewsForSliceExtensions:(id)arg1 inCategory:(id)arg2;
- (id)_cachedSliceViewForSliceExtension:(id)arg1 inCategory:(id)arg2;
- (id)_disclosureViewForWrappingReplacementView:(id)arg1 fromSliceExtension:(id)arg2;
- (id)_cachedReplacementViewForSliceExtension:(id)arg1 inCategory:(id)arg2;
- (void)dropCachedViewsForExtension:(id)arg1;
- (id)viewControllerForExtension:(id)arg1;
- (id)_currentlyInstalledReplacementViewForSliceExtension:(id)arg1;
- (id)navigableItemCoordinator:(id)arg1 editorDocumentForNavigableItem:(id)arg2;
- (void)dropRetainedDocument;
@property(readonly) IDESelection *content;
- (void)setContent:(id)arg1;
- (void)setSelectedCategoryChoices:(id)arg1;
- (id)selectedCategoryChoices;
@property(readonly) DVTChoice *selectedCategoryChoice;
- (void)setRepresentedObject:(id)arg1;
- (void)validateIfNeeded;
- (id)selectedCategory;
- (void)unbindReplacementView:(id)arg1 forSliceExtension:(id)arg2 inCategory:(id)arg3;
- (void)bindReplacementView:(id)arg1 forSliceExtension:(id)arg2 inCategory:(id)arg3;
- (id)placeholderStringForInputNavigableItems:(id)arg1 derivedItems:(id)arg2 inCategory:(id)arg3;
- (id)navigableItemsForInputNavigableItems:(id)arg1 inCategory:(id)arg2;
- (id)titleKeyPathForSliceExtension:(id)arg1;
- (id)titleForSliceExtension:(id)arg1;
- (id)toolTipForCategoryExtension:(id)arg1;
- (id)titleForCategoryExtension:(id)arg1;
- (id)imageForCategoryExtension:(id)arg1;
- (BOOL)categorySupportsMultipleSlices:(id)arg1;
- (id)sliceExtensionsForNavigableItems:(id)arg1 inCategory:(id)arg2 withWorkspaceDocument:(id)arg3;
- (id)categoryIdentifiersForEditorExtension:(id)arg1;
- (id)preferredCategoriesPersistenceKey;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEIssueAnnotationProvider : DVTAnnotationProvider <DVTMessageBubbleAnnotationDelegate>
{
    IDEAnnotationContext *_context;
    id <DVTObservingToken> _fileIssueObservingToken;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property IDEAnnotationContext *context; // @synthesize context=_context;
- (void)_rebuildAnnotations;
- (id)initWithContext:(id)arg1;
- (id)init;
- (void)didDeleteOrReplaceParagraphForAnnotation:(id)arg1;
- (void)_revealInIssueNavigator:(id)arg1;
- (double)sidebarMarkerOpacityForAnnotation:(id)arg1;
- (id)contextMenuItemsForAnnotation:(id)arg1 inTextSidebarView:(id)arg2;
- (BOOL)shouldMoveCursorForAnnotation:(id)arg1;
- (void)didClickAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didClickMessageBubbleForAnnotation:(id)arg1 onIcon:(BOOL)arg2 inTextView:(id)arg3 event:(id)arg4;

@end

@interface IDEBuildIssueAnnotation : DVTMessageBubbleAnnotation
{
}

+ (BOOL)scrollbarMarkerHighlight;
+ (BOOL)wantsScrollbarMarker;
+ (id)editedTheme;
+ (id)focusedTheme;
+ (id)normalTheme;
+ (id)sidebarIcon;
+ (unsigned long long)severity;
+ (double)precedence;
- (id)init;
- (id)annotationDisplayDescription;
- (id)annotationDisplayName;

@end

@interface IDEBuildIssueErrorAnnotation : IDEBuildIssueAnnotation
{
}

+ (BOOL)scrollbarMarkerHighlight;
+ (BOOL)wantsScrollbarMarker;
+ (id)editedTheme;
+ (id)focusedTheme;
+ (id)normalTheme;
+ (id)sidebarIcon;
+ (unsigned long long)severity;
+ (double)precedence;
- (id)annotationDisplayName;

@end

@interface IDEBuildIssueWarningAnnotation : IDEBuildIssueAnnotation
{
}

+ (BOOL)scrollbarMarkerHighlight;
+ (BOOL)wantsScrollbarMarker;
+ (id)editedTheme;
+ (id)focusedTheme;
+ (id)normalTheme;
+ (id)sidebarIcon;
+ (unsigned long long)severity;
+ (double)precedence;
- (id)annotationDisplayName;

@end

@interface IDEBuildIssueStaticAnalyzerResultAnnotation : IDEBuildIssueAnnotation
{
}

+ (BOOL)scrollbarMarkerHighlight;
+ (BOOL)wantsScrollbarMarker;
+ (id)editedTheme;
+ (id)focusedTheme;
+ (id)normalTheme;
+ (id)sidebarIcon;
+ (double)precedence;
- (id)annotationDisplayName;

@end

@interface IDEBuildIssueStaticAnalyzerWarningAnnotation : IDEBuildIssueAnnotation
{
}

+ (BOOL)scrollbarMarkerHighlight;
+ (BOOL)wantsScrollbarMarker;
+ (id)editedTheme;
+ (id)focusedTheme;
+ (id)normalTheme;
+ (id)sidebarIcon;
+ (double)precedence;
- (id)annotationDisplayName;

@end

@interface IDEActivityProgressIndicatorLayer : CALayer
{
    CABasicAnimation *_indeterminateDiagonalsAnimation;
    unsigned long long _progressStyle;
    NSImage *_indeterminateDiagonalsLayerContents;
    CALayer *_indeterminateDiagonalsLayer;
    CALayer *_indeterminateContainerLayer;
    CALayer *_progressContainerLayer;
    NSImage *_containerLayerContents;
    NSImage *_progressLayerContents;
    NSImage *_shadowLayerContents;
    CALayer *_containerLayer;
    CALayer *_progressLayer;
    CALayer *_shadowLayer;
    double _doubleValue;
    double _minValue;
    double _maxValue;
    struct {
        unsigned int indeterminate:1;
        unsigned int willGoBackwards:1;
        unsigned int _reserved:6;
    } _flags;
}

+ (id)defaultActionForKey:(id)arg1;
+ (void)initialize;
@property unsigned long long progressStyle; // @synthesize progressStyle=_progressStyle;
@property double maxValue; // @synthesize maxValue=_maxValue;
@property double minValue; // @synthesize minValue=_minValue;
@property double doubleValue; // @synthesize doubleValue=_doubleValue;
- (void)updateProgressLayer;
- (void)reflectStyle;
- (struct CGRect)effectiveProgressLayerBounds;
- (struct CGRect)effectiveProgressContainerLayerBounds;
- (struct CGPoint)effectiveProgressContainerLayerPosition;
- (id)effectiveIndeterminateDiagonalsLayerContents;
- (id)effectiveContainerLayerContents;
- (id)effectiveShadowLayerContents;
- (id)effectiveInnerShadow;
- (id)effectiveProgressLayerContents;
- (id)effectiveProgressLayerGradient;
- (void)reflectIndeterminateState;
- (void)setupLayers;
- (void)setBounds:(struct CGRect)arg1;
- (void)setHidden:(BOOL)arg1;
@property(getter=isIndeterminate) BOOL indeterminate;
- (double)effectivePercentage;
- (id)init;
- (void)updateBoundValue;
- (id)dvtExtraBindings;

@end

@interface IDEActivityScrollingTextLayer : CALayer
{
    void *_lastUpdateContext;
    unsigned long long _activeTransactions;
    NSMutableArray *_textLayers;
    CALayer *_containerLayer;
    NSDictionary *_textAttributes;
    NSString *_textAlignmentMode;
    NSArray *_segments;
}

+ (void)initialize;
@property void *lastUpdateContext; // @synthesize lastUpdateContext=_lastUpdateContext;
@property(copy) NSString *textAlignmentMode; // @synthesize textAlignmentMode=_textAlignmentMode;
@property(copy) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
- (void)setStringSegments:(id)arg1 context:(void *)arg2 animateUpdate:(BOOL)arg3;
- (void)setStringValue:(id)arg1 context:(void *)arg2 animateUpdate:(BOOL)arg3;
@property(copy) NSString *stringValue;
- (void)setAttributedStringValue:(id)arg1 context:(void *)arg2 animateUpdate:(BOOL)arg3;
@property(copy) NSAttributedString *attributedStringValue;
- (id)attributedStringValueTruncatedToWidth:(double)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setupLayers;
- (void)updateTextLayer;
- (void)updateTextLayerWithContext:(void *)arg1 animateUpdate:(BOOL)arg2;
- (void)pushTextLayer:(id)arg1 context:(void *)arg2 animateUpdate:(BOOL)arg3;
- (void)clearTextLayerStack;
- (double)maximumTextWidth;
- (double)rowHeight;
- (id)effectiveAttributes;
- (void)updateBoundValue;
- (id)dvtExtraBindings;

@end

@interface _IDEKitPrivateClassForFindingBundle : NSObject
{
}

@end

@interface IDEActionButton : DVTGradientImageButton
{
    NSPopUpButtonCell *_popUpCell;
    NSMenu *_menu;
    struct CGSize _menuOffset;
    id _currentMenuSource;
    SEL _currentMenuSelector;
}

- (void)mouseDown:(id)arg1;
- (void)_runPopUp:(id)arg1;
- (void)setCurrentMenuSource:(id)arg1 selector:(SEL)arg2;
- (id)menu;
- (void)setMenu:(id)arg1;
- (struct CGSize)menuOffset;
- (void)setMenuOffset:(struct CGSize)arg1;

@end

@interface IDEEditorMenuStepperView : IDEEditorStepperView
{
    IDEActionButton *_actionButton;
    id <IDEEditorMenuStepperViewDelegate> _delegate;
}

+ (id)keyPathsForValuesAffectingCanMove;
@property id <IDEEditorMenuStepperViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setGradientStyle:(int)arg1;
- (void)selectPrevious:(id)arg1;
- (void)selectNext:(id)arg1;
- (BOOL)canMove;
- (id)menuForActionButton;
- (struct CGSize)centerViewSizeInHeight:(double)arg1;
- (id)newCenterView;
@property NSImage *image;

@end

@interface _IDEEditorStepperTextCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)initTextCell:(id)arg1;

@end

@interface IDEEditorNumberStepperView : IDEEditorStepperView
{
    NSTextField *_countTextField;
}

+ (id)_countTextField;
- (struct CGSize)centerViewSizeInHeight:(double)arg1;
- (id)newCenterView;

@end

@interface _IDEIssueDocumentURL : NSObject
{
    NSURL *_url;
    unsigned long long _severity;
    DVTFileDataType *_type;
}

@property(readonly) DVTFileDataType *dataType; // @synthesize dataType=_type;
@property(readonly) unsigned long long severity; // @synthesize severity=_severity;
@property(readonly) NSURL *url; // @synthesize url=_url;
- (id)initWithURL:(id)arg1 severity:(unsigned long long)arg2;

@end

@interface _IDEEditorIssueMenuImageRepository : NSObject
{
    NSMapTable *_imageMap;
}

- (id)imageForIssueDocumentURL:(id)arg1;
- (id)init;

@end

@interface IDEEditorIssueMenuController : NSObject <IDEEditorMenuStepperViewDelegate, NSMenuDelegate>
{
    IDEIssueManager *_issueManager;
    IDEEditorContext *_editorContext;
    IDEEditorMenuStepperView *_issueMenuView;
    id <DVTObservingToken> _issueManagerObservingToken;
    id <DVTObservingToken> _issueObservingToken;
    id <DVTObservingToken> _editorDocumentObservingToken;
    unsigned long long _maxSeverity;
    NSMenu *_menu;
    NSURL *_selectedDocumentURL;
    IDEIssue *_selectedIssue;
    _IDEEditorIssueMenuImageRepository *_imageRepo;
    BOOL _issuesNeedUpdate;
    BOOL _canMove;
    BOOL _canMoveToFixIt;
    BOOL _showIssueMenuController;
}

@property BOOL showIssueMenuController; // @synthesize showIssueMenuController=_showIssueMenuController;
- (void)selectPreviousFixIt;
- (void)selectNextFixIt;
- (void)selectPrevious;
- (void)selectNext;
- (void)_navigateToIssueForward:(BOOL)arg1 byFile:(BOOL)arg2 byFixIt:(BOOL)arg3 fix:(BOOL)arg4;
- (BOOL)canMoveToFixIt;
- (BOOL)canMove;
- (id)menuForStepperView;
- (void)editorNavigatedToAnnotationRepresentedObject:(id)arg1;
- (void)_issueMenuAction:(id)arg1;
- (void)_navigateToIssue:(id)arg1 fixIt:(BOOL)arg2;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_updateIssueMenuViewVisibility;
- (id)issueMenuView;
- (void)_updateIssues;
- (void)_issuesNeedUpdate;
- (id)initWithEditorContext:(id)arg1;
- (void)_setIssueManager:(id)arg1;

@end

@interface IDEActionForwardingResponder : NSResponder
{
}

- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)__dummyActionMethod:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)targetForAction:(SEL)arg1;
- (id)findTargetForAction:(SEL)arg1 inResponderChainOfResponder:(id)arg2;

@end

@interface IDEFileInspectorCategoryController : IDEInspectorCategoryController
{
    NSSet *_fileInspectorExtensions;
}

- (id)presentationOrderForInspectors:(id)arg1;
- (id)extensionMatchedInspectorsForInspectedNavigables:(id)arg1 withWorkspaceDocument:(id)arg2;
- (id)documentExtensionIDsForInspectedNavigables:(id)arg1 withWorkspaceDocument:(id)arg2;
- (BOOL)extension:(id)arg1 matchesFileDataTypes:(id)arg2 documentExtensionIdentifier:(id)arg3;
- (id)navigableItemsForInputNavigableItems:(id)arg1;
- (id)fileInspectorExtensions;
- (id)fileTypesForInspectedNavigables:(id)arg1;

@end

@interface IDEInspectorCategoryController : NSObject
{
    DVTExtension *_category;
    NSArray *_inspectorExtensions;
}

@property(readonly) DVTExtension *category; // @synthesize category=_category;
@property(readonly) BOOL supportsDocumentUndo;
- (id)placeholderStringForInputNavigableItems:(id)arg1 derivedItems:(id)arg2;
- (BOOL)inspectsEditorContent;
- (id)navigableItemsForInputNavigableItems:(id)arg1;
- (id)inspectorsForInspectedNavigables:(id)arg1 withWorkspaceDocument:(id)arg2;
- (id)presentationOrderForInspectors:(id)arg1;
- (id)representedObjectMatchedInspectors:(id)arg1 navigables:(id)arg2;
- (id)extensionMatchedInspectorsForInspectedNavigables:(id)arg1 withWorkspaceDocument:(id)arg2;
- (id)_typeMatchedInspectorsForTypeIdentifier:(id)arg1;
- (id)_inspectorExtensions;
- (id)initWithCategoryExtension:(id)arg1;

@end

@interface IDESCMActivityReporter : IDEActivityReporter
{
    IDEActivityReport *_scmActivityReport;
    NSImage *_scmImage;
    id <DVTObservingToken> _scmMonitorObservingToken;
    id _fileIOCoordinatorBlock;
    id _willScanToken;
    id _didScanToken;
    id _willUpdateToken;
    id _didUpdateToken;
    id _willCommitToken;
    id _didCommitToken;
    id _willMergeToken;
    id _didMergeToken;
    id _willSwitchToken;
    id _didSwitchToken;
    id _willUpdateServerStatusToken;
    id _didUpdateServerStatusToken;
}

+ (void)initialize;
- (void)publishActivityReport;
- (void)setUpSCMObserving;
- (void)createWorkspaceScanningActivityReport;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEWorkspaceActivityReporter : IDEActivityReporter
{
    id <DVTObservingToken> _activityObserverToken;
    id <DVTObservingToken> _workspaceNameObserverToken;
    IDEActivityReport *_activeReport;
}

+ (void)initialize;
- (id)_title;
- (void)updateActivity;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEBuildSystemActivityReporter : IDEActivityReporter
{
    id <DVTObservingToken> _curBuildOpObserver;
    id <DVTObservingToken> _buildOpProgressObserver;
    id <DVTObservingToken> _buildOpStatusObserver;
    IDEActivityReport *_activeBuildOperationReport;
    IDEScheme *_activeBuildOperationRunContext;
    IDEBuildOperation *_activeBuildOperation;
    NSString *_lastShownBuildable;
    IDEBuildOperationStatus *_buildStatusToUpdateUIWithAfterTimerExpires;
    NSTimer *_uiRefreshTimer;
}

+ (void)initialize;
- (void)updateActivityReports;
- (void)refreshUIIfNeeded:(id)arg1;
- (void)updateActiveBuildOperationReportWithBuildStatus:(id)arg1;
- (BOOL)shouldShowFileProgressString:(id)arg1 givenBuildableString:(id)arg2;
- (id)completionSummaryStringSegmentsForBuildOperation:(id)arg1 runContext:(id)arg2;
- (id)attributedResultStringForBuildOperation:(id)arg1;
- (id)nonFailedBuildTextAttributes;
- (id)buildFailedTextAttributes;
- (id)operationStringForPurpose:(int)arg1 schemeCommand:(id)arg2;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDECleanBuildFolderActivityReporter : IDEActivityReporter
{
    id <DVTObservingToken> _isCleaningObserver;
}

+ (void)initialize;
- (id)initWithWorkspace:(id)arg1;
- (void)updateActivityReports;
- (id)completionSummaryStringSegments;

@end

@interface IDEDeviceActivityReporter : IDEActivityReporter
{
    NSMutableDictionary *_deviceToObservers;
    NSMutableDictionary *_deviceToReport;
    id _deviceObserver;
}

+ (void)initialize;
- (void)_observerDevice:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEIndexerActivityReporter : IDEActivityReporter
{
    id <DVTObservingToken> _workspaceIndexObservingToken;
    id _willIndexWorkspaceNotificationObservingToken;
    id _isIndexingWorkspaceNotificationObservingToken;
    id _didIndexWorkspaceNotificationObservingToken;
    IDEActivityReport *_workspaceActivityReport;
}

+ (void)initialize;
- (void)cancelActivityReport;
- (void)updateActivityReport:(id)arg1;
- (void)publishActivityReport;
- (void)setupIndexObserving;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEShareActivityReporter : IDEActivityReporter
{
}

+ (void)initialize;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEExecutionActivityReporter : IDEActivityReporter
{
    id <DVTObservingToken> _launchSessionsStateObserverToken;
    NSMapTable *_reportForLaunchSessionTable;
}

+ (void)initialize;
- (void)updateActivityReport:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEInspectorCombinedProperty : IDEInspectorProperty
{
    IDEInspectorProperty *leftProperty;
    IDEInspectorProperty *rightProperty;
}

- (void)loadView;
- (struct CGRect)frameForLabel:(id)arg1;
- (id)initWithLeftProperty:(id)arg1 andRightProperty:(id)arg2;

@end

@interface IDEInspectorNilToEmptyStringValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface IDEInspectorNilToZeroValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface IDEInspectorProperty : NSViewController
{
    NSObject<IDEBindableDeclarativeInspectorController> *inspectorController;
    NSXMLElement *propertyDefinition;
    NSArray *tearDownTokens;
}

+ (id)propertyWithDefinition:(id)arg1 andController:(id)arg2;
+ (Class)propertyClassForPropertyDefinition:(id)arg1;
+ (id)inspectorPropertyExtensionForTypeIdentifier:(id)arg1;
+ (id)inspectorPropertyExtensionPoint;
@property(retain) NSXMLElement *propertyDefinition; // @synthesize propertyDefinition;
@property(retain) NSObject<IDEBindableDeclarativeInspectorController> *inspectorController; // @synthesize inspectorController;
- (void)unbindAndTearDown;
- (id)bindAndConfigure;
- (void)configureAccessibilityForUIElement:(id)arg1 forAttribute:(id)arg2 withAppendedString:(id)arg3;
- (void)configureActionSelectorForControl:(id)arg1;
- (id)bindEditableKeyPathToControl:(id)arg1;
- (id)bindEnabledKeyPathToControl:(id)arg1;
- (id)valueTransformerDictionaryForAttributeNamed:(id)arg1;
- (id)valueTransformerForAttributeNamed:(id)arg1;
- (void)userDidChangeValue:(id)arg1;
- (id)representedObjectsForControllerSelectionKeyPath:(id)arg1;
- (id)keyPathByStripingControllerSelectionPrefix:(id)arg1;
- (BOOL)keyPathHasControllerSelectionPrefix:(id)arg1;
- (id)selectionControllerKeyFromKeyPath:(id)arg1;
- (id)stripPrefixKey:(id)arg1 fromKeyPath:(id)arg2;
- (id)keyPathByRemovingFirstKey:(id)arg1;
- (id)controllerKeyPathForAttributeNamed:(id)arg1;
- (BOOL)hasAttributeValueNamed:(id)arg1;
- (SEL)selectorAttributeValueNamed:(id)arg1 defaultValue:(SEL)arg2;
- (double)doubleAttributeValueNamed:(id)arg1 defaultValue:(double)arg2;
- (id)localizedStringAttributeValueNamed:(id)arg1 forElement:(id)arg2 defaultValue:(id)arg3;
- (id)localizedStringAttributeValueNamed:(id)arg1 defaultValue:(id)arg2;
- (id)localizedStringForKey:(id)arg1;
- (id)stringAttributeValueNamed:(id)arg1 defaultValue:(id)arg2;
- (id)colorForAttributeValueNamed:(id)arg1 defaultValue:(id)arg2;
- (BOOL)booleanAttributeValueNamed:(id)arg1 defaultValue:(BOOL)arg2;
- (long long)integerAttributeValueNamed:(id)arg1 defaultValue:(long long)arg2;
- (long long)integerAttributeValueNamed:(id)arg1 forElement:(id)arg2 defaultValue:(long long)arg3;
- (unsigned long long)unsignedIntegerAttributeValueNamed:(id)arg1 defaultValue:(unsigned long long)arg2;
- (unsigned long long)unsignedIntegerAttributeValueNamed:(id)arg1 forElement:(id)arg2 defaultValue:(unsigned long long)arg3;
- (double)baseline;
- (struct CGRect)frameForLabel:(id)arg1;
- (BOOL)canTileIntoColumnsWithWidth:(double)arg1;
- (BOOL)canTileIntoColumnsWithProperty:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)nibBundle;
- (id)nibName;
- (BOOL)isCustomProperty;
- (id)initWithPropertyDefinition:(id)arg1 andController:(id)arg2;

@end

@interface IDEDeclarativeInspectorGenerator : NSObject
{
}

+ (id)generateInspectorInterfaceFromFile:(id)arg1 boundTo:(id)arg2;
+ (id)generateInspectorInterfaceFromXMLElement:(id)arg1 boundTo:(id)arg2;
+ (id)generateInterfaceFromXMLElement:(id)arg1 boundTo:(id)arg2;
+ (id)inspectorXMLElementsFromIncludeElement:(id)arg1 boundTo:(id)arg2;
+ (id)parseInterfaceXMLDocumentFromFile:(id)arg1;
+ (id)sectionHeaderTitleViewWithTitle:(id)arg1;
+ (id)standardBorderedView;
+ (id)localizedStringForAttributeNamed:(id)arg1 inXMLElement:(id)arg2 fromInspectorController:(id)arg3;

@end

@interface IDEInspectorAttributedStringProperty : IDEInspectorProperty
{
    NSTextView *textView;
    NSScrollView *scrollView;
}

- (id)bindAndConfigure;
- (void)textDidChange:(id)arg1;
- (double)baseline;

@end

@interface IDEInspectorBooleanProperty : IDEInspectorProperty
{
    NSButton *checkbox;
    NSNumber *reflectedValue;
}

- (id)bindAndConfigure;
- (void)loadView;
- (id)reflectedValueForMixedStateBoolean;
- (void)setReflectedValueForMixedStateBoolean:(id)arg1;
- (id)reflectedValueForBitField;
- (void)setReflectedValueForBitField:(id)arg1;
- (void)userDidChangeValue:(id)arg1;
- (BOOL)allowsMixedState;
- (unsigned long long)bitMask;
- (unsigned long long)bits;
- (BOOL)isBitfield;
- (double)baseline;
- (BOOL)canTileIntoColumnsWithWidth:(double)arg1;

@end

@interface IDEInspectorColorPropertyCIColorValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface IDEInspectorColorProperty : IDEInspectorProperty
{
    NSColorWell *colorWell;
    NSTextField *label;
    DVTColorPopUpButton *popUpButton;
}

- (id)bindAndConfigure;
- (void)configurePopUpButton;
- (id)initialDefaultColor;
- (struct CGRect)frameForLabel:(id)arg1;
- (BOOL)canTileIntoColumnsWithWidth:(double)arg1;
- (void)loadView;
- (id)nibName;
- (double)baseline;

@end

@interface IDEInspectorDateProperty : IDEInspectorProperty
{
    NSDatePicker *datePicker;
}

- (id)bindAndConfigure;
- (double)baseline;
- (void)setMaxDate:(id)arg1;
- (void)setMinDate:(id)arg1;

@end

@interface IDEInspectorTextEnumerationProperty : IDEInspectorEnumerationProperty
{
    NSPopUpButton *popupButton;
    NSNumber *reflectedValue;
    NSMenuItem *nullPlaceholderItem;
    DVTDelayedValidator *contentValidator;
}

- (id)bindAndConfigure;
- (void)unbindAndTearDown;
- (id)configureForBitfield;
- (id)configureEnumeratedOptions;
- (void)popUpWillPopUp:(id)arg1;
- (void)rebuildMenuContent;
- (id)reflectedValue;
- (void)setReflectedValue:(id)arg1;
- (void)selectItemWithRepresentedObject:(id)arg1;
- (void)userDidChangeValue:(id)arg1;
- (unsigned long long)bitMask;
- (unsigned long long)selectedBits;
- (BOOL)isBitfield;
- (double)baseline;

@end

@interface IDEInspectorImageEnumerationProperty : IDEInspectorEnumerationProperty
{
    IDEInspectorResizableSegmentedControlView *resizableSegmentedControlView;
    NSSegmentedControl *segmentedControl;
    NSTextField *label;
}

- (id)bindAndConfigure;
- (void)configureAccessibility;
- (void)configureEnumeratedOptions;
- (id)nibName;
- (double)baseline;

@end

@interface IDEInspectorNumberProperty : IDEInspectorProperty
{
    NSTextField *textField;
    NSStepper *stepper;
    NSTextField *label;
    NSButton *checkbox;
    NSNumber *reflectedValue;
}

- (id)bindAndConfigure;
- (id)bindEditableKeyPathToControl:(id)arg1;
- (id)bindEnabledKeyPathToControl:(id)arg1;
- (id)reflectedValue;
- (void)setReflectedValue:(id)arg1;
- (void)toggleNilValue:(id)arg1;
- (void)setInitialCheckboxValue;
- (BOOL)allowsFloats:(id)arg1;
- (double)baseline;
- (BOOL)canTileIntoColumnsWithWidth:(double)arg1;
- (id)nibName;
- (long long)nilValueControlStateForNonNil;
- (long long)nilValueControlStateForNil;
- (BOOL)nilValueControlIsOffWhenNil;
- (BOOL)showsNilValueControl;
- (BOOL)isEnabled;
- (BOOL)isEditable;
- (BOOL)isIncremental;
- (BOOL)allowsNilValues;
- (double)increment;

@end

@interface IDEInspectorListProperty : IDEInspectorProperty
{
    NSComboBox *comboBox;
}

- (id)bindAndConfigure;
- (double)baseline;

@end

@interface IDEInspectorStringProperty : IDEInspectorProperty
{
}

+ (Class)propertyClassForPropertyDefinition:(id)arg1;

@end

@interface IDEInspectorCombinedPropertyView : IDEInspectorPropertyContainingView
{
    NSView *leftView;
    NSView *rightView;
    IDEInspectorProperty *leftProperty;
    IDEInspectorProperty *rightProperty;
}

@property IDEInspectorProperty *rightProperty; // @synthesize rightProperty;
@property IDEInspectorProperty *leftProperty; // @synthesize leftProperty;
@property NSView *rightView; // @synthesize rightView;
@property NSView *leftView; // @synthesize leftView;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (id)orderedInspectorProperties;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithLeftProperty:(id)arg1 rightProperty:(id)arg2;

@end

@interface IDEInspectorResizableSegmentedControlView : NSView
{
    NSSegmentedControl *segmentedControl;
}

- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)awakeFromNib;
- (void)sizeSegmentedControlToFit;
- (void)optimallySizeSegments;
- (double)autosizedSegmentWidthForSegment:(long long)arg1;

@end

@interface IDEInspectorSliverView : IDEInspectorPropertyContainingView
{
    DVTStackView *propertyStack;
    NSTextField *labelView;
    NSArray *properties;
    BOOL fullWidth;
}

+ (id)sliverForXMLElement:(id)arg1 boundTo:(id)arg2;
+ (id)sliverViewWithTitle:(id)arg1 andProperties:(id)arg2 fullWidth:(BOOL)arg3;
+ (id)labelWithTitle:(id)arg1;
- (id)orderedInspectorProperties;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (BOOL)isFlipped;
- (id)initWithTitle:(id)arg1 andProperties:(id)arg2;
- (id)initWithTitle:(id)arg1 andProperties:(id)arg2 fullWidth:(BOOL)arg3;
- (void)_invalidateLayoutBecauseOfPropertyStackFrameChange:(id)arg1;

@end

@interface IDEInspectorEnumerationProperty : IDEInspectorProperty
{
    NSNumber *unusedEnumerationValue;
}

+ (Class)propertyClassForPropertyDefinition:(id)arg1;
- (long long)unusedEnumerationValue;

@end

@interface IDEInspectorBasicStringProperty : IDEInspectorStringProperty
{
    NSTextField *textField;
}

- (id)bindAndConfigure;
- (id)bindEditableKeyPathToControl:(id)arg1;
- (id)textField;
- (double)baseline;
- (id)view;

@end

@interface IDENavigatorSCMStatusCell : NSActionCell
{
    NSString *_localStatus;
    NSString *_serverStatus;
    NSAttributedString *_localAttrString;
    NSAttributedString *_serverAttrString;
    BOOL _hidden;
}

+ (void)initialize;
@property BOOL hidden; // @synthesize hidden=_hidden;
- (struct CGSize)cellSize;
@property(copy) NSString *serverStatus;
@property(copy) NSString *localStatus;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_barrelPathInRect:(struct CGRect)arg1 leftBarrel:(BOOL)arg2 rightBarrel:(BOOL)arg3;
- (void)_drawStatusString:(id)arg1 inPathRect:(struct CGRect)arg2 view:(id)arg3;
- (id)_validateServerStatusAttributedString;
- (void)_clearServerStatusAttributedString;
- (id)_validateLocalStatusAttributedString;
- (void)_clearLocalStatusAttributedString;
- (id)init;

@end

@interface _IDEPathAndFileType : NSObject
{
    NSString *_pathString;
    DVTFileDataType *_fileDataType;
}

+ (id)pathAndFileTypeWithFileReference:(id)arg1 fileReferencePath:(id)arg2;
@property(readonly) DVTFileDataType *fileDataType; // @synthesize fileDataType=_fileDataType;
@property(readonly) NSString *pathString; // @synthesize pathString=_pathString;
- (id)documentLocation;
- (long long)caseInsensitiveCompare:(id)arg1;
- (id)description;
- (id)initwithPathString:(id)arg1 fileDataType:(id)arg2;

@end

@interface IDECounterpartsGeniusResultsFinder : IDEGeniusResultsFinder
{
    NSURL *_documentFileURL;
    DVTFileDataType *_documentFileDataType;
    BOOL _updateGeniusResults;
}

+ (id)_fileReferenceForFileURL:(id)arg1;
+ (BOOL)_isCSourceDataType:(id)arg1;
+ (BOOL)_isCHeaderDataType:(id)arg1;
+ (BOOL)_isSourceDataType:(id)arg1;
- (void)findGeniusResultsForEditorDocument:(id)arg1 selectedDocumentLocations:(id)arg2;
- (id)geniusResults;
- (void)_collectGeniusResultForFileReference:(id)arg1 fileReferencePath:(id)arg2 fileReferenceName:(id)arg3 toImmediateCounterparts:(id)arg4 associateCounterparts:(id)arg5 fileBaseName:(id)arg6 inputFolderPath:(id)arg7;

@end

@interface IDEEditorGeniusResults : NSObject <DVTInvalidation>
{
    DVTStackBacktrace *_invalidationBacktrace;
    IDEWorkspaceTabController *_workspaceTabController;
    IDENavigableItemCoordinator *_navItemCoordinator;
    IDEEditorDocument *_editorDocument;
    NSArray *_documentLocations;
    NSString *_editorDocumentIdentifier;
    DVTFileDataType *_fileDataType;
    NSArray *_finders;
    NSArray *_geniusCategories;
    NSDictionary *_geniusResults;
    unsigned long long _numberOfGeniusResults;
    NSArray *_geniusResultsObservingTokens;
    BOOL _isInvalidated;
    BOOL _ignoreGeniusResultsUpdates;
    BOOL _idle;
}

+ (BOOL)automaticallyNotifiesObserversOfGeniusResults;
+ (id)groupForGeniusCategory:(id)arg1;
+ (id)nameForGeniusCategory:(id)arg1;
+ (id)_geniusCategoryExtensions;
+ (id)useGeniusCategoryForEditorDocumentIdentifier:(id)arg1;
+ (BOOL)validGeniusCategory:(id)arg1 forEditorDocumentIdentifier:(id)arg2;
+ (id)_geniusCategoriesForFinderExtensions:(id)arg1;
+ (id)_finderExtensionsForEditorDocumentIdentifier:(id)arg1 fileDataType:(id)arg2;
+ (struct dispatch_queue_s *)indexRequestsQueue;
+ (void)initialize;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL idle; // @synthesize idle=_idle;
@property(readonly) unsigned long long numberOfGeniusResults; // @synthesize numberOfGeniusResults=_numberOfGeniusResults;
@property(readonly) NSDictionary *geniusResults; // @synthesize geniusResults=_geniusResults;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (BOOL)_updateGeniusResults;
- (void)_setGeniusResults:(id)arg1;
- (void)_breakIdleCoalescingOfGeniusResultsUpdates;
- (void)_doUpdateGeniusResults;
- (id)geniusCategories;
- (void)findGeniusResultsForEditorDocument:(id)arg1 editorDocumentExtension:(id)arg2 selectedDocumentLocations:(id)arg3;
- (void)_setForcedUpdateTimer;
- (void)_clearForcedUpdateTimer;
- (BOOL)_allGeniusFindersAreIdle;
- (id)description;
- (id)initWithWorkspaceTabController:(id)arg1 navigableItemCoordinator:(id)arg2;

@end

@interface IDEGeniusResultsFinder : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
    DVTExtension *_extension;
    IDEWorkspaceTabController *_workspaceTabController;
    IDENavigableItemCoordinator *_navItemCoordinator;
    IDEEditorDocument *_editorDocument;
    NSArray *_documentLocations;
    NSSet *_geniusResults;
    BOOL _idle;
}

+ (Class)editorDocumentClass;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL idle; // @synthesize idle=_idle;
@property(copy) NSSet *geniusResults; // @synthesize geniusResults=_geniusResults;
@property(readonly) NSArray *documentLocations; // @synthesize documentLocations=_documentLocations;
@property(readonly) IDEEditorDocument *editorDocument; // @synthesize editorDocument=_editorDocument;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property DVTExtension *extension; // @synthesize extension=_extension;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
@property(readonly) IDEWorkspace *workspace;
- (void)_updateGeniusResults;
- (void)_primitiveSetGeniusResults:(id)arg1;
- (void)findGeniusResultsForEditorDocument:(id)arg1 selectedDocumentLocations:(id)arg2;
- (id)_initWithWorkspaceTabController:(id)arg1 navigableItemCoordinator:(id)arg2;
- (id)init;

@end

@interface IDEIndexGeniusResultsFinder : IDEGeniusResultsFinder
{
    id _indexDidChangeNotificationObserver;
    DVTDispatchLock *_generationLock;
    unsigned long long _currentGeneration;
}

- (void)_updateGeniusResults;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(id *)arg1 phaseTwoBlock:(void)arg2 phaseThreeBlock:(id *)arg3;
- (void)invalidate;
- (id)_initWithWorkspaceTabController:(id)arg1 navigableItemCoordinator:(id)arg2;

@end

@interface IDEGeniusPackagedResults : NSObject
{
    NSArray *_geniusResults;
    NSString *_geniusCategory;
}

@property(readonly) NSString *geniusCategory; // @synthesize geniusCategory=_geniusCategory;
@property(readonly) NSArray *geniusResults; // @synthesize geniusResults=_geniusResults;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithGeniusResults:(id)arg1 geniusCategory:(id)arg2;
- (id)init;

@end

@interface IDEFileNavigableItem : IDENavigableItem
{
    id _document;
    NSImage *_image;
    id <DVTObservingToken> _documentObservingToken;
    BOOL _invalidatingTopLevelObjects;
}

- (id)textColor;
- (unsigned long long)indexOfChildItemForIdentifier:(id)arg1;
- (id)identifierForChildItem:(id)arg1;
- (id)childRepresentedObjects;
- (BOOL)isLeaf;
- (BOOL)isMajorGroup;
- (BOOL)isDocumentNavigableItem;
- (id)structureProvidingEditorDocument;
- (id)_editorDocument;
- (void)_updateEditorDocument:(id)arg1;
- (void)invalidateChildItems;
- (void)_documentDidClose;
- (void)dispose;
- (id)contentDocumentLocation;
@property(readonly) long long progress;
@property(readonly) DVTFileDataType *documentType;
@property(readonly) NSURL *fileURL;
- (id)image;
- (void)invalidateImage;
- (void)updateImage;
- (id)newImage;

@end

@interface IDEFileReferenceNavigableItem : IDEFileNavigableItem
{
    DVTDocumentLocation *_contentDocumentLocation;
    DVTFileDataType *_fileDataType;
    NSString *_name;
    NSString *_scmCurrentRevision;
    NSString *_scmLocalStatus;
    NSString *_scmServerStatus;
    struct {
        unsigned int _scmLocalStatusFlag:16;
        unsigned int _scmServerStatusFlag:16;
    } _scmStatusFlags;
    struct {
        unsigned int _needUpdateForSCMStatusFlag:1;
        unsigned int _needUpdateForContentDocumentLocation:1;
        unsigned int _conflictStateForUpdateOrMerge:2;
        unsigned int _reserved:28;
    } _ideFileRefNavItemflags;
}

+ (id)_createExtraInfoObject;
+ (void)editorDocumentDirtyStatusDidChange:(id)arg1;
+ (void)initialize;
- (unsigned long long)conflictStateForUpdateOrMerge;
- (id)sourceControlCurrentRevision;
- (id)sourceControlServerStatus;
- (int)sourceControlServerStatusFlag;
- (id)sourceControlLocalStatus;
- (int)sourceControlLocalStatusFlag;
- (void)updateSCMAttributesIfNeeded;
@property(readonly) NSColor *textColor;
- (id)newImage;
- (id)name;
- (id)documentType;
- (id)fileURL;
- (id)contentDocumentLocation;
- (id)fileReference;
- (void)updateChildRepresentedObjects;
- (void)updateAttributes;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDEContainerFileReferenceNavigableItem : IDEFileReferenceNavigableItem
{
    id _blueprintDidChangeNotificationObserver;
    id <DVTObservingToken> _activeBuildConfigurationObserver;
    NSString *_activeBuildConfigurationName;
    NSString *_containerSummary;
    NSString *_scmAggregateLocalStatus;
    NSString *_scmAggregateServerStatus;
    NSArray *_subitems;
    BOOL _isMajorGroup;
    BOOL _isRecursiveContainerReference;
}

+ (id)keyPathsForValuesAffectingContainerSummary;
+ (id)keyPathsForValuesAffectingAggregateSourceControlServerStatus;
+ (id)keyPathsForValuesAffectingAggregateSourceControlLocalStatus;
@property(readonly) NSString *containerSummary;
- (void)_ensureBlueprintNotificationHandlingIsConfigured;
- (id)_computeContainerSummaryForContainer:(id)arg1;
- (id)_activeBuildConfigurationName;
@property(readonly) NSString *aggregateSourceControlServerStatus;
@property(readonly) NSString *aggregateSourceControlLocalStatus;
- (void)updateAttributes;
- (long long)progress;
- (BOOL)coordinatorFilteringShouldFilterChildItems;
- (BOOL)_shouldResetChildItemsOnDocumentClose;
- (void)updateChildRepresentedObjects;
- (id)childRepresentedObjects;
- (BOOL)isMajorGroup;
- (BOOL)isLeaf;
- (void)_setParentItem:(id)arg1;
- (BOOL)isDocumentNavigableItem;
- (void)dispose;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDEDocumentFrameworkFilePathNavigableItem : IDEFileNavigableItem
{
}

- (BOOL)isMajorGroup;
- (id)contentDocumentLocation;
- (id)documentType;
- (id)fileURL;
- (id)image;
- (id)name;

@end

@interface IDEBaseDocumentNavigableItem : IDEFileNavigableItem
{
    id _dirtyNotificationToken;
}

- (void)_updateEditorDocument:(id)arg1;

@end

@interface IDEDocumentURLNavigableItem : IDEBaseDocumentNavigableItem
{
    DVTDocumentLocation *_contentDocumentLocation;
}

- (id)fileURL;
- (id)contentDocumentLocation;
- (id)documentType;
- (id)name;
- (id)newImage;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDEDocumentLocationNavigableItem : IDEBaseDocumentNavigableItem
{
}

- (id)fileURL;
- (id)contentDocumentLocation;
- (id)documentType;
- (id)name;
- (id)newImage;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDENavigator : IDEViewController <IDENavigableItemCoordinatorDelegate, IDEFilterControlBarTarget>
{
    IDENavigableItem *_rootNavigableItem;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    NSMutableDictionary *_cachedStateForParentViewController;
    NSView *_primaryFilterControl;
    NSPredicate *_filterPredicate;
    BOOL _filteringEnabled;
}

+ (BOOL)automaticallyNotifiesObserversOfRootNavigableItem;
+ (void)initialize;
@property NSMutableDictionary *cachedStateForParentViewController; // @synthesize cachedStateForParentViewController=_cachedStateForParentViewController;
@property IDENavigableItem *rootNavigableItem; // @synthesize rootNavigableItem=_rootNavigableItem;
@property NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property NSView *_primaryFilterControl; // @synthesize _primaryFilterControl;
@property(getter=isFilteringEnabled) BOOL filteringEnabled; // @synthesize filteringEnabled=_filteringEnabled;
- (void)revealNavigableItems:(id)arg1;
@property(readonly) NSString *filterDefinitionIdentifier;
- (BOOL)canBecomeMainViewController;
- (void)invalidate;
- (BOOL)makePrimaryFilterControlKey;
@property(readonly) NSString *filterButtonAccessibilityDescription;
@property(readonly) NSString *filterButtonToolTip;
@property(readonly) NSMenu *filterButtonMenu;
@property(readonly) NSString *domainIdentifier;
@property IDENavigableItemCoordinator *navigableItemCoordinator;
- (void)setOutputSelection:(id)arg1;
- (void)updateBoundSelection;
- (void)viewDidInstall;
- (void)updateBoundContent;
- (id)dvtExtraBindings;

@end

@interface IDEFilterControlBar : DVTBorderedView
{
    DVTSearchField *_searchField;
    id <IDEFilterControlBarTarget> _filterTarget;
    id _filterLeftButton;
    NSString *_filterDefinitionIdentifier;
}

@property(copy) NSString *filterDefinitionIdentifier; // @synthesize filterDefinitionIdentifier=_filterDefinitionIdentifier;
@property id <IDEFilterControlBarTarget> filterTarget; // @synthesize filterTarget=_filterTarget;
@property DVTSearchField *searchField; // @synthesize searchField=_searchField;
- (void)_didSetFilterTarget;
- (void)_willSetFilterTarget;
- (void)setUpFilterControls;
- (id)newToggleButtonWithParameters:(id)arg1;
- (id)filterDefinitionExtension;
@property(copy) NSMenu *searchMenuTemplate;
- (void)_updateSearchButtonCell;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDENavigatorFilterControlBar : IDEFilterControlBar
{
}

@property IDENavigator *navigator;
- (void)setFilterTarget:(id)arg1;
- (void)_didSetFilterTarget;
- (void)_willSetFilterTarget;

@end

@interface IDEFilterBarGradientImagePopUpButton : DVTGradientImagePopUpButton
{
}

+ (Class)cellClass;

@end

@interface IDEFilterBarGradientImagePopUpButtonCell : DVTGradientImagePopUpButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEBuildIssueStaticAnalyzerEventStepAnnotation : IDEBuildIssueAnnotation
{
    BOOL _isCurrentStep;
}

+ (id)_nonCurrentStepTheme;
+ (id)_currentStepTheme;
+ (id)sidebarIcon;
+ (double)precedence;
@property BOOL isCurrentStep; // @synthesize isCurrentStep=_isCurrentStep;
- (BOOL)isHighlightedRangesVisible;
- (id)currentStateInTextView:(id)arg1;
- (id)init;

@end

@interface IDECapsuleListView : DVTStackView <DVTStatefulObject>
{
    IDECapsuleView *_draggedView;
    id <IDECapsuleListViewDataSource> _dataSource;
    long long _dragDestinationIndex;
    NSTimer *_autoscrollTimer;
    NSColor *_backgroundColor;
    NSString *_emptyContentString;
    DVTStateToken *_stateToken;
    long long _selectedIndex;
    id _lastFirstResponder;
    BOOL _reloadAfterDrag;
    BOOL _restoringState;
    BOOL _togglingDisclosure;
    struct {
        unsigned int numberOfObjectsInCapsuleListView:1;
        unsigned int viewControllerForRow:1;
        unsigned int acceptDrop:1;
        unsigned int validateDrop:1;
        unsigned int writeRowWithIndex:1;
        unsigned int didCollapse:1;
        unsigned int didExpand:1;
        unsigned int didCompleteLayout:1;
    } _dataSourceRespondsTo;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)_subviewTopShadow;
+ (id)_subviewBottomShadow;
@property DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(copy) NSString *emptyContentString; // @synthesize emptyContentString=_emptyContentString;
@property NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property id <IDECapsuleListViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_setDisclosedIndexes:(id)arg1;
- (id)_disclosedIndexes;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (BOOL)_shouldFillEnclosingView;
- (BOOL)_dataSourceSupportsDragAndDrop;
- (struct CGPoint)_swapThresholdForViewRect:(struct CGRect)arg1 draggingDown:(BOOL)arg2;
- (id)_frameRectsOfRearrangedSubviews;
- (id)_rearrangedSubviewsWhileDragging;
@property(readonly) BOOL _isDragging;
- (BOOL)_isAnimatingSubview:(id)arg1;
- (BOOL)_isAnimationInProgress;
- (BOOL)_shouldAnimateLayout;
- (id)_animationForSubview:(id)arg1;
- (unsigned long long)_validateDropAtIndex:(long long)arg1 sender:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)_addBlockViewController:(id)arg1;
- (void)_subviewFrameChanged:(id)arg1;
- (void)_reloadSubviews;
- (void)capsuleViewToggledSelection:(id)arg1;
- (void)_updateSelectedIndex;
- (BOOL)_isMouseInCurrentEventOverSelf;
- (void)capsuleViewToggledDisclosure:(id)arg1;
- (void)scrollCapsuleViewToVisible:(id)arg1;
- (void)scrollRowToVisible:(long long)arg1;
- (id)capsuleViews;
- (long long)numberOfRows;
- (id)capsuleViewForCapsuleViewController:(id)arg1;
- (long long)rowForCapsuleView:(id)arg1;
- (id)capsuleViewAtRow:(long long)arg1;
- (void)didCompleteLayout;
- (void)reloadData;
- (void)layoutBottomUp;
- (void)_layoutBottomUpWithAnimation:(BOOL)arg1;
- (struct CGSize)sizeForPulledSubviewMagnitude:(double)arg1;
- (struct CGPoint)pushedOriginForSubview:(id)arg1 position:(double)arg2;
- (struct CGSize)pushedSizeForSubview:(id)arg1;
- (double)pulledSizeMagnitudeForSubview:(id)arg1;
- (BOOL)isTopToBottom;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)ignoreModifierKeysWhileDragging;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)mouseUp:(id)arg1;
- (void)_autoscrollTimerCallback:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)doCommandBySelector:(SEL)arg1;
- (void)keyDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEBlockScrollView : NSScrollView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface IDEInspectorChooserView : DVTAutoLayoutView
{
    NSArray *categories;
    NSPopUpButton *choicePopUp;
    NSDictionary *choicesByValue;
    IDEInspectorChooserChoice *defaultChoice;
    IDEInspectorChooserChoice *selectedChoice;
    IDEInspectorChooserChoice *nilChoice;
    NSView *selectedChoiceView;
    NSView *emptyChoiceView;
    NSMenuItem *defaultSeperator;
    NSMenuItem *specialMarkMenuItem;
    id selectedPrimitiveValue;
    NSTextField *labelView;
    BOOL disableWhenNil;
}

+ (id)chooserForXMLElement:(id)arg1 boundTo:(id)arg2;
+ (id)categoryForXMLElement:(id)arg1 choiceType:(id)arg2 owner:(id)arg3;
+ (id)choiceForXMLElement:(id)arg1 choiceType:(id)arg2 owner:(id)arg3;
+ (id)choiceValueForElement:(id)arg1 type:(id)arg2;
+ (void)initialize;
@property NSView *selectedChoiceView; // @synthesize selectedChoiceView;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (BOOL)isFlipped;
- (void)userMadeSelection:(id)arg1;
- (void)updateBoundValue;
- (id)viewForSelectedChoice;
- (id)dvtExtraBindings;
- (void)updateMenu;
- (id)categoryTitleAttributes;
- (void)_selectedChoiceViewFrameDidChange:(id)arg1;
- (id)initWithTitle:(id)arg1 categories:(id)arg2 defaultChoice:(id)arg3 nilChoice:(id)arg4 disableWhenNil:(BOOL)arg5 keyPath:(id)arg6;
- (void)configureAccessibilityForUIElement:(id)arg1 forAttribute:(id)arg2 keyPath:(id)arg3 withAppendedString:(id)arg4;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;

@end

@interface IDEInspectorChooserChoice : NSObject
{
    id viewInitializingBlock;
    IDEInspectorChooserCategory *category;
    NSMenuItem *menuItem;
    id <NSCopying> value;
    NSString *title;
    NSView *view;
}

@property IDEInspectorChooserCategory *category; // @synthesize category;
@property NSMenuItem *menuItem; // @synthesize menuItem;
@property(readonly) id <NSCopying> value; // @synthesize value;
@property(readonly) NSString *title; // @synthesize title;
@property(readonly) NSView *view; // @synthesize view;
- (id)initWithTitle:(id)arg1 value:(id)arg2 andView:(id)arg3;
- (id)initWithTitle:(id)arg1 value:(id)arg2 sliceXML:(id)arg3 inspector:(id)arg4;
- (id)initWithTitle:(id)arg1 value:(id)arg2 sliceXML:(id)arg3 inspectorController:(id)arg4;

@end

@interface IDEInspectorChooserCategory : NSObject
{
    NSArray *choices;
    NSString *title;
}

@property(readonly) NSString *title; // @synthesize title;
@property(readonly) NSArray *choices; // @synthesize choices;
- (id)initWithTitle:(id)arg1 choices:(id)arg2;

@end

@interface IDEFilePickerPanel : NSPanel
{
    IDEFilePickerView *_filePickerView;
    id _completionHandler;
    NSWindow *_attachedToWindow;
    NSArray *_items;
    NSArray *_urls;
    NSURL *_directoryURL;
}

+ (id)filePickerPanel;
@property(copy) NSURL *directoryURL; // @synthesize directoryURL=_directoryURL;
- (void)hideProgressIndicator;
- (void)showProgressIndicator;
@property id <IDEFilePickerViewDelegate> delegate;
@property(copy) NSPredicate *selectableNavigableItemFilter;
@property(copy) NSPredicate *allowedNavigableItemFilter;
@property(readonly) NSArray *URLs;
@property(readonly) NSArray *items;
@property BOOL canChooseGroups;
@property BOOL allowsMultipleSelection;
@property(copy) NSArray *expandedItems;
@property(copy) NSArray *rootItems;
@property(copy) NSString *message;
@property BOOL showsAddOtherButton;
@property(copy) NSString *cancelButtonTitle;
@property(copy) NSString *addOtherButtonTitle;
@property(copy) NSString *addButtonTitle;
- (void)addOther:(id)arg1;
- (void)cancel:(id)arg1;
- (void)add:(id)arg1;
- (void)_pickingEndedWithReturnCode:(long long)arg1;
- (void)filePickerSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSheetModalForWindow:(id)arg1 completionHandler:(id)arg2;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface IDEFilePickerView : NSView <NSOutlineViewDelegate, NSOutlineViewDataSource>
{
    NSTextField *_messageTextField;
    IDENavigatorOutlineView *_navigatorOutlineView;
    NSButton *_addButton;
    NSButton *_alternateAddButton;
    NSButton *_cancelButton;
    NSSearchField *_searchField;
    NSArray *_rootNavigableItems;
    IDENavigableItemCoordinator *_navItemCoordinator;
    NSString *_fileNameFilterString;
    NSPredicate *_allowedFileFilterPredicate;
    NSPredicate *_selectableItemPredicate;
    NSPredicate *_selectableFileFilterPredicate;
    NSScrollView *_outlineScrollView;
    NSProgressIndicator *_progressIndicator;
    NSArray *_rootItems;
    id _target;
    SEL _addAction;
    SEL _alternateAddAction;
    SEL _cancelAction;
    NSString *_message;
    NSString *_addOtherButtonTitle;
    NSString *_addButtonTitle;
    NSString *_cancelButtonTitle;
    IDENavigatorDataCell *_plainObjectCell;
    id <IDEFilePickerViewDelegate> _delegate;
    NSArray *_realSelectedItems;
    NSArray *_realExpandedItems;
    id <DVTObservingToken> _buttonHidingObservationToken;
    BOOL _showsCancelButton;
    BOOL _showsAddButton;
    BOOL _showsAddOtherButton;
    BOOL _canChooseGroups;
    BOOL _delegateImplementsWillDisplayCell;
    BOOL _delegateImplementsItemIsExpandable;
    BOOL _delegateImplementsToolTipForCell;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
@property(copy) NSPredicate *_selectableItemPredicate; // @synthesize _selectableItemPredicate;
@property(copy) NSArray *_realExpandedItems; // @synthesize _realExpandedItems;
@property(copy) NSArray *_realSelectedItems; // @synthesize _realSelectedItems;
@property(copy) NSString *_fileNameFilterString; // @synthesize _fileNameFilterString;
@property id <IDEFilePickerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSPredicate *selectableNavigableItemFilter; // @synthesize selectableNavigableItemFilter=_selectableFileFilterPredicate;
@property(copy) NSPredicate *allowedNavigableItemFilter; // @synthesize allowedNavigableItemFilter=_allowedFileFilterPredicate;
@property SEL cancelAction; // @synthesize cancelAction=_cancelAction;
@property SEL alternateAddAction; // @synthesize alternateAddAction=_alternateAddAction;
@property SEL addAction; // @synthesize addAction=_addAction;
@property id target; // @synthesize target=_target;
@property(copy) NSString *message; // @synthesize message=_message;
@property(copy) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property(copy) NSString *addOtherButtonTitle; // @synthesize addOtherButtonTitle=_addOtherButtonTitle;
@property(copy) NSString *addButtonTitle; // @synthesize addButtonTitle=_addButtonTitle;
@property BOOL showsAddOtherButton; // @synthesize showsAddOtherButton=_showsAddOtherButton;
@property BOOL showsAddButton; // @synthesize showsAddButton=_showsAddButton;
@property BOOL showsCancelButton; // @synthesize showsCancelButton=_showsCancelButton;
@property BOOL canChooseGroups; // @synthesize canChooseGroups=_canChooseGroups;
- (id)_defaultEmptyContentString;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)plainObjectCell;
- (void)viewDidMoveToSuperview;
@property IDENavigableItemCoordinator *navigableItemCoordinator;
- (id)filterPredicate;
@property(copy) NSArray *expandedItems;
@property(readonly) NSArray *selectedItems;
@property(readonly) BOOL canAdd;
@property(copy) NSArray *rootItems;
- (id)rootNavigableItems;
- (void)invalidateRootNavigableItems;
@property BOOL allowsMultipleSelection;
- (void)hideProgressIndicator;
- (void)showProgressIndicator;
- (void)_centerViewInSuperView:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)addOther:(id)arg1;
- (void)cancel:(id)arg1;
- (void)add:(id)arg1;
@property(readonly) BOOL allButtonsHidden;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_doLayoutAndAddSubviews;

@end

@interface IDEContainerItemStructureEditingTarget : NSObject <IDEStructureEditingDropTarget, IDEStructureEditingGroupingTarget, IDEStructureEditingRemoveSubitemsTarget>
{
    IDEGroup *_targetGroup;
    id <DVTObservingToken> _targetGroupValidObservationToken;
}

+ (void)_addFileURLsForContainerItem:(id)arg1 to:(id)arg2;
+ (BOOL)_structureEditingAcceptDropWithContext:(id)arg1 index:(long long)arg2;
+ (id)_containerAddingItemsAssistantExtensionForContainer:(id)arg1;
+ (BOOL)_acceptDropAtIndex:(long long)arg1 withContext:(id)arg2;
+ (BOOL)_acceptDropAtIndex:(long long)arg1 withContext:(id)arg2 fileURLs:(id)arg3;
+ (BOOL)_acceptDropAtIndex:(long long)arg1 withContext:(id)arg2 containerItems:(id)arg3;
+ (id)_targetForStructureEditingOperation:(int)arg1 proposedNavigableItem:(id)arg2 proposedChildIndex:(long long)arg3 actualNavigableItem:(id *)arg4 actualChildIndex:(long long *)arg5;
- (BOOL)structureEditingRemoveSubitemsAtIndexes:(id)arg1;
- (id)structureEditingFileURLsForSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditingCanRemoveSubitemsAtIndexes:(id)arg1;
- (BOOL)structureEditingGroupSubitemsAtIndexes:(id)arg1 groupIndex:(long long *)arg2;
- (BOOL)structureEditingCanGroupSubitemsAtIndexes:(id)arg1;
- (BOOL)_canGroupSubitemsAtIndexes:(id)arg1 groupIndex:(long long *)arg2 shouldGroup:(BOOL)arg3;
- (BOOL)structureEditingAddNewSubgroupAtIndex:(long long)arg1;
- (BOOL)structureEditingCanAddNewSubgroupAtIndex:(long long)arg1;
- (BOOL)_testOrAddNewGroupAtChildIndex:(long long)arg1 shouldAdd:(BOOL)arg2;
- (BOOL)_addNewSubgroupAtIndex:(unsigned long long)arg1 newGroupBlock:(id)arg2;
- (BOOL)structureEditingAcceptInsertionOfSubitemsForContext:(id)arg1 atIndex:(long long)arg2;
- (BOOL)structureEditingValidateInsertionOfSubitemsForContext:(id)arg1 atIndex:(long long)arg2;
- (id)insertSubitemsAssistantContext;
- (BOOL)_structureEditingValidateDropWithContext:(id)arg1 atIndex:(long long)arg2;
- (BOOL)_acceptTemplateDropWithContext:(id)arg1 atIndex:(long long)arg2;
- (unsigned long long)_validateTemplateDropWithContext:(id)arg1 atIndex:(long long)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)_initWithTargetGroup:(id)arg1;
- (id)init;

@end

@interface IDESourceControlStatusBubbleButton : NSControl
{
}

@end

@interface IDESourceControlInspectorStatusProperty : IDEInspectorProperty
{
    IDESourceControlStatusBubbleButton *_bubbleButton;
    NSTextField *_statusText;
    NSButton *_button;
    id <DVTObservingToken> _repaintToken;
}

- (void)unignoreAction:(id)arg1;
- (void)addAction:(id)arg1;
- (void)resolveAction:(id)arg1;
- (void)revertCommandAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)revertAction:(id)arg1;
- (void)performSourceControlRequestOfType:(int)arg1;
- (void)updateForNewStatus;
@property(retain) IDEInspectorViewController *inspectorController;
- (void)loadView;
- (id)initWithPropertyDefinition:(id)arg1 andController:(id)arg2;

@end

@interface IDETemplate : NSObject <NSPasteboardWriting, NSPasteboardReading, IDETemplateOptionParent>
{
    NSDictionary *_templateInfo;
    DVTFilePath *_filePath;
    IDETemplateKind *_templateKind;
    NSString *_templateName;
    NSString *_templateSummary;
    NSString *_templateDescription;
    NSString *_templateCategory;
    long long _sortOrder;
    NSString *_mainTemplateFile;
    NSArray *_allowedTypes;
    NSString *_defaultCompletionName;
    NSArray *_templatePlatforms;
    NSArray *_templateOptions;
    NSImage *_templateIcon;
    BOOL _chooserOnly;
}

+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (id)cachedBasicPasteboardTypeAsArray;
+ (id)availableTemplatesOfTemplateKind:(id)arg1;
+ (id)additionalAvailableTemplatesOfTemplateKind:(id)arg1;
+ (void)_processChildrenOfFilePath:(id)arg1 enumerator:(id)arg2;
+ (void)initialize;
+ (id)_templateInfoForTemplateAtURL:(id)arg1 error:(id *)arg2;
@property(readonly) BOOL chooserOnly; // @synthesize chooserOnly=_chooserOnly;
@property(readonly) NSString *mainTemplateFile; // @synthesize mainTemplateFile=_mainTemplateFile;
@property(readonly) NSArray *allowedTypes; // @synthesize allowedTypes=_allowedTypes;
@property(readonly) NSArray *templateOptions; // @synthesize templateOptions=_templateOptions;
@property long long sortOrder; // @synthesize sortOrder=_sortOrder;
@property(readonly) NSArray *templatePlatforms; // @synthesize templatePlatforms=_templatePlatforms;
@property(readonly) NSString *templateCategory; // @synthesize templateCategory=_templateCategory;
@property(copy) NSString *templateDescription; // @synthesize templateDescription=_templateDescription;
@property(readonly) NSString *templateSummary; // @synthesize templateSummary=_templateSummary;
@property(readonly) NSString *templateName; // @synthesize templateName=_templateName;
@property(readonly) IDETemplateKind *templateKind; // @synthesize templateKind=_templateKind;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) NSDictionary *templateInfo; // @synthesize templateInfo=_templateInfo;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (void)valueDidChangeForOption:(id)arg1;
- (id)currentOptionsIdentifierValue;
@property(readonly) NSString *defaultCompletionName; // @synthesize defaultCompletionName=_defaultCompletionName;
- (long long)templateCompare:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)identifier;
@property(readonly) NSImage *templateIcon; // @dynamic templateIcon;
- (id)fallbackTemplateIcon;
- (id)imageAtTemplateSize:(id)arg1;
- (Class)templateOptionClass;
- (id)initWithTemplateInfo:(id)arg1 filePath:(id)arg2;

@end

@interface IDETemplateFactory : NSObject
{
}

- (BOOL)shouldProcessPath:(id)arg1 inTemplate:(id)arg2;
- (BOOL)_isHiddenFilePath:(id)arg1;
- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(id)arg3;
- (id)proposedFilePathsForContext:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (BOOL)canInstantiateTemplateForContext:(id)arg1;

@end

@interface IDETemplateKind : NSObject
{
    DVTExtension *_extension;
    IDETemplateFactory *_factory;
    NSString *_assistantIdentifier;
    Class _instantiationContextClass;
    NSArray *_conformedToTemplateKindIdentifiers;
    NSArray *_conformedToTemplateKinds;
}

+ (id)targetTemplateKind;
+ (id)projectTemplateKind;
+ (id)fileTemplateKind;
+ (id)allTemplateKinds;
+ (id)templateKindForIdentifier:(id)arg1;
+ (id)_templateKindForExtension:(id)arg1;
+ (void)initialize;
@property(readonly) NSString *assistantIdentifier; // @synthesize assistantIdentifier=_assistantIdentifier;
@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
- (id)nextAssistantIdentifierForWorkspace:(id)arg1;
- (id)newTemplateInstantiationContext;
- (id)createdObjectTypeName;
- (BOOL)conformsToTemplateKind:(id)arg1;
@property(readonly) NSArray *conformedToTemplateKinds; // @dynamic conformedToTemplateKinds;
@property(readonly) Class templateClass;
@property(readonly) IDETemplateFactory *factory; // @dynamic factory;
- (id)description;
- (id)initWithExtension:(id)arg1;

@end

@interface IDETemplateMacroEngine : NSObject
{
    NSMutableDictionary *_macroSubstitutions;
}

+ (id)standardSubstitutionsForMacrosWithWorkspaceName:(id)arg1 projectName:(id)arg2 packageName:(id)arg3 targetName:(id)arg4 productName:(id)arg5 fileName:(id)arg6 organizationName:(id)arg7;
+ (id)fullUserName;
+ (id)substitutionsForMacrosWithWorkspaceName:(id)arg1 projectName:(id)arg2 packageName:(id)arg3 targetName:(id)arg4 productName:(id)arg5 fileName:(id)arg6;
+ (id)multiSubstitutionsForSubstitution:(id)arg1 forMacro:(id)arg2;
- (void)setMultiSubstitution:(id)arg1 forMacro:(id)arg2;
- (BOOL)createFileAtURL:(id)arg1 usingEncoding:(unsigned long long)arg2 substitutingMacrosInFileAtURL:(id)arg3 error:(id *)arg4;
- (id)stringBySubstitutingMacrosInString:(id)arg1;
- (id)allMacros;
- (void)setSubstitutionsForMacros:(id)arg1;
- (id)substitutionForMacro:(id)arg1;
- (void)setSubstitution:(id)arg1 forMacro:(id)arg2;
- (id)init;

@end

@interface IDETemplateInstantiationContext : IDEAssistantContext <NSCopying>
{
    IDETemplate *_documentTemplate;
    DVTFilePath *_documentFilePath;
    NSArray *_instantiatedItems;
    IDEContainerItem *_primaryInstantiatedItem;
    IDEGroup *_destinationGroup;
    unsigned long long _destinationIndex;
    NSArray *_templateSections;
}

@property(copy) NSArray *templateSections; // @synthesize templateSections=_templateSections;
@property unsigned long long destinationIndex; // @synthesize destinationIndex=_destinationIndex;
@property IDEGroup *destinationGroup; // @synthesize destinationGroup=_destinationGroup;
@property IDEContainerItem *primaryInstantiatedItem; // @synthesize primaryInstantiatedItem=_primaryInstantiatedItem;
@property(copy) NSArray *instantiatedItems; // @synthesize instantiatedItems=_instantiatedItems;
@property DVTFilePath *documentFilePath; // @synthesize documentFilePath=_documentFilePath;
@property IDETemplate *documentTemplate; // @synthesize documentTemplate=_documentTemplate;
- (void)loadAvailableTemplatesOfKind:(id)arg1 navigableItemCoordinator:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEAssistant : DVTViewController
{
    IDEAssistantContext *_assistantContext;
    NSString *_nextAssistantIdentifier;
}

+ (BOOL)wantsOverlayEffect;
@property NSString *nextAssistantIdentifier; // @synthesize nextAssistantIdentifier=_nextAssistantIdentifier;
@property(retain) IDEAssistantContext *assistantContext; // @synthesize assistantContext=_assistantContext;
@property(readonly) NSView *sourceListView;
@property(readonly) NSString *assistantTitle;
- (void)finishWithCompletionBlock:(id)arg1;
@property(readonly) BOOL alwaysShowFinish;
@property(readonly) BOOL canFinish;
@property(readonly) BOOL canGoBack;
@property(readonly) BOOL canGoForward;
- (BOOL)canBecomeMainViewController;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEAssistantContext : NSObject <NSCopying>
{
    IDEWorkspaceTabController *_workspaceTabController;
    IDEAssistantWindowController *_assistantWindowController;
}

@property IDEAssistantWindowController *assistantWindowController; // @synthesize assistantWindowController=_assistantWindowController;
@property IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) NSWindow *workspaceWindow;
@property(readonly) IDEWorkspace *workspace;

@end

@interface IDEAssistantWindowController : NSWindowController <DVTReplacementViewDelegate>
{
    DVTReplacementView *_replacementView;
    DVTBorderedView *_borderedView;
    DVTBorderedView *_sourceListBorderedView;
    DVTStackView *_buttonStackView;
    NSMutableArray *_assistantHistory;
    NSButton *_nextButton;
    NSButton *_backButton;
    NSButton *_cancelButton;
    NSTextField *_titleField;
    IDEAssistant *_currentAssistant;
    IDEAssistantContext *_assistantContext;
    id _currentCompletionBlock;
    double _lastAnimationDirection;
    NSImageView *_replacementImageView;
    NSImageView *_titleFieldImageView;
    NSImageView *_cancelButtonImageView;
    NSImageView *_sourceListImageView;
    NSString *_windowDefaultsName;
    NSView *_nextKeyView;
    NSMutableArray *_allAnimations;
    BOOL _backtrackingFromOverlayAssistant;
}

+ (id)keyPathsForValuesAffectingAssistantTitle;
+ (id)keyPathsForValuesAffectingForwardOrFinishButtonTitle;
+ (id)keyPathsForValuesAffectingCanGoForwardOrFinish;
+ (id)keyPathsForValuesAffectingOnFirstAssistant;
@property IDEAssistant *currentAssistant; // @synthesize currentAssistant=_currentAssistant;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)cleanUpAnimationForView:(id)arg1;
- (void)setUpAnimationImageViewWithDirection:(double)arg1 actionBlock:(id)arg2;
- (void)setupAccessoriesForAssistant:(id)arg1 animated:(BOOL)arg2;
- (id)imageForView:(id)arg1 bordered:(BOOL)arg2;
- (void)setAnimationDuration;
- (void)cancelSession;
- (void)goBack:(id)arg1;
- (void)ensureImageViewsConfigured;
- (void)setUpOverlayForAssistantWithIdentifier:(id)arg1;
- (void)_finishWithAction:(id)arg1;
- (void)goNextOrFinish:(id)arg1;
- (void)addAnimationForKey:(id)arg1 toView:(id)arg2;
- (id)skipAheadIfPossibleAndReturnAssistantIdentifier;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (id)assistantTitle;
- (id)forwardOrFinishButtonTitle;
- (BOOL)canGoForwardOrFinish;
- (BOOL)canGoBack;
- (BOOL)onFirstAssistant;
- (id)_popAssistantHistoryStack;
- (void)_pushAssistantOntoHistoryStack:(id)arg1;
- (void)_clearAssistantHistoryStack;
- (void)endAssistantSessionWithResult:(int)arg1 error:(id)arg2;
- (void)beginSessionForWorkspaceWindow:(id)arg1;
- (void)beginSessionWithAssistantIdentifier:(id)arg1 context:(id)arg2 completionBlock:(id)arg3;
- (id)assistantWithIdentifier:(id)arg1;
- (void)close;
- (void)windowDidLoad;
- (id)init;

@end

@interface IDEAssistantWindowBorderView : NSView
{
}

- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEInspectorSizeProperty : IDEInspectorProperty
{
    NSTextField *widthTextField;
    NSTextField *heightTextField;
    NSStepper *widthStepper;
    NSStepper *heightStepper;
    NSButton *hasValueCheckBox;
    DVTDelayedValidator *validator;
    NSNumber *displayedWidth;
    NSNumber *displayedHeight;
    NSString *widthPlaceholder;
    NSString *heightPlaceholder;
}

@property(copy) NSString *heightPlaceholder; // @synthesize heightPlaceholder;
@property(copy) NSString *widthPlaceholder; // @synthesize widthPlaceholder;
- (id)bindAndConfigure;
- (void)pushValuesFromModelToControls:(id)arg1;
- (id)placeholderForValues:(id)arg1 andNonNilValues:(id)arg2;
- (void)toggleNilValue:(id)arg1;
- (void)setDisplayedHeight:(id)arg1;
- (id)displayedHeight;
- (void)setDisplayedWidth:(id)arg1;
- (id)displayedWidth;
- (void)updateValuesTansformingExistingValueWithBlock:(id)arg1;
- (double)baseline;
- (id)nibName;
- (id)nonNilValueArrayKeyPath;
- (id)valueArrayKeyPath;
- (id)nonNilValueKeyPath;
- (id)valueKeyPath;
- (BOOL)allowsNilValues;

@end

@interface IDEPreferenceSetViewController : IDEViewController <NSTableViewDelegate, NSTableViewDataSource, NSMenuDelegate>
{
    NSMenuItem *_duplicateSelectedThemeMenuItem;
    NSMenuItem *_newThemeFromTemplateMenuItem;
    DVTImageAndTextColumn *_tableColumn;
    NSTableView *_tableView;
    DVTGradientImagePopUpButton *_addPopUpButton;
    DVTGradientImageButton *_removeButton;
    IDEControlGroup *_controlGroup;
    DVTBorderedView *_controlGroupBorderedView;
    NSArrayController *_prefSetsArrayController;
    DVTPreferenceSetManager *_preferenceSetManager;
    NSMapTable *_observerTokensForPreferenceSetsMapTable;
    id <DVTObservingToken> _currentPreferenceSetObserver;
    BOOL _hasBeenSetup;
}

+ (id)keyPathsForValuesAffectingCanDeleteActivePreferenceSet;
@property DVTPreferenceSetManager *preferenceSetManager; // @synthesize preferenceSetManager=_preferenceSetManager;
@property(readonly) NSTableView *preferenceSetTableView; // @synthesize preferenceSetTableView=_tableView;
- (void)menuNeedsUpdate:(id)arg1;
- (void)deleteActivePreferenceSet:(id)arg1;
- (void)duplicateSelectedDefaultThemeFromMenu:(id)arg1;
- (void)duplicateActivePreferenceSet:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)_duplicatePreferenceSet:(id)arg1;
- (void)_removeObserversForPreferenceSet:(id)arg1;
- (void)_addObserversForPreferenceSet:(id)arg1;
- (id)_selectedPreferenceSet;
@property(readonly) NSArray *preferenceSetsSortDescriptors;
- (BOOL)canDeleteActivePreferenceSet;
- (void)loadView;
- (void)setupWithPreferenceSetManager:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEAboutWindowController : NSWindowController <NSWindowRestoration>
{
    NSTextField *versionField;
    NSScrollView *additionalInfoScrollView;
    NSTextView *additionalInfoView;
    NSButton *moreInfoButton;
    NSScrollView *copyrightScrollView;
    NSTextView *copyrightView;
    NSTextField *appNameField;
    NSImageView *appIconView;
}

+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(id)arg3;
+ (id)sharedAboutWindowController;
- (void)closeAboutWindow:(id)arg1;
- (void)openAboutWindow:(id)arg1;
- (void)showMoreInfo:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (void)_sizeCopyrightView;
- (void)_sizeAdditionalInfoView;
- (id)_aboutPanelCredits;

@end

@interface IDESourceCodeComparisonAnnotationContext : IDEAnnotationContext <DVTSourceCodeComparisonAnnotationContext>
{
    NSURL *_documentURL;
    int _dataSourceType;
    DVTDiffDescriptor *_diffDescriptor;
    DVTDiffSession *_diffSession;
}

+ (BOOL)scrollbarMarkerHighlight;
+ (BOOL)wantsScrollbarMarker;
@property DVTDiffSession *diffSession; // @synthesize diffSession=_diffSession;
@property DVTDiffDescriptor *diffDescriptor; // @synthesize diffDescriptor=_diffDescriptor;
@property int dataSourceType; // @synthesize dataSourceType=_dataSourceType;
@property NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (id)initWithEditor:(id)arg1 document:(id)arg2 fileDataType:(id)arg3 workspaceTabController:(id)arg4 documentURL:(id)arg5 dataSourceType:(int)arg6 diffDescriptor:(id)arg7 diffSession:(id)arg8;
- (id)initWithEditor:(id)arg1 document:(id)arg2 workspaceTabController:(id)arg3;
- (id)initWithFileDataType:(id)arg1;
- (id)init;

@end

@interface IDEMediaLibraryController : IDELibraryController
{
    NSMapTable *_resourceToLibraryAssetTable;
    id <IDEMediaLibraryDelegate> _delegate;
    NSMutableSet *_mediaObservingTokens;
    NSSet *_mediaRepositories;
    struct {
        unsigned int delegateImplementsPopulatePasteboard:1;
        unsigned int _reserved:7;
    } _mediaLibraryFlags;
}

@property NSSet *mediaRepositories; // @synthesize mediaRepositories=_mediaRepositories;
@property id <IDEMediaLibraryDelegate> delegate; // @synthesize delegate=_delegate;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2;
- (void)populateAdditionalTypesToPasteboard:(id)arg1 forAssets:(id)arg2;
- (struct CGSize)detailAreaSize;
- (id)audioDetailController:(id)arg1 audioForLibraryAsset:(id)arg2;
- (id)imageDetailController:(id)arg1 imageForLibraryAsset:(id)arg2;
- (BOOL)quickLookDetailController:(id)arg1 shouldScaleToFitPreviewForLibraryAsset:(id)arg2;
- (id)quickLookDetailController:(id)arg1 URLForLibraryAsset:(id)arg2;
- (void)updateLibraryAssetsForResources:(id)arg1;
- (void)removeLibraryAssetsForResources:(id)arg1;
- (id)activeWorkspaceTabController;
- (id)workspaceWindowController;
- (id)workspace;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)libraryDidLoad;
- (void)activeEditorDidChange:(id)arg1;
- (void)stopObservingMediaRepositories;
- (void)startObservingMediaRepositories;

@end

@interface IDEInspectorResizableTextField : DVTAutoLayoutView
{
    NSTextField *textField;
}

@property(readonly) NSTextField *textField; // @synthesize textField;
- (void)controlTextDidChange:(id)arg1;
- (void)layoutBottomUp;
- (void)layoutTopDown;

@end

@interface IDETemplateChooserAssistant : IDETemplateInstantiationAssistant <DVTTileViewDelegate>
{
    DVTSplitView *_innerSplitView;
    DVTBorderedView *_templateInfoView;
    IDENavigatorOutlineView *_outlineView;
    DVTImageAndTextCell *_sectionCell;
    NSArrayController *_arrayController;
    DVTTileView *_tileView;
    DVTTileViewItem *_prototypeItem;
    NSView *_itemSelectionView;
    NSTextField *_itemTextField;
    NSView *_sourceListView;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingCollectionViewSelectionIndexes;
+ (id)supportedTemplateKind;
+ (id)defaultViewNibBundle;
+ (id)defaultViewNibName;
@property NSView *sourceListView; // @synthesize sourceListView=_sourceListView;
- (void)chooserTileViewShouldGoForward:(id)arg1;
- (void)userDidPressEscapeInTileView:(id)arg1;
- (void)userDidPressSpaceBarInTileView:(id)arg1;
- (id)tileView:(id)arg1 typeCompletionStringForContentObject:(id)arg2;
- (void)tileView:(id)arg1 didChangeContextClickedObjectFrom:(id)arg2;
- (id)tileView:(id)arg1 titleForContentObject:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (id)sectionCell;
- (id)nextAssistantIdentifier;
- (BOOL)canGoForward;
- (void)restoreSelectionFromContext;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)setCollectionViewSelectionIndexes:(id)arg1;
- (id)collectionViewSelectionIndexes;
- (id)templateNameDefaultsKey;
- (id)categoryDefaultsKey;
- (id)sectionDefaultsKey;
- (void)writeStateToUserDefaults;
- (void)restoreSelectionFromUserDefaults;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface IDETemplateChooserTileView : DVTTileView
{
    BOOL _dontSendSelectionIndexesChanges;
}

+ (id)keyPathsForValuesAffectingBindableSelectionIndexes;
- (void)setSelectionIndexes:(id)arg1;
- (void)setBindableSelectionIndexes:(id)arg1;
- (id)bindableSelectionIndexes;
- (void)insertNewline:(id)arg1;
- (void)mouseDown:(id)arg1;
@property id <IDETemplateChooserTileViewDelegate> delegate;

@end

@interface IDETemplateChooserSelectionView : NSView
{
    BOOL _showsFirstResponder;
    NSBezierPath *_path;
}

@property BOOL showsFirstResponder; // @synthesize showsFirstResponder=_showsFirstResponder;
- (void)setFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setNilValueForKey:(id)arg1;

@end

@interface IDETemplateChooserTextField : NSTextField
{
    BOOL _showsFirstResponder;
}

@property BOOL showsFirstResponder; // @synthesize showsFirstResponder=_showsFirstResponder;
- (void)setNilValueForKey:(id)arg1;

@end

@interface IDETemplateChooserTextFieldCell : NSTextFieldCell
{
}

+ (id)sharedStorage;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDETemplateCompletionAssistant : IDETemplateInstantiationAssistant
{
    BOOL _canInstantiateTemplate;
    id _completionBlock;
    NSPopUpButton *_destinationPopUp;
    NSSavePanel *_currentSavePanel;
    IDEGroup *_initialDestinationGroup;
}

@property NSPopUpButton *destinationPopUp; // @synthesize destinationPopUp=_destinationPopUp;
- (BOOL)shouldShowAccessoryView;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (BOOL)canGoBack;
- (void)finishWithCompletionBlock:(id)arg1;
- (void)beginSheetModalForWindow:(id)arg1;
- (id)configuredSavePanel;
- (void)connectProjectPopup;
- (void)selectedGroupDidChange:(id)arg1;
- (void)didInstantiateItems:(id)arg1;
- (void)_didInstantiateItems:(id)arg1;
- (void)instantiateFileTemplatesWithCompletionBlock:(id)arg1;
- (void)handleSavePanelResult:(long long)arg1 completionBlock:(id)arg2;
- (void)handleSavePanelResult:(long long)arg1 url:(id)arg2;
- (id)selectedDestinationGroup;
- (BOOL)canFinish;
- (BOOL)validateCanFinish;
- (void)_validateCanFinish;
- (void)setAssistantContext:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
@property(copy) NSURL *destinationURL; // @dynamic destinationURL;

@end

@interface IDETemplateSavePanel : NSSavePanel
{
}

- (void)overwriteAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (BOOL)_overwriteExistingFileCheck:(id)arg1;

@end

@interface IDETemplateInstantiationAssistant : IDEAssistant
{
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    IDENavigableItem *_workspaceNavigableItem;
}

@property IDENavigableItemCoordinator *navigableItemCoordinator; // @synthesize navigableItemCoordinator=_navigableItemCoordinator;
- (id)destinationGroupForMenuItem:(id)arg1;
- (void)populateDestinationGroupPopUpButton:(id)arg1;
- (void)addMenuItemsToPopUpButton:(id)arg1 menu:(id)arg2 forItem:(id)arg3 indentationLevel:(unsigned long long)arg4 items:(id)arg5;
- (BOOL)shouldAddItemToDestinationMenu:(id)arg1;
@property(readonly) IDENavigableItem *workspaceNavigableItem;
@property(readonly) IDETemplateInstantiationContext *templateInstantiationContext;

@end

@interface IDEFontAndColorFontTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface IDEFontAndColorPrefsPaneController : IDEViewController <NSTableViewDelegate>
{
    DVTReplacementView *preferenceSetReplacementView;
    DVTTabChooserView *_tabChooserView;
    NSTableView *_fontAndColorItemTable;
    NSArrayController *_categoriesArrayController;
    NSObjectController *_currentThemeObjectController;
    NSBox *_generalBox;
    NSView *_sourceEditorGeneralView;
    NSView *_consoleGeneralView;
    NSArray *_fontAndColorItems;
    id <DVTObservingToken> _selectedTabObserver;
    id <DVTObservingToken> _backgroundColorObserver;
    id <DVTObservingToken> _selectionIndexesObserver;
}

+ (void)initialize;
@property(readonly) NSArrayController *categoriesArrayController; // @synthesize categoriesArrayController=_categoriesArrayController;
@property NSArray *fontAndColorItems; // @synthesize fontAndColorItems=_fontAndColorItems;
- (void)changeFont:(id)arg1;
- (void)chooseFont:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)_theme;
- (void)_sourceTextColorsChanged:(id)arg1;
- (void)_updateBindingsBasedOnSelectedTab;
- (void)_handleTabChanged;
- (void)_initTabChooserView;
- (void)loadView;
- (void)_updateFontPickerAndColorWell;
@property(copy) NSFont *combinedSyntaxFont;
@property(copy) NSColor *combinedSyntaxColor;

@end

@interface IDEFontAndColorCategoriesTableView : NSTableView
{
    NSColor *_selectionColor;
}

@property(copy) NSColor *selectionColor; // @synthesize selectionColor=_selectionColor;
- (id)_highlightColorForCell:(id)arg1;

@end

@interface IDEMediaResource : NSObject <NSPasteboardWriting>
{
    NSMutableSet *_containingMediaRepositories;
    NSMutableSet *_contentRequests;
    DVTFileDataType *_contentType;
    NSMutableSet *_iconRequests;
    DVTFilePath *_path;
    NSString *_name;
    NSImage *_icon;
    id _content;
    struct {
        unsigned int contentValid:1;
        unsigned int iconValid:1;
        unsigned int _reserved:6;
    } _flags;
}

+ (Class)mediaResourceClassForFileType:(id)arg1;
+ (id)soundTypes;
+ (id)imageTypes;
+ (id)allMediaTypes;
+ (void)discardCachedResource:(id)arg1;
+ (id)resourceWithName:(id)arg1 icon:(id)arg2 content:(id)arg3 contentType:(id)arg4;
+ (id)resourceWithPath:(id)arg1;
@property(readonly) DVTFileDataType *contentType; // @synthesize contentType=_contentType;
@property(readonly) DVTFilePath *path; // @synthesize path=_path;
@property(readonly) id content; // @synthesize content=_content;
@property(readonly) NSImage *icon; // @synthesize icon=_icon;
@property(readonly) NSString *name; // @synthesize name=_name;
- (long long)compare:(id)arg1;
- (void)populateAdditionalTypesToPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)requestContentSynchronously;
- (void)requestContentAsynchronously:(id)arg1;
- (id)requestIconSynchronously;
- (void)requestIconAsynchronously:(id)arg1;
- (id)generateContent;
- (id)generateIcon;
- (id)mediaLibraryDetailControllerIdentifier;
@property(readonly) id contentIfValid;
@property(readonly) NSImage *iconIfValid;
@property(getter=isIconValid) BOOL iconValid;
@property(getter=isContentValid) BOOL contentValid;
- (void)removeContainingMediaRepository:(id)arg1;
- (void)addContainingMediaRepository:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setIcon:(id)arg1;
- (BOOL)isPathBased;
- (id)initWithPath:(id)arg1;
- (id)initWithName:(id)arg1 icon:(id)arg2 content:(id)arg3 contentType:(id)arg4;

@end

@interface IDESoundBreakpointAction : IDEBreakpointAction <NSSoundDelegate>
{
    NSString *_soundName;
}

+ (id)propertiesAffectingPersistenceState;
+ (void)releaseSoundLock;
+ (void)aquireSoundLock;
+ (id)soundNames;
@property(copy) NSString *soundName; // @synthesize soundName=_soundName;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)sound:(id)arg1 didFinishPlaying:(BOOL)arg2;
- (void)performActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (void)_soundActionCommonInit;
- (id)init;

@end

@interface IDELogBreakpointAction : IDEBreakpointAction <NSSpeechSynthesizerDelegate>
{
    int _conveyanceType;
    NSString *_message;
}

+ (id)propertiesAffectingPersistenceState;
@property(copy) NSString *message; // @synthesize message=_message;
@property int conveyanceType; // @synthesize conveyanceType=_conveyanceType;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;
- (void)performActionUsingConsole:(id)arg1 andBreakpoint:(id)arg2;
- (void)_handleMessageChanged;
- (void)_logActionCommonInit;
- (id)init;

@end

@interface IDEFileMediaRepository : IDEMediaRepository
{
    id <DVTObservingToken> _kvoContainerValidToken;
    IDEFileReferenceContainerObserver *_observer;
    id <DVTInvalidation> _observingToken;
    NSMapTable *_resourcesByPath;
    NSTimer *_discardTimer;
    BOOL _wasDiscarded;
}

+ (id)mediaRepositoryForContainer:(id)arg1 types:(id)arg2;
+ (void)discardMediaRepositoryForContainerObserver:(id)arg1;
+ (id)mediaRepositoryForContainerObserver:(id)arg1;
+ (id)staticContainerObserverToRepositoryMap;
- (id)addObserverWithBlock:(id)arg1;
- (void)removeObserver:(id)arg1;
@property(readonly) NSSet *types;
@property(readonly) IDEContainer *container;
- (id)resources;
- (void)stopDiscardTimer;
- (void)startDiscardTimer;
- (void)discard;
- (id)initWithContainerObserver:(id)arg1;

@end

@interface IDEImageMediaResource : IDEMediaResource
{
}

- (void)populateAdditionalTypesToPasteboard:(id)arg1;
- (id)mediaLibraryDetailControllerIdentifier;
- (id)generateContent;

@end

@interface IDESoundMediaResource : IDEMediaResource
{
}

- (id)mediaLibraryDetailControllerIdentifier;
- (id)generateContent;

@end

@interface IDEInspectorImageMatrixProperty : IDEInspectorEnumerationProperty
{
    NSNumber *reflectedValue;
    IDEInspectorResizableMatrix *matrixView;
}

- (id)bindAndConfigure;
- (id)configureEnumeratedOptions;
- (void)userDidChangeValue:(id)arg1;
- (void)setReflectedValue:(id)arg1;
- (id)reflectedValue;
- (double)baseline;

@end

@interface IDEInspectorResizableMatrix : DVTAutoLayoutView
{
    NSArray *buttonRows;
}

- (void)layoutTopDown;
- (void)setOnStateForValue:(long long)arg1;
- (void)clearState;
- (void)setButtonRows:(id)arg1;
- (id)buttonRows;

@end

@interface IDEIssueNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (BOOL)isLeaf;
- (id)subtitle;
- (id)name;
- (int)_parentage;

@end

@interface IDENavigableItemCoordinator : NSObject <DVTInvalidation>
{
    NSHashTable *_coordinatedItems;
    NSMapTable *_documentsByNavItem;
    NSMapTable *_domainIdentifiersByNavItem;
    NSMapTable *_rootItemsByRepresentedObject;
    NSMapTable *_changeCountByNavItem;
    NSDictionary *_filteringProxiesByKey;
    DVTDelayedValidator *_delayedValidator;
    NSSet *_pendingGraphChangedItems;
    NSSet *_pendingPropertyChangedItems;
    DVTStackBacktrace *_creationBacktrace;
    DVTStackBacktrace *_invalidationBacktrace;
    id <IDENavigableItemCoordinatorDelegate> _delegate;
    struct __navigableItemCoordinatorFlags {
        unsigned int _delegateRespondsToDocumentForNavigableItem:1;
        unsigned int _hasWarnedAboutRootItemsCount:1;
        unsigned int _reservedNavigableItemCoordinator:30;
    } _navigableItemCoordinatorFlags;
    BOOL _isValid;
}

+ (void)initialize;
@property id <IDENavigableItemCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)unhibernate;
- (void)hibernate;
- (void)forgetEditorDocument:(id)arg1;
- (id)editorDocumentForNavigableItem:(id)arg1;
- (void)_editorDocumentWillClose:(id)arg1;
- (void)forgetNavigableItem:(id)arg1;
- (void)forgetNavigableItems:(id)arg1;
- (void)forgetItems:(id)arg1;
- (void)closeDocumentsForItems:(id)arg1;
- (void)_collectDescendants:(id)arg1 toForgetForItem:(id)arg2;
- (void)registerNavigableItem:(id)arg1;
- (id)filteredItemProxyForKey:(id)arg1;
- (void)setFilteredItemProxy:(id)arg1 forKey:(id)arg2;
- (id)_filteringProxiesByKey;
- (id)filteredItemProxyForItems:(id)arg1;
- (unsigned long long)changeCountForItem:(id)arg1;
- (void)_noteNavigableItemChangedChildItems:(id)arg1;
- (void)_incrementChangeCountForItem:(id)arg1;
- (void)_noteNavigableItem:(id)arg1 valueWillChangeForProperty:(id)arg2;
- (void)invalidate;
@property(readonly, getter=isValid) BOOL valid;
- (void)delayedPostGraphAndPropertyChangeNotifications:(id)arg1;
- (void)processPendingChanges;
- (void)_postNotificationNamed:(id)arg1 forChangedItems:(id)arg2;
- (void)postDidForgetNotificationForItems:(id)arg1;
- (id)_delegate_editorDocumentForNavigableItem:(id)arg1;
- (id)navigableItemFromArchivableRepresentation:(id)arg1 forWorkspace:(id)arg2 error:(id *)arg3;
- (id)_navigableItemFromArchivableRepresentation:(id)arg1 rootItem:(id)arg2 error:(id *)arg3;
- (id)_documentContentNavigableItemFromArchivableRepresentation:(id)arg1 documentItem:(id)arg2;
- (id)_childNavigableItemWithRepresentationIDs:(id)arg1 parentItem:(id)arg2 acceptPartialMatch:(BOOL)arg3;
- (id)rootNavigableItemInDomain:(id)arg1 forWorkspace:(id)arg2;
- (Class)domainProviderWithIdentifier:(id)arg1;
- (id)domainIdentifierForNavigableItem:(id)arg1;
- (id)_coordinatedItems;
- (id)_documentsByNavItem;
- (id)_rootItemsByRepresentedObject;
- (id)_domainIdentifiersByNavItem;
- (id)_providersByDomain;
- (id)_navigableItemForFilePath:(id)arg1 inWorkspace:(id)arg2 withSeenFileReferences:(id)arg3 allowLeaf:(BOOL)arg4;
- (id)structureNavigableItemForDocumentURL:(id)arg1 inWorkspace:(id)arg2 error:(id *)arg3;
- (id)rootNavigableItemWithRepresentedObject:(id)arg1;
- (id)init;

@end

@interface IDENICFilterProxy : IDENavigableItem
{
    NSHashTable *_itemsToFilterAfterDelay;
    NSHashTable *_rootItems;
    NSHashTable *_itemsWithComputedArrangedChildItems;
    NSMutableSet *_pendingItems;
    NSPredicate *_proxyFilterPredicate;
    double _filterStartTime;
    BOOL _isInvalidated;
    BOOL _isFiltering;
    BOOL _isSuspended;
}

@property(readonly) NSHashTable *rootItems; // @synthesize rootItems=_rootItems;
- (id)parentForItem:(id)arg1;
- (void)addPendingItem:(id)arg1;
- (BOOL)shouldFilterChildItemsOfItem:(id)arg1;
- (BOOL)canUseIncrementalFilteringBasedOnPredicate:(id)arg1;
- (void)setFiltering:(BOOL)arg1;
@property(readonly, getter=isFiltering) BOOL filtering;
- (void)resumeFiltering;
- (void)suspendFiltering;
- (id)_itemsWithComputedArrangedChildItems;
- (void)handleObjectGraphUpdateNotification:(id)arg1;
- (void)updateArrangedChildItemsForItem:(id)arg1;
- (void)computeArrangedChildItemsForItem:(id)arg1;
- (void)_delayedComputeArrangedChildItems;
- (id)arrangeItems:(id)arg1;
- (id)filterPredicate;
- (void)setFilterPredicate:(id)arg1;
- (id)_childItems;
- (id)childItems;
- (BOOL)isLeaf;
- (id)description;
- (void)dispose;
- (void)setItems:(id)arg1;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDENavigableItemDomainProvider : NSObject
{
}

+ (id)navigableItemImageForDocumentURL:(id)arg1;
+ (id)navigableItemNameForDocumentURL:(id)arg1;
+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDENavigableItemBatchFindDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDENavigableItemWorkspaceStructureDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDENavigableItemSourceControlDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDENavigableItemWorkingTreeItemHolderDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDENavigableItemExecutionEnvironmentDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDEMediaRepository : NSObject
{
    NSMutableSet *_observers;
}

@property(readonly) NSSet *observers; // @synthesize observers=_observers;
- (id)addObserverWithBlock:(id)arg1;
- (void)removeObserver:(id)arg1;
@property(readonly) NSSet *resources;

@end

@interface IDEMutableMediaRepository : IDEMediaRepository
{
    NSMutableSet *_resources;
}

- (void)removeResource:(id)arg1;
- (void)addResource:(id)arg1;
- (id)resources;
- (id)initWithResources:(id)arg1;

@end

@interface IDEInspectorCenteringView : DVTAutoLayoutView
{
    NSView *centeredView;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)centeredViewFrameDidChange:(id)arg1;
- (void)awakeFromNib;

@end

@interface IDEContainerItemPasteboardManager : NSObject <IDEStructureEditingDraggingSource>
{
}

+ (id)sharedPasteboardManager;
- (id)fileURLsForDraggingInfo:(id)arg1;
- (void)containerItems:(id *)arg1 orFileURLs:(id *)arg2 forDraggingInfo:(id)arg3;
- (BOOL)structureEditingWriteItems:(id)arg1 toPasteboard:(id)arg2;

@end

@interface _IDEIndexToBoolValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface IDEAddContainerItemsAssistant : IDEAssistant
{
    BOOL _canFinish;
    NSTextField *_copyFilesToTargetGroupLabel;
    NSButton *_copyFilesToTargetGroupSwitchButton;
    NSMatrix *_createGroupsForFoldersMatrix;
}

@property BOOL canFinish; // @synthesize canFinish=_canFinish;
- (void)finishWithCompletionBlock:(id)arg1;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface IDEAddContainerItemsAssistantContext : IDEStructureEditingAssistantContext
{
    IDEGroup *_targetGroup;
    id <DVTObservingToken> _targetGroupObservingToken;
    NSArray *_containerItems;
    BOOL _stripOutBuildProductContainerItems;
    BOOL _createGroupsForFolders;
    BOOL _copyFilesToTargetGroup;
    id _prepareBlock;
    BOOL _hasProcessedDraggingInfo;
    NSString *_buildToolPath;
    NSString *_buildArgumentsString;
}

+ (id)contextWithTargetGroup:(id)arg1;
+ (id)_containerAddingItemsAssistantExtensionForContainer:(id)arg1;
+ (void)initialize;
@property(copy) id prepareBlock; // @synthesize prepareBlock=_prepareBlock;
@property(copy) NSString *buildArgumentsString; // @synthesize buildArgumentsString=_buildArgumentsString;
@property(copy) NSString *buildToolPath; // @synthesize buildToolPath=_buildToolPath;
@property BOOL stripOutBuildProductContainerItems; // @synthesize stripOutBuildProductContainerItems=_stripOutBuildProductContainerItems;
@property(copy) NSArray *containerItems; // @synthesize containerItems=_containerItems;
@property IDEGroup *targetGroup; // @synthesize targetGroup=_targetGroup;
- (void)_addItemsFromDraggingInfo:(id)arg1;
- (void)_configureForOnlyDraggingProjects;
- (id)assistantIdentifier;
@property(readonly) NSString *actualAssistantIdentifier;
@property BOOL copyFilesToTargetGroup;
@property BOOL createGroupsForFolders;
- (id)init;

@end

@interface IDEEditorHistoryItem : NSObject
{
    NSString *_navigableItemName;
    NSString *_documentNavigableItemName;
    IDENavigableItemArchivableRepresentation *_archivableRepresentation;
    NSURL *_documentURL;
    DVTFileDataType *_fileDataType;
    NSString *_documentExtensionIdentifier;
    NSDictionary *_stateDictionary;
}

+ (id)editorHistoryItemForStateSavingDictionary:(id)arg1 forNavigableItemCoordinator:(id)arg2 forWorkspace:(id)arg3 error:(id *)arg4;
@property(readonly) NSString *documentNavigableItemName; // @synthesize documentNavigableItemName=_documentNavigableItemName;
@property(readonly) NSString *navigableItemName; // @synthesize navigableItemName=_navigableItemName;
@property(readonly) NSDictionary *stateDictionary; // @synthesize stateDictionary=_stateDictionary;
@property(readonly) IDENavigableItemArchivableRepresentation *navigableItemRepresentation; // @synthesize navigableItemRepresentation=_archivableRepresentation;
@property(readonly) DVTFileDataType *fileDataType; // @synthesize fileDataType=_fileDataType;
@property(readonly) NSURL *documentURL; // @synthesize documentURL=_documentURL;
@property(readonly) NSString *documentExtensionIdentifier; // @synthesize documentExtensionIdentifier=_documentExtensionIdentifier;
- (id)stateSavingStateDictionary;
- (id)description;
@property(readonly) NSString *historyMenuItemTitle;
- (id)initWithNavigableItem:(id)arg1 archivableRepresentation:(id)arg2 documentExtensionIdentifier:(id)arg3 stateDictionary:(id)arg4 documentNavigableItemName:(id)arg5 navigableItemName:(id)arg6;
- (id)initWithNavigableItem:(id)arg1;
- (id)_initWithNavigableItem:(id)arg1 archivableRepresentation:(id)arg2 fileDataType:(id)arg3 documentExtensionIdentifier:(id)arg4 stateDictionary:(id)arg5 documentNavigableItemName:(id)arg6 navigableItemName:(id)arg7;
- (id)init;

@end

@interface IDEManageRunContextsSheetController : IDEViewController
{
    NSWindow *_sheetWindow;
    DVTBorderedView *_tableBorderView;
    NSArrayController *_runContextsArrayController;
    NSArrayController *_customDataStoresArrayController;
    NSTableView *_tableView;
    NSButton *_editButton;
    DVTPopUpButtonCell *_containerPopUpCell;
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_deleteButton;
    DVTGradientImagePopUpButton *_actionPopUpButton;
    IDEControlGroup *_controlGroup;
    NSWindow *_hostWindow;
    IDEWorkspace *_workspace;
    BOOL _didSheetEnd;
    id <DVTObservingToken> _selectionObserverToken;
}

+ (id)keyPathsForValuesAffectingShouldAutocreateSchemes;
+ (void)runSheetForWindow:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)editAction:(id)arg1;
- (void)_updateEditEnabledState;
- (void)exportAction:(id)arg1;
- (void)importAction:(id)arg1;
- (void)duplicateAction:(id)arg1;
- (void)newSchemeAction:(id)arg1;
- (void)_deleteAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)deleteAction:(id)arg1;
- (void)sheetOKAction:(id)arg1;
- (void)autocreateSchemesAction:(id)arg1;
@property BOOL shouldAutocreateSchemes;
@property IDEWorkspace *workspace;
- (void)_sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_beginSheetForWindow:(id)arg1;

@end

@interface IDEInspectorArrayProperty : IDEInspectorProperty <NSTableViewDataSource>
{
    NSTableView *itemsTableView;
    NSButton *removeRowButton;
    NSButton *addRowButton;
    NSArray *reflectedValues;
    NSString *placeholder;
}

- (void)removeRow:(id)arg1;
- (BOOL)canRemoveRow;
- (void)addRow:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)bindAndConfigure;
- (double)baseline;
- (void)setCellReflectedValues:(id)arg1;
- (id)cellReflectedValues;
- (void)setReflectedValues:(id)arg1;
- (id)reflectedValues;

@end

@interface IDERFSelectedObjectsValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface IDEReviewFilesViewController : IDEViewController <IDEEditorContextDelegate, IDESourceControlConflictResolutionControllerContainer>
{
    DVTSplitView *_splitView;
    DVTBorderedView *_structureBorderedView;
    DVTBorderedView *_comparisonBorderedView;
    IDEReviewFilesNavigator *_navigator;
    IDEEditorVersionsMode *_versionsMode;
    id <DVTObservingToken> _navigatorSelectedViewIndexesObservingToken;
    id <DVTObservingToken> _navigatorSelectedObjectsObservingToken;
    id <IDEReviewFilesViewControllerDelegate> _delegate;
    IDESourceControlConflictResolutionController *_conflictResolutionController;
}

+ (id)keyPathsForValuesAffectingVersionsEditor;
+ (id)keyPathsForValuesAffectingComparisonEditor;
+ (struct CGRect)minimumSheetFrame;
+ (struct CGSize)sheetSizeForHostWindow:(id)arg1;
+ (id)reviewFilesLogAspect;
@property id <IDEReviewFilesViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) IDEEditorVersionsMode *versionsMode; // @synthesize versionsMode=_versionsMode;
@property(readonly) IDEReviewFilesNavigator *navigator; // @synthesize navigator=_navigator;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (id)workspaceForEditorContext:(id)arg1;
- (id)editorContext:(id)arg1 shouldEditNavigableItem:(id)arg2;
@property(readonly) IDESourceControlConflictResolutionController *conflictResolutionController; // @dynamic conflictResolutionController;
- (void)setupConflictResolutionController;
- (void)invalidate;
@property(readonly) IDEEditorVersionsMode *versionsEditor;
@property(readonly) IDEComparisonEditor *comparisonEditor;
- (void)viewDidInstall;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDESourceControlCommitWindowController : IDESourceControlReviewFilesWindowController <IDENavigableItemCoordinatorDelegate, NSMenuDelegate>
{
    NSSplitView *_splitView;
    DVTTextViewWithPlaceholder *_commitMessageTextView;
    NSButton *_commitButton;
    NSButton *_cancelButton;
    DVTBorderedView *_reviewFilesView;
    DVTBorderedView *_contentView;
    DVTBorderedView *_textViewBorderedView;
    NSImageView *_commitCountImageView;
    NSTextField *_commitCountTextField;
    NSString *_commitMessage;
    IDESourceControlReviewFilesDataSource *_workspaceDataSource;
    IDESourceControlReviewFilesDataSource *_fileSystemDataSource;
    IDESourceControlReviewFilesDataSource *_flatDataSource;
}

+ (id)sourceControlCommitWindowLogAspect;
@property(copy) NSString *commitMessage; // @synthesize commitMessage=_commitMessage;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)cancel:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)commit:(id)arg1;
- (void)_commit;
- (void)handleErrors:(id)arg1 forRequestsOfType:(int)arg2;
- (BOOL)shouldEnableCommitButton;
- (BOOL)commitMessageRequiredForSourceTrees:(id)arg1;
- (void)saveFilesAtFilePaths:(id)arg1;
- (unsigned long long)countOfCheckedItems;
- (unsigned long long)countOfItemsThatCanBeCommitted;
- (id)defaultDisabledFilePaths;
- (id)defaultCheckedFilePaths;
- (id)workingTreeItemFilterPredicate;
- (id)workspaceItemFilterPredicate;
- (id)navigableItem:(id)arg1 childRepresentedObjectsForArray:(id)arg2;
- (id)workingTreeWithLocation:(id)arg1;
- (id)workingTreeItems;
- (id)flatDataSource;
- (id)fileSystemDataSource;
- (id)workspaceDataSource;
- (void)beginStatusUpdate;
- (void)beginSheetForWindow:(id)arg1;
- (void)windowDidLoad;
- (id)windowNibName;
- (id)initWithWindow:(id)arg1;

@end

@interface IDESourceControlUpdateWindowController : IDESourceControlReviewFilesWindowController
{
    NSButton *_updateButton;
    NSButton *_cancelButton;
    DVTBorderedView *_reviewFilesView;
    NSSegmentedControl *_perDiffSegmentedControl;
    NSPopUpButton *_mergeStrategyPullDownMenu;
    NSArray *_operationInfo;
    IDESourceControlUpdateDataSource *_workspaceDataSource;
    IDESourceControlUpdateDataSource *_fileSystemDataSource;
    IDESourceControlUpdateDataSource *_flatDataSource;
}

+ (id)keyPathsForValuesAffectingSelectedMergeDescriptor;
@property(copy) NSArray *operationInfo; // @synthesize operationInfo=_operationInfo;
- (void)cancel:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)update:(id)arg1;
- (void)_update;
- (void)updateButtonTitle;
- (void)handleErrors:(id)arg1;
- (void)selectMergeStrategyAllDiffs:(id)arg1;
- (void)selectMergeStrategyForSelectedDiff:(id)arg1;
- (void)overwriteOriginalDocumentsWithMergeDocuments;
- (void)overwriteOriginalDocumentsWithMergeDocumentsForWorkingTree:(id)arg1;
- (void)setupConflictResolutionSupport;
- (void)setupMergeStrategyPullDown;
- (unsigned long long)totalConflictCount;
@property(readonly) DVTDiffDescriptor *selectedMergeDescriptor;
- (void)updatePerDiffSegmentedControl;
- (id)defaultDisabledFilePaths;
- (id)defaultCheckedFilePaths;
- (id)workingTreeItemFilterPredicate;
- (id)workspaceItemFilterPredicate;
- (id)workingTreeItems;
- (id)itemsForWorkingTree:(id)arg1;
- (int)statusForWorkingTreeItem:(id)arg1;
- (id)flatDataSource;
- (id)fileSystemDataSource;
- (id)workspaceDataSource;
- (id)operationInfoForWorkingTree:(id)arg1;
- (void)beginSheetForWindow:(id)arg1;
- (void)windowDidLoad;
- (id)windowNibName;
- (id)initWithWindow:(id)arg1;

@end

@interface IDESourceControlMergeWindowController : IDESourceControlReviewFilesWindowController <IDEWorkspaceDocumentProvider>
{
    NSButton *_mergeButton;
    DVTBorderedView *_reviewFilesView;
    NSButton *_deleteBranchCheckbox;
    NSSegmentedControl *_perDiffSegmentedControl;
    NSPopUpButton *_mergeStrategyPullDownMenu;
    NSArray *_operationInfo;
    IDESourceControlMergeDataSource *_workspaceDataSource;
    IDESourceControlMergeDataSource *_fileSystemDataSource;
    IDESourceControlMergeDataSource *_flatDataSource;
}

+ (id)keyPathsForValuesAffectingSelectedMergeDescriptor;
@property(copy) NSArray *operationInfo; // @synthesize operationInfo=_operationInfo;
- (void)cancel:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)merge:(id)arg1;
- (void)_merge;
- (void)handleErrors:(id)arg1;
- (void)selectMergeStrategyAllDiffs:(id)arg1;
- (void)selectMergeStrategyForSelectedDiff:(id)arg1;
- (void)overwriteOriginalDocumentsWithMergeDocuments;
- (void)overwriteOriginalDocumentsWithMergeDocumentsForWorkingTree:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupConflictResolutionSupport;
- (void)setupMergeStrategyPullDown;
- (unsigned long long)totalConflictCount;
@property(readonly) DVTDiffDescriptor *selectedMergeDescriptor;
- (void)updatePerDiffSegmentedControl;
- (id)defaultDisabledFilePaths;
- (id)defaultCheckedFilePaths;
- (id)workingTreeItemFilterPredicate;
- (id)workspaceItemFilterPredicate;
- (id)workingTreeItems;
- (id)itemsForWorkingTree:(id)arg1;
- (id)flatDataSource;
- (id)fileSystemDataSource;
- (id)workspaceDataSource;
@property(readonly) IDEWorkspaceDocument *workspaceDocument;
- (id)operationInfoForWorkingTree:(id)arg1;
- (void)beginSheetForWindow:(id)arg1;
- (void)windowDidLoad;
- (id)windowNibName;
- (id)initWithWindow:(id)arg1;

@end

@interface IDEReviewFilesNavigator : IDENavigator
{
    DVTChooserView *_chooserView;
    NSTabView *_tabView;
    IDENavigatorOutlineView *_workspaceOutlineView;
    IDENavigatorOutlineView *_fileSystemOutlineView;
    IDENavigatorOutlineView *_flatOutlineView;
    IDENavigatorOutlineView *_issuesOutlineView;
    DVTBorderedView *_outerBorderedView;
    IDEReviewFilesButtonCell *_checkboxCell;
    IDEReviewFilesImageCell *_imageCell;
    NSImage *_successImage;
    NSImage *_failureImage;
    NSMutableArray *_checkedFilePaths;
    NSMutableArray *_completedFilePaths;
    NSArray *_errorFilePaths;
    NSMutableArray *_disabledFilePaths;
    NSArray *_viewChoices;
    NSIndexSet *_selectedViewIndexes;
    NSString *_selectedChoiceWithWorkspaceKey;
    NSString *_selectedChoiceWithoutWorkspaceKey;
    NSArray *_selectedFilePaths;
    DVTDocumentLocation *_selectedDocumentLocation;
    id <IDEReviewFilesDataSource> _workspaceDataSource;
    id <IDEReviewFilesDataSource> _fileSystemDataSource;
    id <IDEReviewFilesDataSource> _flatDataSource;
    id <IDEReviewFilesDataSource> _issueDataSource;
    int _activity;
    NSMutableIndexSet *_lastSelectedIndexes;
    DVTBorderedView *_filterControlBarBorderedView;
    IDENavigatorFilterControlBar *_filterControlBar;
    NSString *_filterString;
    BOOL _showFilter;
    BOOL _showCheckboxes;
}

+ (id)keyPathsForValuesAffectingFilterPredicate;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingCheckedFilePaths;
@property(copy) NSString *filterString; // @synthesize filterString=_filterString;
@property BOOL showCheckboxes; // @synthesize showCheckboxes=_showCheckboxes;
@property(copy) NSString *selectedChoiceWithoutWorkspaceKey; // @synthesize selectedChoiceWithoutWorkspaceKey=_selectedChoiceWithoutWorkspaceKey;
@property(copy) NSString *selectedChoiceWithWorkspaceKey; // @synthesize selectedChoiceWithWorkspaceKey=_selectedChoiceWithWorkspaceKey;
@property BOOL showFilter; // @synthesize showFilter=_showFilter;
@property(readonly) DVTDocumentLocation *selectedDocumentLocation; // @synthesize selectedDocumentLocation=_selectedDocumentLocation;
@property int activity; // @synthesize activity=_activity;
@property(copy) NSIndexSet *selectedViewIndexes; // @synthesize selectedViewIndexes=_selectedViewIndexes;
@property(readonly) NSArray *viewChoices; // @synthesize viewChoices=_viewChoices;
@property(copy) NSArray *errorFilePaths; // @synthesize errorFilePaths=_errorFilePaths;
@property NSMutableArray *disabledFilePaths; // @synthesize disabledFilePaths=_disabledFilePaths;
@property NSMutableArray *completedFilePaths; // @synthesize completedFilePaths=_completedFilePaths;
@property id <IDEReviewFilesDataSource> issueDataSource; // @synthesize issueDataSource=_issueDataSource;
@property id <IDEReviewFilesDataSource> flatDataSource; // @synthesize flatDataSource=_flatDataSource;
@property id <IDEReviewFilesDataSource> fileSystemDataSource; // @synthesize fileSystemDataSource=_fileSystemDataSource;
@property id <IDEReviewFilesDataSource> workspaceDataSource; // @synthesize workspaceDataSource=_workspaceDataSource;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 childItemsForItem:(id)arg2;
- (id)failureImage;
- (id)successImage;
- (id)imageCell;
- (id)checkboxCell;
- (id)navigableItemsInOutlineView:(id)arg1 forFilePaths:(id)arg2;
- (id)navigableChildItemOfItem:(id)arg1 matchingFilePath:(id)arg2;
- (void)uncheckItemsAtFilePaths:(id)arg1;
- (void)refreshItemsAtFilePaths:(id)arg1;
@property(readonly) IDESelection *contextMenuSelection;
- (id)contextMenuSelectedRowIndexes;
- (id)contextMenuSelectedRowIndex;
@property NSMenu *contextMenu;
- (id)filterPredicate;
- (void)updateSelectedDocumentLocation;
@property NSMutableArray *checkedFilePaths; // @synthesize checkedFilePaths=_checkedFilePaths;
@property(readonly) IDENavigatorOutlineView *currentOutlineView;
- (void)setupViewChoices;
- (void)reloadAvailableNavigators;
- (void)setSelectedNavigableItems:(id)arg1 forOutlineView:(id)arg2;
- (id)selectedNavigableItemsOfOutlineView:(id)arg1;
- (void)setSelectedFilePaths:(id)arg1 forOutlineView:(id)arg2;
- (id)selectedFilePathsOfOutlineView:(id)arg1;
@property(retain) NSMutableArray *selectedFilePaths;
- (id)domainIdentifier;
@property(readonly) IDENavigatorOutlineView *issuesOutlineView;
@property(readonly) IDENavigatorOutlineView *flatOutlineView;
@property(readonly) IDENavigatorOutlineView *fileSystemOutlineView;
@property(readonly) IDENavigatorOutlineView *workspaceOutlineView;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEReviewFilesButtonCell : NSButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEReviewFilesImageCell : NSImageCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEStructureEditingAssistantContext : IDEAssistantContext
{
    NSString *_assistantIdentifier;
    id _acceptBlock;
    IDEContainer *_targetContainer;
    id <DVTObservingToken> _targetContainerValidObservationToken;
    unsigned long long _inputDragOperation;
    NSArray *_fileURLs;
    NSArray *_makefileURLs;
    NSArray *_templates;
    unsigned long long _dragOperation;
    BOOL _useMakefileProject;
    BOOL _skipAssistant;
}

@property unsigned long long dragOperation; // @synthesize dragOperation=_dragOperation;
@property(copy) NSArray *templates; // @synthesize templates=_templates;
@property BOOL useMakefileProject; // @synthesize useMakefileProject=_useMakefileProject;
@property(copy) NSArray *makefileURLs; // @synthesize makefileURLs=_makefileURLs;
@property(copy) NSArray *fileURLs; // @synthesize fileURLs=_fileURLs;
@property unsigned long long inputDragOperation; // @synthesize inputDragOperation=_inputDragOperation;
@property IDEContainer *targetContainer; // @synthesize targetContainer=_targetContainer;
@property(copy) id acceptBlock; // @synthesize acceptBlock=_acceptBlock;
@property BOOL skipAssistant; // @synthesize skipAssistant=_skipAssistant;
@property(copy) NSString *assistantIdentifier; // @synthesize assistantIdentifier=_assistantIdentifier;
- (void)takeInputFromDraggingInfo:(id)arg1;
- (void)_addItemsFromDraggingInfo:(id)arg1;
- (void)_configureForOnlyDraggingProjects;
- (id)_makefilesContainedInFileURLs:(id)arg1;
- (id)init;

@end

@interface IDEComparisonNavTimelineBar : IDEViewController
{
    IDEComparisonEditorTimelineNavBar *_navTimelineBarContainerView;
    NSWindow *_attachedWindow;
    id _notificationToken;
    IDEComparisonNavTimelineView *_timelineView;
    IDEComparisonEditor *_comparisonEditor;
}

@property IDEComparisonEditor *comparisonEditor; // @synthesize comparisonEditor=_comparisonEditor;
@property IDEComparisonNavTimelineView *timelineView; // @synthesize timelineView=_timelineView;
@property id notificationToken; // @synthesize notificationToken=_notificationToken;
@property IDEComparisonEditorTimelineNavBar *navTimelineBarContainerView; // @synthesize navTimelineBarContainerView=_navTimelineBarContainerView;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)layoutContainerView;
@property(readonly) IDEPathControl *secondaryPathControl;
@property(readonly) IDEPathControl *primaryPathControl;
@property BOOL hideTimelineButton;
@property BOOL hideSecondaryPathControl;
@property NSWindow *attachedWindow;
- (void)layoutAttachedWindow;
- (void)toggleTimelineVisibility:(id)arg1;
- (void)hideTimeline;
- (void)showTimeline;
- (void)viewWillUninstall;
- (void)loadView;
- (id)initWithComparisonEditor:(id)arg1;

@end

@interface IDEComparisonToolbar : IDEViewController <NSSplitViewDelegate>
{
    IDEComparisonEditor *_comparisonEditor;
    DVTBorderedView *_toolbarContainerView;
    DVTSegmentedControl *_submodeSegmentedControl;
}

+ (id)keyPathsForValuesAffectingEditorSubmode;
@property IDEComparisonEditor *comparisonEditor; // @synthesize comparisonEditor=_comparisonEditor;
@property DVTSegmentedControl *submodeSegmentedControl; // @synthesize submodeSegmentedControl=_submodeSegmentedControl;
@property DVTBorderedView *toolbarContainerView; // @synthesize toolbarContainerView=_toolbarContainerView;
@property int editorSubmode;
- (void)viewDidInstall;
- (void)loadView;
- (id)initWithComparisonEditor:(id)arg1;

@end

@interface IDESourceControlLogItemViewController : DVTViewController
{
    IDESourceControlNameTokenView *_nameTokenView;
    DVTBorderedView *_borderedView;
    NSTextField *_messageTextField;
    NSTextField *_revisionTextField;
    NSButton *_moreTextButton;
    NSTextField *_dateTextField;
    IDESourceControlLogItem *_logItem;
    BOOL _messageTextFits;
    BOOL _allMesssageShouldFit;
    BOOL _isResizing;
    BOOL _hasResizedView;
    double _minHeight;
    IDESourceControlLogViewController *_owningController;
    id <DVTObservingToken> _logTableViewBoundsChangedToken;
}

+ (double)_setStyleAndComputeRequiredTextHeightForMessage:(id)arg1 withCurrentTextFrame:(struct CGRect)arg2;
+ (double)defaultMaxSize;
+ (id)messageTextAttributes;
+ (double)minHeight;
+ (id)defaultViewNibName;
+ (void)initialize;
@property BOOL hasResizedView; // @synthesize hasResizedView=_hasResizedView;
@property BOOL messageTextFits; // @synthesize messageTextFits=_messageTextFits;
@property NSTextField *revisionTextField; // @synthesize revisionTextField=_revisionTextField;
@property IDESourceControlLogViewController *owningController; // @synthesize owningController=_owningController;
@property IDESourceControlLogItem *logItem; // @synthesize logItem=_logItem;
@property NSTextField *dateTextField; // @synthesize dateTextField=_dateTextField;
@property NSButton *moreTextButton; // @synthesize moreTextButton=_moreTextButton;
@property NSTextField *messageTextField; // @synthesize messageTextField=_messageTextField;
@property DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
- (void)goToDiff:(id)arg1;
- (void)goToCompare:(id)arg1;
- (void)goToRevision:(id)arg1;
- (void)compareToPriorRevision:(id)arg1;
- (void)cleanup;
- (BOOL)sizeToFitMessage:(double)arg1;
- (BOOL)resizeToFitMessage;
- (void)sizeToFullyFit:(id)arg1;
- (BOOL)drawsShadow;
- (id)authorNameKeyPath;
- (id)displayDate;
- (id)displayRevision;
- (id)displayLogItemMessage;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_updateFrame;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface IDESourceControlLogViewController : IDEViewController
{
    DVTDynamicTableView *_logTableView;
    DVTBorderedView *_loadMoreView;
    NSButton *_loadMoreButton;
    NSTextField *_loadMoreText;
    NSImageView *_loadMoreImage;
    NSProgressIndicator *_loadMoreProgress;
    NSProgressIndicator *_logProgressIndicator;
    DVTBorderedView *_borderView;
    NSMutableArray *_logEntriesViews;
    BOOL _moreEntriesAvailable;
    IDESourceControlLog *_log;
    id <IDESourceControlLogControllerDelegate> _delegate;
    IDESourceControlTreeItem *_sourceTreeItem;
    NSArray *_pendingLogEntries;
    IDESourceControlBranch *_selectedBranch;
    id <DVTObservingToken> _sourceTreeReachabilityObservingToken;
}

+ (id)defaultViewNibName;
+ (id)logAspect;
+ (void)initialize;
@property IDESourceControlBranch *selectedBranch; // @synthesize selectedBranch=_selectedBranch;
@property(readonly) DVTDynamicTableView *logTableView; // @synthesize logTableView=_logTableView;
@property IDESourceControlTreeItem *sourceTreeItem; // @synthesize sourceTreeItem=_sourceTreeItem;
@property id <IDESourceControlLogControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property DVTBorderedView *borderView; // @synthesize borderView=_borderView;
- (long long)dynamicTableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInDynamicTableView:(id)arg1;
- (id)dynamicTableView:(id)arg1 viewForRow:(long long)arg2 inSection:(long long)arg3;
- (double)dynamicTableView:(id)arg1 heightForRow:(long long)arg2 inSection:(long long)arg3;
- (double)estimatedHeightForLogItem:(id)arg1;
- (BOOL)isLoadMoreViewInRow:(long long)arg1 inSection:(long long)arg2;
- (id)dynamicTableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)dynamicTableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)logItemViewControllerForRow:(long long)arg1 inSection:(long long)arg2 createIfNeeded:(BOOL)arg3;
- (id)logItemForRow:(long long)arg1 inSection:(long long)arg2;
- (void)clearAuthorPairing:(id)arg1;
- (void)ABPersonSelected:(id)arg1 forAuthor:(id)arg2;
- (void)loadEntriesFromRevision:(id)arg1;
- (id)createLogItemViewControllerWithLogItem:(id)arg1;
- (long long)countOfLogItemsInSection:(long long)arg1;
- (void)clearLog;
- (void)reloadLog;
- (void)loadMore:(id)arg1;
- (void)updateBoundSourceTreeItem;
- (void)updateBoundComparisonDocumentLocation;
- (id)dvtExtraBindings;
@property(readonly) BOOL displayFilesChanged;
@property(readonly) NSColor *rowBackgroundColor2;
@property(readonly) NSColor *rowBackgroundColor1;
@property(readonly) NSGradient *headerBackgroundGradient;
@property(readonly) NSColor *headerTextColor;
@property(readonly) NSFont *headerFont;
@property(readonly) double headerHeight;
@property(readonly) Class logItemViewControllerClass;
- (void)notifySourceLogHeightChanged:(id)arg1;
- (void)compareChangesMadeForLogItem:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;

@end

@interface IDETestRunPhaseSheetController : IDEViewController <IDEFilePickerViewDelegate>
{
    DVTOutlineView *_outlineView;
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_deleteButton;
    DVTBorderedView *_glassBar;
    NSSearchField *_searchField;
    DVTTabChooserView *_tabChooser;
    IDECapsuleListView *_capsuleListView;
    DVTBorderedView *_capsuleListEnclosingBorderedView;
    NSPopUpButton *_macroExpansionRunnableBuildablesPopUp;
    NSBox *_dividerLine;
    NSTabView *_tabView;
    DVTChoice *_infoChoice;
    DVTChoice *_conditionsChoice;
    IDEArgumentsCapsuleSheetController *_argumentsViewController;
    IDEEnvironmentVariablesCapsuleSheetController *_environmentVariablesViewController;
    IDEScheme *_runContext;
    IDEWorkspace *_workspace;
    IDETestSchemeAction *_runPhase;
    NSArray *_debuggerSpecifiers;
    NSString *_filterString;
    NSMutableSet *_searchedTestables;
    NSMutableSet *_testableObservingTokens;
    NSMapTable *_subtestObservingTokenMapTable;
    id <DVTObservingToken> _launchActionArgsEnvLinkObservingToken;
    id <DVTObservingToken> _runContextObservingToken;
}

+ (void)initialize;
@property(copy) NSString *filterString; // @synthesize filterString=_filterString;
@property DVTTabChooserView *tabChooser; // @synthesize tabChooser=_tabChooser;
@property IDETestSchemeAction *runPhase; // @synthesize runPhase=_runPhase;
@property IDEScheme *runContext; // @synthesize runContext=_runContext;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)filteredTests:(id)arg1;
- (id)filteredTestableReferences;
- (BOOL)doesFilterStringIncludeTestable:(id)arg1;
- (BOOL)doesFilterStringIncludeTest:(id)arg1;
- (BOOL)doesFilterStringIncludeName:(id)arg1;
- (BOOL)isTestActive:(id)arg1;
- (BOOL)isTestEditable:(id)arg1;
- (id)testableReferenceForTest:(id)arg1;
- (BOOL)canExpandTestableReference:(id)arg1;
- (void)indexChanged:(id)arg1;
- (void)loadTestsForTestable:(id)arg1;
- (id)_iconForBuildable:(id)arg1;
- (void)_macroExpansionRunnableBuildableSelected:(id)arg1;
- (void)_updateMacroExpansionRunnablePopUpSelection;
- (void)_updateMacroExpansionRunnablePopUp;
- (void)_selectedSchemeChanged:(id)arg1;
@property IDEDebuggerSpecifier *selectedDebuggerSpecifier;
- (void)_setLauncherBasedOnSelectedDebugger;
@property(readonly) NSArray *debuggerSpecifiers;
@property IDEWorkspace *workspace;
- (BOOL)validateMenuItem:(id)arg1;
- (void)deleteBlueprintsAction:(id)arg1;
- (void)filePickerView:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forTableColumn:(id)arg4 item:(id)arg5;
- (void)addBlueprintsAction:(id)arg1;
- (BOOL)_shouldEnableFilePickerItem:(id)arg1;
- (id)testableProviders;
- (void)_updateDeleteButton;
- (BOOL)_getItemsToDelete:(id *)arg1;
- (void)toggleTests:(id)arg1;
- (void)setItem:(id)arg1 enabled:(BOOL)arg2 recursively:(BOOL)arg3;
- (id)currentToggleItemsAndEnable:(char *)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)invalidate;
- (void)loadView;
- (void)updateBoundContent;
- (void)updateBoundIDEWorkspaceBinding;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDETestRunPhaseTestableProviderWrapper : NSObject <IDENavigableItemRepresentation>
{
    id <IDETestableProvider> _provider;
}

+ (id)keyPathsAffectingTestableWrappers;
@property(readonly) id <IDETestableProvider> provider; // @synthesize provider=_provider;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@property(readonly) NSArray *testableWrappers;
- (id)initWithTestableProvider:(id)arg1;

// Remaining properties
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isMajorGroup;

@end

@interface IDETestRunPhaseTestableWrapper : NSObject <IDENavigableItemRepresentation>
{
    id <IDETestable> _testable;
}

@property(readonly) id <IDETestable> testable; // @synthesize testable=_testable;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
- (id)initWithTestable:(id)arg1;

// Remaining properties
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isMajorGroup;

@end

@interface IDECapsuleFooterView : DVTAutoLayoutView
{
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_removeButton;
    NSTextField *_labelField;
}

@property(readonly) DVTGradientImageButton *removeButton; // @synthesize removeButton=_removeButton;
@property(readonly) DVTGradientImageButton *addButton; // @synthesize addButton=_addButton;
- (void)layoutBottomUp;
- (void)layoutTopDown;
@property(copy) NSString *label;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDECapsuleFooterViewRoundedButtonCell : DVTGradientImageButtonCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDECapsuleView : DVTDisclosureView <NSTextFieldDelegate>
{
    IDECapsuleFooterView *_footerView;
    id <IDECapsuleViewDelegate> _delegate;
    NSTrackingArea *_titleCursorArea;
    IDEViewController<IDECapsuleViewController> *_viewController;
    id _frameChangedObserver;
    id <DVTObservingToken> _disclosedObserver;
    struct {
        unsigned int supportedDragTypes:1;
        unsigned int acceptDrop:1;
        unsigned int validateDrop:1;
        unsigned int drawBorderBelowHeader:1;
        unsigned int canRemove:1;
        unsigned int canRename:1;
        unsigned int clickedRemoveButton:1;
        unsigned int titleForEditing:1;
        unsigned int setTitle:1;
    } _delegateRespondsTo;
    BOOL _selected;
}

@property id <IDECapsuleViewDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL selected; // @synthesize selected=_selected;
@property IDECapsuleFooterView *footerView; // @synthesize footerView=_footerView;
- (void)controlTextDidEndEditing:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_titleForDisplayChanged:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_rename:(id)arg1;
- (void)_remove:(id)arg1;
- (id)initWithCapsuleViewController:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly) BOOL _renamable;
@property(readonly) BOOL _removable;
- (void)setDisclosed:(BOOL)arg1;
- (void)setContentView:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)updateTrackingAreas;
- (void)_addTrackingArea;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)_toggleSubviewVisibility:(id)arg1;
- (BOOL)_willDrawContent;
- (BOOL)_willDrawFooter;
- (BOOL)_willDrawBorderBelowHeader;
- (struct CGRect)_footerRect;
- (struct CGRect)_headerRect;
@property(readonly) struct CGRect capsuleBounds;

@end

@interface IDECapsuleHeaderView : DVTDisclosureHeaderView
{
}

- (void)_endEditingTitleField;
- (void)_startEditingTitleFieldWithTitle:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface IDEScriptingSelect : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDEScriptingHack : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface IDESpeechAlert : IDEAlert
{
    NSString *_voice;
    NSSpeechSynthesizer *_speech;
}

@property(retain) NSString *voice; // @synthesize voice=_voice;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)availableVoices;
- (id)init;

@end

@interface IDESoundAlert : IDEAlert
{
    NSString *_soundPath;
    NSSound *_sound;
}

+ (id)systemSoundPaths;
+ (void)_addSoundsFromPath:(id)arg1 to:(id)arg2;
+ (void)initialize;
@property(retain) NSString *soundPath; // @synthesize soundPath=_soundPath;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)systemSoundPaths;
- (id)init;

@end

@interface IDEAlertViewController : IDEViewController
{
    IDEAlert *_alert;
}

+ (id)alertViewControllerForAlertIdentifier:(id)arg1;
+ (id)alertViewControllerForAlert:(id)arg1;
+ (void)initialize;
@property(retain) IDEAlert *alert; // @synthesize alert=_alert;

@end

@interface IDEAlertsView : NSView
{
    IDEAlertEvent *_alertEvent;
    NSArray *_alerts;
    NSMutableArray *_alertViewControllers;
    NSMutableArray *_dividers;
    BOOL _isTiling;
}

@property(readonly) NSArray *alertViewControllers; // @synthesize alertViewControllers=_alertViewControllers;
@property(retain) IDEAlertEvent *alertEvent; // @synthesize alertEvent=_alertEvent;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)tile;
- (double)_tile;
@property(readonly) NSArray *alerts; // @synthesize alerts=_alerts;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEFirstIssueAlert : IDEAlert
{
    NSString *_destination;
}

@property NSString *destination; // @synthesize destination=_destination;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (void)_finishSelectIssue:(id)arg1;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)findLogInItem:(id)arg1;
- (id)findLogInWorkspace:(id)arg1;
- (id)findIssue:(id)arg1 inItem:(id)arg2;
- (id)destinations;
- (id)init;

@end

@interface IDEFirstIssueAlertViewController : IDEAlertViewController
{
}

@end

@interface IDERunScriptAlert : IDEAlert
{
    NSString *_path;
}

@property(retain) NSString *path; // @synthesize path=_path;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;

@end

@interface IDERunScriptAlertViewController : IDEAlertViewController <NSOpenSavePanelDelegate>
{
    NSPopUpButton *_scriptPopUpButton;
    NSMutableArray *_recentScripts;
}

@property(retain) NSPopUpButton *scriptPopUpButton; // @synthesize scriptPopUpButton=_scriptPopUpButton;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (void)awakeFromNib;
- (void)populatePopUpButton;
- (id)_stringForPath:(id)arg1;
- (void)addPathToRecentScripts:(id)arg1;
- (void)chooseScript:(id)arg1;
- (void)selectScript:(id)arg1;
- (void)setAlert:(id)arg1;

@end

@interface IDEShowDebuggerAlert : IDEAlert
{
    NSString *_destination;
    int _action;
    int _visibility;
}

@property(nonatomic) int visibility; // @synthesize visibility=_visibility;
@property(nonatomic) int action; // @synthesize action=_action;
@property(retain, nonatomic) NSString *destination; // @synthesize destination=_destination;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (void)_runForRunGeneratesOutputEventInWorkspace:(id)arg1 context:(id)arg2 showIfOutput:(long long)arg3 hideIfNoOutput:(long long)arg4;
- (void)_resetActionToExternal;
- (void)setActionWithoutKVO:(int)arg1;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)visibilities;
- (id)actions;
- (id)destinations;
- (id)init;

@end

@interface IDEShowDebuggerAlertViewController : IDEAlertViewController
{
}

@end

@interface IDEShowNavigatorAlert : IDEAlert
{
    NSString *_navigator;
    int _action;
}

+ (id)navigators;
@property(nonatomic) int action; // @synthesize action=_action;
@property(retain, nonatomic) NSString *navigator; // @synthesize navigator=_navigator;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)actions;
- (id)navigators;
- (id)init;

@end

@interface IDEShowNavigatorAlertViewController : IDEAlertViewController
{
    NSPopUpButton *_navigatorPopUpButton;
}

@property(retain) NSPopUpButton *navigatorPopUpButton; // @synthesize navigatorPopUpButton=_navigatorPopUpButton;
- (void)selectNavigator:(id)arg1;
- (void)loadView;
- (void)_synchronizePopUpButton;
- (void)setAlert:(id)arg1;

@end

@interface IDEBounceAlert : IDEAlert
{
}

- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (void)cancelAlert:(id)arg1;

@end

@interface IDEDialogAlert : IDEAlert
{
}

- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;

@end

@interface IDEBounceAlertViewController : IDEAlertViewController
{
}

@end

@interface IDEDialogAlertViewController : IDEAlertViewController
{
}

@end

@interface IDESoundAlertViewController : IDEAlertViewController
{
    NSPopUpButton *_soundPopUpButton;
    NSMutableArray *_recentSounds;
    NSSound *_playingSound;
}

@property(retain) NSPopUpButton *soundPopUpButton; // @synthesize soundPopUpButton=_soundPopUpButton;
- (void)awakeFromNib;
- (void)populatePopUpButton;
- (void)addPathToRecentSounds:(id)arg1;
- (void)chooseSound:(id)arg1;
- (void)selectSound:(id)arg1;
- (void)setAlert:(id)arg1;

@end

@interface IDESpeechAlertViewController : IDEAlertViewController
{
}

@end

@interface IDEEditorHistoryController : NSObject
{
    NSMutableArray *_previousHistoryItems;
    NSMutableArray *_nextHistoryItems;
    DVTDelayedMenuGradientImageButton *_backButton;
    DVTDelayedMenuGradientImageButton *_forwardButton;
    id <IDEEditorContextProtocol> _editorContext;
}

+ (id)keyPathsForValuesAffectingCanGoForwardByCommand;
+ (id)keyPathsForValuesAffectingCanGoBackByCommand;
+ (id)keyPathsForValuesAffectingCanSelectForwardButton;
+ (id)keyPathsForValuesAffectingCanSelectBackButton;
+ (id)_historyButtonWithImageNamed:(id)arg1 width:(double)arg2 height:(double)arg3;
+ (void)initialize;
@property(readonly) DVTDelayedMenuGradientImageButton *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(readonly) DVTDelayedMenuGradientImageButton *backButton; // @synthesize backButton=_backButton;
- (void)goBackInHistoryByCommandWithShiftPlusAlternate:(id)arg1;
- (void)goBackInHistoryByCommandWithAlternate:(id)arg1;
- (void)goForwardInHistoryByCommandWithShiftPlusAlternate:(id)arg1;
- (void)goForwardInHistoryByCommandWithAlternate:(id)arg1;
- (void)goBackInHistoryByCommand:(id)arg1;
- (void)goForwardInHistoryByCommand:(id)arg1;
- (void)_goByMenuCommandGoingForward:(BOOL)arg1;
@property(readonly) BOOL canGoForwardByCommand;
@property(readonly) BOOL canGoBackByCommand;
- (id)goBackMenu;
- (id)goForwardMenu;
- (id)_historyButtonMenuWithDirectionForward:(BOOL)arg1;
- (void)_removeUnreachableHistoryItemsGoingForward:(BOOL)arg1;
- (void)goBackInHistoryToThisEntry:(id)arg1;
- (void)goForwardInHistoryToThisEntry:(id)arg1;
- (void)goBackInHistoryEntryByButtonClick:(id)arg1;
- (void)goForwardInHistoryByButtonClick:(id)arg1;
- (void)_goByButtonClickGoingForward:(BOOL)arg1;
@property(readonly) BOOL canSelectForwardButton;
@property(readonly) BOOL canSelectBackButton;
- (BOOL)canSelectButtonGoingForward:(BOOL)arg1;
- (void)navigateAwayFromCurrentDocumentWithURL:(id)arg1;
- (id)_lastHistoryItemNotMatchingDocumentURL:(id)arg1 goingForward:(BOOL)arg2 removeMatchingHistoryItems:(BOOL)arg3;
- (void)_goNowhere;
- (void)_goToEditorHistoryItem:(id)arg1;
- (BOOL)goToHistoryItemInThisEditorContext:(id)arg1 forward:(BOOL)arg2 captureHistory:(BOOL)arg3;
- (BOOL)openExternalEditorHistoryItem:(id)arg1;
- (void)addHistoryEditorHistoryItem:(id)arg1 filterAdjacentEntriesWithIdenticalNavigableItems:(BOOL)arg2;
- (id)initWithEditorContext:(id)arg1 navBarHeight:(double)arg2;

// Remaining properties
@property(readonly) NSMutableArray *mutableNextHistoryItems; // @dynamic mutableNextHistoryItems;
@property(readonly) NSMutableArray *mutablePreviousHistoryItems; // @dynamic mutablePreviousHistoryItems;
@property(copy) NSArray *nextHistoryItems; // @dynamic nextHistoryItems;
@property(copy) NSArray *previousHistoryItems; // @dynamic previousHistoryItems;

@end

@interface IDEComparisonEditorSubmode : IDEViewController
{
    IDEComparisonEditor *_comparisonEditor;
}

+ (double)emptyEditorLoadingDelay;
- (void)_willOpenSpecifier:(id)arg1;
- (void)revertComparisonEditorStateWithDictionary:(id)arg1;
- (void)commitComparisonEditorStateToDictionary:(id)arg1;
- (id)currentSelectedDocumentLocations;
- (id)currentSelectedItems;
- (void)showEmptySecondaryEditor:(id)arg1;
- (void)showEmptyPrimaryEditor:(id)arg1;
- (void)hideSecondaryPlaceholder;
- (void)showSecondaryPlaceholder;
- (void)hidePrimaryPlaceholder;
- (void)showPrimaryPlaceholder;
@property(readonly) IDEEditor *primaryEditor;
@property(readonly) IDEEditor *keyEditor;
@property(readonly) IDEComparisonEditor *comparisonEditor;
@property(readonly) DVTDiffSession *diffSession;

@end

@interface _IDEDividerCell : NSCell
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setStringValue:(id)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEAlertsPrefsPaneController : DVTViewController
{
    NSPointerArray *_alertEvents;
    NSArray *_customAlertEvents;
    NSCell *_dividerCell;
    IDEAlertsView *_alertsView;
    NSTableView *_tableView;
    IDEControlGroup *_controlGroup;
    NSMutableArray *_observationTokens;
    NSMutableArray *_customObservationTokens;
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_removeButton;
    BOOL _ignoreNextEdit;
}

@property(copy, nonatomic) NSArray *customAlertEvents; // @synthesize customAlertEvents=_customAlertEvents;
@property(retain, nonatomic) NSButton *removeButton; // @synthesize removeButton=_removeButton;
@property(retain, nonatomic) NSButton *addButton; // @synthesize addButton=_addButton;
@property(retain, nonatomic) IDEControlGroup *controlGroup; // @synthesize controlGroup=_controlGroup;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) IDEAlertsView *alertsView; // @synthesize alertsView=_alertsView;
- (void)removeCustomAlertEvent:(id)arg1;
- (void)addCustomAlertEvent:(id)arg1;
- (void)refreshKeyBindings;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 setKeyboardShortcut:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)loadView;
- (id)view;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface IDEBuildAlertMonitor : NSObject <DVTInvalidation>
{
    IDEWorkspaceDocument *_workspaceDocument;
    id <DVTObservingToken> _executionEnvironmentBuildStateToken;
    id <DVTObservingToken> _buildOperationToken;
    id <DVTObservingToken> _issueProviderToken;
    id _buildLogObserver;
    NSMapTable *_watchedBuildLogsToBuildOperations;
    BOOL _started;
    BOOL _running;
    BOOL _stopped;
    BOOL _alertedIssue;
    BOOL _cleanupWhenDoneRecording;
    NSMutableArray *_existingIssues;
    IDEIssue *_firstIssue;
}

@property(retain) IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
- (void)_buildExistingIssues;
- (void)_addIssuesInGroup:(id)arg1 toCollection:(id)arg2;
- (void)issueManager:(id)arg1 didAddIssues:(id)arg2 forDocumentURL:(id)arg3;
- (id)currentPrimaryDocumentURL;
- (BOOL)isIssueAnExistingIssue:(id)arg1;
- (void)buildDidFinishForExecutionEnvironment:(id)arg1;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)_cleanup;
- (void)buildIsRunningForExecutionEnvironment:(id)arg1;
- (void)buildDidStartForExecutionEnvironment:(id)arg1;
- (id)verbForBuildOperationPurpose:(id)arg1;
- (id)workspaceTabController;
- (id)initWithWorkspaceTabController:(id)arg1;

@end

@interface IDERunAlertMonitor : NSObject <DVTInvalidation>
{
    IDEWorkspaceDocument *_workspaceDocument;
    IDELaunchSession *_launchSession;
    id _currentLaunchSessionStateNotificationObserver;
    id _currentLaunchSessionTargetOutputNotificationObserver;
    BOOL _started;
    BOOL _stopped;
    BOOL _targetOutputStateDetermined;
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(retain) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain) IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)executionComplete;
- (void)executionStart;
- (void)_runEvent:(id)arg1 inWorkspace:(id)arg2 modifyContext:(id)arg3;
- (void)_targetOutputStateChanged;
- (id)_createInternalHideIfNoOutputAlertForRunCompleteEvent:(id)arg1;
- (id)initWithWorkspaceTabController:(id)arg1;

@end

@interface IDETemplateOption : NSObject
{
    id <IDETemplateOptionParent> _parent;
    NSDictionary *_requiredOptions;
    NSString *_identifier;
    NSString *_name;
    NSString *_description;
    NSString *_type;
    NSString *_defaultValue;
    NSString *_emptyReplacement;
    NSString *_placeholder;
    NSString *_value;
    NSArray *_values;
    long long _sortOrder;
    BOOL _required;
    BOOL _notPersisted;
    BOOL _enabled;
}

+ (id)keyPathsForValuesAffectingBooleanValue;
+ (id)keyPathsForValuesAffectingDisplayValues;
+ (id)keyPathsForValuesAffectingHasValidValue;
@property long long sortOrder; // @synthesize sortOrder=_sortOrder;
@property(copy) NSArray *values; // @synthesize values=_values;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property(copy) NSString *type; // @synthesize type=_type;
@property(copy) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(copy) NSString *emptyReplacement; // @synthesize emptyReplacement=_emptyReplacement;
@property(copy) NSString *defaultValue; // @synthesize defaultValue=_defaultValue;
@property(copy) NSString *value; // @synthesize value=_value;
@property(copy) NSString *description; // @synthesize description=_description;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy) NSDictionary *requiredOptions; // @synthesize requiredOptions=_requiredOptions;
@property id <IDETemplateOptionParent> parent; // @synthesize parent=_parent;
- (BOOL)shouldPersistValue;
- (void)addMacroToEngine:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)uniqueIdentifier;
@property BOOL booleanValue;
@property(readonly) NSArray *displayValues;
@property(readonly) BOOL hasValidValue;
- (void)updateValueWithOptions:(id)arg1;
- (void)updateEnabledWithOptions:(id)arg1;
- (id)staticValueWithOptions:(id)arg1;
- (BOOL)validateValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)isUsableWithOptions:(id)arg1;
- (id)init;
- (id)initWithOptionInfo:(id)arg1 filePath:(id)arg2;

@end

@interface IDERunSheetPhaseModel : NSObject
{
    IDERunSheetController *_controller;
    NSArray *_subphases;
}

+ (id)keyPathsForValuesAffectingNavigableItem_subtitle;
+ (id)keyPathsForValuesAffectingRunPhase;
@property(readonly) NSArray *subphases; // @synthesize subphases=_subphases;
@property(readonly) IDERunSheetController *controller; // @synthesize controller=_controller;
@property(readonly) NSString *schemeCommandTitle;
@property(readonly) int schemePhaseModelCommand;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_subtitle;
@property(readonly) NSString *navigableItem_name;
@property(readonly) Class postActionsSubphaseModelClass;
@property(readonly) Class preActionsSubphaseModelClass;
@property(readonly) Class detailViewControllerClass;
@property(readonly) IDESchemeAction *runPhase;
- (id)initWithRunSheetController:(id)arg1;

@end

@interface IDERunSheetBuildPhaseModel : IDERunSheetPhaseModel
{
}

- (id)navigableItem_image;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetTestPhaseModel : IDERunSheetPhaseModel
{
}

- (id)schemeCommandTitle;
- (int)schemePhaseModelCommand;
- (id)navigableItem_image;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetLaunchPhaseModel : IDERunSheetPhaseModel
{
}

+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)schemeCommandTitle;
- (int)schemePhaseModelCommand;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetArchivePhaseModel : IDERunSheetPhaseModel
{
}

- (id)schemeCommandTitle;
- (int)schemePhaseModelCommand;
- (id)navigableItem_image;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetProfilePhaseModel : IDERunSheetPhaseModel
{
}

+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)schemeCommandTitle;
- (int)schemePhaseModelCommand;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetAnalyzePhaseModel : IDERunSheetPhaseModel
{
}

- (id)schemeCommandTitle;
- (int)schemePhaseModelCommand;
- (id)navigableItem_image;
- (Class)postActionsSubphaseModelClass;
- (Class)preActionsSubphaseModelClass;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetInstallPhaseModel : IDERunSheetPhaseModel
{
}

- (id)schemeCommandTitle;
- (int)schemePhaseModelCommand;
- (id)navigableItem_image;
- (Class)postActionsSubphaseModelClass;
- (Class)preActionsSubphaseModelClass;
- (Class)detailViewControllerClass;
- (id)runPhase;

@end

@interface IDERunSheetSubphaseModel : NSObject
{
    IDERunSheetPhaseModel *_phaseModel;
}

+ (id)keyPathsForValuesAffectingRunPhase;
@property(readonly) IDERunSheetPhaseModel *phaseModel; // @synthesize phaseModel=_phaseModel;
@property(readonly) NSString *schemeCommandTitle;
@property(readonly) int schemePhaseModelCommand;
@property(readonly) BOOL navigableItem_hasWork;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@property(readonly) Class detailViewControllerClass;
@property(readonly) IDESchemeAction *runPhase;
- (id)initWithRunSheetPhaseModel:(id)arg1;

@end

@interface IDERunSheetPreActionsSubphaseModel : IDERunSheetSubphaseModel
{
}

- (BOOL)navigableItem_hasWork;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;

@end

@interface IDERunSheetPrimarySubphaseModel : IDERunSheetSubphaseModel
{
}

+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (BOOL)navigableItem_hasWork;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;

@end

@interface IDERunSheetPostActionsSubphaseModel : IDERunSheetSubphaseModel
{
}

- (BOOL)navigableItem_hasWork;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;

@end

@interface IDERunSheetAnalyzePreActionsSubphaseModel : IDERunSheetSubphaseModel
{
}

- (BOOL)navigableItem_hasWork;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;

@end

@interface IDERunSheetAnalyzePostActionsSubphaseModel : IDERunSheetSubphaseModel
{
}

- (BOOL)navigableItem_hasWork;
- (id)navigableItem_name;
- (Class)detailViewControllerClass;

@end

@interface IDEContextAutocreationController : NSObject
{
    IDEWorkspace *_workspace;
    id <DVTObservingToken> _loadingObservationToken;
    id <DVTObservingToken> _scanObservationToken;
    BOOL _batchAddingBlueprints;
    BOOL _needsBatchSchemeAutocreation;
}

+ (id)contextAutocreationControllerForWorkspace:(id)arg1;
+ (id)logAspect;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (id)createSchemeForBuildable:(id)arg1 withName:(id)arg2;
- (void)_setDefaultConfigurationsInScheme:(id)arg1 forBuildable:(id)arg2;
- (id)_configFromArray:(id)arg1 matchingPrefix:(id)arg2 preferringConfig:(id)arg3;
- (void)addBuildable:(id)arg1 toScheme:(id)arg2;
- (id)_newSchemeSpecifierForName:(id)arg1;
- (id)createDefaultSchemeForBuildable:(id)arg1;
- (void)suppressAutocreationForBuildables:(id)arg1;
- (id)buildablesNotPartOfExistingContextAmongBuildables:(id)arg1;
- (BOOL)isAutocreationSuppressedForBuildable:(id)arg1;
- (id)candidateBuildablesForcedAutocreate:(BOOL)arg1;
- (void)autocreateSchemesForcingAutocreate:(BOOL)arg1;
- (id)buildablesToAutocreateSchemesForcedAutocreate:(BOOL)arg1;
- (id)parentBuildableForBuildable:(id)arg1;
- (void)didBatchAddMultipleBlueprints:(id)arg1;
- (void)willBatchAddMultipleBlueprints:(id)arg1;
- (id)initForWorkspace:(id)arg1;

@end

@interface IDESourceEditorFontAndColorItemProvider : NSObject
{
}

+ (id)fontAndColorItems;

@end

@interface IDESourceCodeFontAndColorItem : NSObject <IDEFontAndColorItem>
{
    DVTSyntaxTypeSpecification *_syntaxSpec;
}

@property(readonly) DVTSyntaxTypeSpecification *syntaxSpec; // @synthesize syntaxSpec=_syntaxSpec;
- (void)setFont:(id)arg1 forTheme:(id)arg2;
- (void)setColor:(id)arg1 forTheme:(id)arg2;
- (id)fontForTheme:(id)arg1;
- (id)colorForTheme:(id)arg1;
- (id)displayName;
@property(readonly) short nodeType;
- (id)initWithSyntaxSpec:(id)arg1;

@end

@interface IDEConsoleFontAndColorItemProvider : NSObject
{
}

+ (id)fontAndColorItems;

@end

@interface IDEConsoleFontAndColorItem : NSObject <IDEFontAndColorItem>
{
    NSString *_colorPropertyName;
    NSString *_fontPropertyName;
    NSString *_displayName;
}

- (void)setFont:(id)arg1 forTheme:(id)arg2;
- (void)setColor:(id)arg1 forTheme:(id)arg2;
- (id)fontForTheme:(id)arg1;
- (id)colorForTheme:(id)arg1;
- (id)displayName;
- (id)initWithColorPropertyName:(id)arg1 fontPropertyName:(id)arg2 displayName:(id)arg3;

@end

@interface IDESpecialPasteboardController : NSObject
{
}

+ (id)sharedController;
- (id)specialPasteboardHandlerForOutputType:(id)arg1 fromPasteboard:(id)arg2 context:(id)arg3;

@end

@interface IDEComparisonNavTimelineView : DVTBorderedView
{
    CALayer *_barLayer;
    CALayer *_leftHoverLayer;
    CALayer *_rightHoverLayer;
    CALayer *_leftSelectedLayer;
    CALayer *_rightSelectedLayer;
    CALayer *_leftSelectedTargetLayer;
    CALayer *_rightSelectedTargetLayer;
    CALayer *_rightInfoLayer;
    NSTrackingArea *_mainTrackingArea;
    CALayer *_previousHitLayer;
    struct CGPoint _centerOfMagnification;
    id _threePartTickLayer;
    NSMutableArray *_loadedRevisions;
    NSMutableDictionary *_revisionNameToRevisionTable;
    NSMutableDictionary *_revisionNameToLayerTable;
    unsigned long long _currentPage;
    id _lastRevisionAddedToBar;
    IDEWorkspace *_workspace;
    IDEEditorDocument *_document;
    NSString *_currentBranchName;
}

+ (void)initialize;
+ (struct CGImage *)revIndicatorSelectedRef;
+ (struct CGImage *)revIndicatorPendingRef;
+ (struct CGImage *)revIndicatorNormalRef;
+ (struct CGImage *)revIndicatorOverRef;
@property IDEEditorDocument *document; // @synthesize document=_document;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property unsigned long long currentPage; // @synthesize currentPage=_currentPage;
@property NSMutableDictionary *revisionNameToRevisionTable; // @synthesize revisionNameToRevisionTable=_revisionNameToRevisionTable;
@property NSMutableDictionary *revisionNameToLayerTable; // @synthesize revisionNameToLayerTable=_revisionNameToLayerTable;
@property NSMutableArray *loadedRevisions; // @synthesize loadedRevisions=_loadedRevisions;
@property id threePartTickLayer; // @synthesize threePartTickLayer=_threePartTickLayer;
@property struct CGPoint centerOfMagnification; // @synthesize centerOfMagnification=_centerOfMagnification;
@property(readonly) unsigned long long revisionsPerPage;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)updateTrackingAreas;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)animateOutWithDelegate:(id)arg1;
- (void)setupLayers;
- (void)_populateBarLayer;
- (void)_seekToSelections;
- (void)_initialPopulateBarLayer;
- (BOOL)_documentIsEdited;
- (void)_fetchRevisions;
- (void)updateBoundComparisonDocumentLocation;
- (BOOL)_detectedBranchChange;
- (id)dvtExtraBindings;
- (BOOL)_CAViewDrawIntoWindow;
- (unsigned int)_CAViewFlags;

@end

@interface _IDESourceControlComparisonEditorDataSourceInvalidationToken : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    id _invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)invalidate;
@property(readonly, getter=isValid) BOOL valid;

@end

@interface IDESourceControlComparisonEditorDataSource : NSObject <IDEComparisonEditorDataSource, DVTInvalidation>
{
    DVTStackBacktrace *_invalidationBacktrace;
    IDEEditorDocument *_originalDocument;
    BOOL _isInvalidated;
    NSOperationQueue *_navItemQueue;
}

+ (id)dataSourceLogAspect;
@property IDEEditorDocument *originalDocument; // @synthesize originalDocument=_originalDocument;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (id)documentForAncestorDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)contentStringForSecondaryEmptyEditorWithDocumentLocation:(id)arg1;
- (id)contentStringForPrimaryEmptyEditorWithDocumentLocation:(id)arg1;
- (BOOL)shouldShowEmptyEditorForSecondaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (BOOL)shouldShowEmptyEditorForPrimaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (id)_navigableItemsForDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 usingQueue:(id)arg3 completionBlock:(id)arg4;
- (id)navigableItemsForSecondaryDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 completionBlock:(id)arg3;
- (id)navigableItemsForPrimaryDocumentLocation:(id)arg1 usingNavigableItemCoordinator:(id)arg2 completionBlock:(id)arg3;
- (id)_documentLocationForNavigableItem:(id)arg1;
- (id)secondaryDocumentLocationForNavigableItem:(id)arg1;
- (id)primaryDocumentLocationForNavigableItem:(id)arg1;
- (id)_documentLocationForRevisionName:(id)arg1 inBranch:(id)arg2;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)init;

@end

@interface IDESourceControlReviewFilesDataSource : NSObject <IDEReviewFilesDataSource>
{
    IDENavigatorDataCell *_containerFileRefCell;
    IDENavigatorDataCell *_aggregateContainerFileRefCell;
    IDENavigatorDataCell *_fileReferenceCell;
    IDENavigatorDataCell *_groupCell;
    IDENavigatorDataCell *_plainObjectCell;
    IDENavigatorDataCell *_workingCopyTreeItemCell;
    IDENavigatorDataCell *_workingCopyTreeGroupCell;
    NSArray *_navigableItems;
    NSArray *_statusCategoryNames;
    NSString *_selectedRevisionIdentifier;
    NSPredicate *_filterPredicate;
    IDEWorkspace *_workspace;
}

+ (id)keyPathsForValuesAffectingFlatNavigableItems;
+ (id)keyPathsForValuesAffectingFileSystemNavigableItems;
+ (id)keyPathsForValuesAffectingWorkspaceNavigableItems;
@property(copy) NSArray *statusCategoryNames; // @synthesize statusCategoryNames=_statusCategoryNames;
@property(copy) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(copy) NSString *selectedRevisionIdentifier; // @synthesize selectedRevisionIdentifier=_selectedRevisionIdentifier;
@property(copy) NSArray *navigableItems; // @synthesize navigableItems=_navigableItems;
- (void)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forNavigableItem:(id)arg4;
- (id)reviewFilesNavigator:(id)arg1 importantFilePathsForNavigableItem:(id)arg2 excludingDisabledItems:(id)arg3;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)plainObjectCell;
- (id)workingCopyTreeGroupCell;
- (id)workingCopyTreeItemCell;
- (id)groupCell;
- (id)fileReferenceCell;
- (id)aggregateContainerFileRefCell;
- (id)containerFileRefCell;
- (id)newBasicContainerFileRefCell;
- (id)aggregateSourceControlCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)sourceControlCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)statusCellsForCategoryName:(id)arg1 representedObject:(id)arg2;
- (id)issueNavigableItems;
@property(readonly) NSArray *flatNavigableItems;
@property(readonly) NSArray *fileSystemNavigableItems;
@property(readonly) NSArray *workspaceNavigableItems;
- (id)init;

@end

@interface IDESourceControlManagerNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (void)invalidateChildItems;

@end

@interface IDESourceControlRepositoryNavigableItem : IDEKeyDrivenNavigableItem
{
}

+ (id)keyPathsForValuesAffectingReachabilityFlags;
+ (id)keyPathsForValuesAffectingReachableImage;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingURLString;
+ (id)keyPathsForValuesAffectingName;
- (void)invalidateChildItems;
- (int)reachabilityFlags;
- (id)reachableImage;
- (id)progress;
- (id)URLString;
- (id)name;

@end

@interface IDESourceControlWorkingTreeItemNavigableItem : IDEKeyDrivenNavigableItem
{
}

+ (id)keyPathsForValuesAffectingChildRepresentedObjects;
- (id)childRepresentedObjects;

@end

@interface IDESourceControlWorkingTreeNavigableItem : IDEKeyDrivenNavigableItem
{
    NSMutableArray *_computedChildItems;
}

+ (id)keyPathsForValuesAffectingReachabilityFlags;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingName;
- (id)childRepresentedObjects;
- (void)idesc_setChildRepresentedObjects:(id)arg1;
- (BOOL)isLeaf;
- (int)reachabilityFlags;
- (id)progress;
- (id)name;

@end

@interface IDESourceControlBranchNavigableItem : IDEKeyDrivenNavigableItem
{
    NSMutableArray *_computedChildItems;
    IDESourceControlTreeItem *_treeItem;
}

@property IDESourceControlTreeItem *treeItem; // @synthesize treeItem=_treeItem;
- (void)_childRepresentedObjectsFromStartingRevision:(id)arg1 completionBlock:(id)arg2;
- (id)childRepresentedObjects;
- (void)idesc_setChildRepresentedObjects:(id)arg1;
- (BOOL)isLeaf;

@end

@interface IDEFileTextSettings : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
    IDEFileReference *_fileReference;
    unsigned long long _textEncoding;
    long long _tabWidth;
    long long _indentWidth;
    unsigned long long _lineEndings;
    BOOL _usesTabs;
    BOOL _wrapsLines;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL wrapsLines; // @synthesize wrapsLines=_wrapsLines;
@property long long indentWidth; // @synthesize indentWidth=_indentWidth;
@property long long tabWidth; // @synthesize tabWidth=_tabWidth;
@property BOOL usesTabs; // @synthesize usesTabs=_usesTabs;
@property unsigned long long textEncoding; // @synthesize textEncoding=_textEncoding;
@property unsigned long long lineEndings; // @synthesize lineEndings=_lineEndings;
@property IDEFileReference *fileReference; // @synthesize fileReference=_fileReference;
- (id)description;
- (void)updateWrapLines;
- (void)updateIndentWidth;
- (void)updateTabWidth;
- (void)updateUsesTabs;
- (void)updateTextEncoding;
- (void)updateLineEndings;
- (id)_textPreferences;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)_clearFileReferenceObservations;
- (id)init;

@end

@interface IDEEditorOpenSpecifier : NSObject
{
    IDENavigableItemArchivableRepresentation *_archivableRepresentation;
    DVTDocumentLocation *_locationToSelect;
    NSURL *_documentURL;
    DVTFileDataType *_fileDataType;
    NSString *_documentExtensionIdentifier;
    id _annotationRepresentedObject;
    id _exploreAnnotationRepresentedObject;
    BOOL _annotationWantsIndicatorAnimation;
}

+ (id)structureEditorOpenSpecifierForDocumentURL:(id)arg1 inWorkspace:(id)arg2 annotationRepresentedObject:(id)arg3 wantsIndicatorAnimation:(BOOL)arg4 exploreAnnotationRepresentedObject:(id)arg5 error:(id *)arg6;
+ (id)structureEditorOpenSpecifierForDocumentLocation:(id)arg1 inWorkspace:(id)arg2 error:(id *)arg3;
+ (id)structureEditorOpenSpecifiersForNavigableItems:(id)arg1 inWorkspace:(id)arg2 error:(id *)arg3;
@property(readonly) DVTFileDataType *fileDataType; // @synthesize fileDataType=_fileDataType;
@property(readonly) IDENavigableItemArchivableRepresentation *navigableItemRepresentation; // @synthesize navigableItemRepresentation=_archivableRepresentation;
@property(readonly) DVTDocumentLocation *locationToSelect; // @synthesize locationToSelect=_locationToSelect;
@property(readonly) NSString *documentExtensionIdentifier; // @synthesize documentExtensionIdentifier=_documentExtensionIdentifier;
@property(readonly) BOOL annotationWantsIndicatorAnimation; // @synthesize annotationWantsIndicatorAnimation=_annotationWantsIndicatorAnimation;
@property(readonly) id exploreAnnotationRepresentedObject; // @synthesize exploreAnnotationRepresentedObject=_exploreAnnotationRepresentedObject;
@property(readonly) id annotationRepresentedObject; // @synthesize annotationRepresentedObject=_annotationRepresentedObject;
- (id)initWithNavigableItemArchivableRepresentation:(id)arg1 documentExtensionIdentifier:(id)arg2 error:(id *)arg3;
- (id)initWithNavigableItemArchivableRepresentation:(id)arg1 error:(id *)arg2;
- (id)initWithNavigableItem:(id)arg1 locationToSelect:(id)arg2 documentExtensionIdentifier:(id)arg3 error:(id *)arg4;
- (id)initWithNavigableItem:(id)arg1 documentExtensionIdentifier:(id)arg2 error:(id *)arg3;
- (id)initWithNavigableItem:(id)arg1 locationToSelect:(id)arg2 error:(id *)arg3;
- (id)initWithNavigableItem:(id)arg1 error:(id *)arg2;
- (id)_initWithNavigableItem:(id)arg1 locationToSelect:(id)arg2 documentExtensionIdentifier:(id)arg3 error:(id *)arg4;
- (id)_initWithNavigableItemArchivableRepresentation:(id)arg1 documentExtensionIdentifier:(id)arg2 locationToSelect:(id)arg3 annotationRepresentedObject:(id)arg4 wantsIndicatorAnimation:(BOOL)arg5 exploreAnnotationRepresentedObject:(id)arg6 error:(id *)arg7;
- (id)init;

@end

@interface IDEMiniDebuggerToolbarConsoleViewController : DVTGenericButtonViewController
{
    id <DVTObservingToken> _debugSessionStateObserverToken;
    id <DVTObservingToken> _debuggingWindowBehaviorObservingToken;
}

- (id)initWithButton:(id)arg1 actionBlock:(id)arg2 itemIdentifier:(void)arg3 window:(id)arg4;
- (void)_updateForDebuggingKVOChange:(id)arg1;

@end

@interface IDEMiniDebuggerToolbarItemProvider : NSObject <IDEToolbarItemProvider>
{
}

+ (id)itemForItemIdentifier:(id)arg1 forToolbarInWindow:(id)arg2;
+ (id)_createAppFocusToolbarItemForWindow:(id)arg1;
+ (id)_createConsoleToolbarItemForWindow:(id)arg1;
+ (id)_createPauseToolbarItemForWindow:(id)arg1;

@end

@interface IDEActivityIssuesContainerLayer : CALayer
{
    id _issueCategoryClickHandler;
    IDEActivityIssuesContainerLabelLayer *_labelLayer;
    NSMapTable *_issueCategoryToHidingValidatorMap;
    NSMapTable *_issueCategoryToLayerMap;
    NSString *_rootContainerLabel;
    NSArray *_issueCategories;
}

@property(copy) id issueCategoryClickHandler; // @synthesize issueCategoryClickHandler=_issueCategoryClickHandler;
@property(copy) NSString *rootContainerLabel; // @synthesize rootContainerLabel=_rootContainerLabel;
@property(copy) NSArray *issueCategories; // @synthesize issueCategories=_issueCategories;
- (void)layoutSublayers;
- (void)updateClickHandlerDisableState:(BOOL)arg1;
- (id)orderedIssueCategoryLayers;
- (void)addLayerForCategory:(id)arg1;
- (id)makeLayerForCategory:(id)arg1;
- (void)removeLayerForCategory:(id)arg1;
- (id)layerForCategory:(id)arg1;
- (id)effectiveIssuesContextLabel;
- (void)categoryDidChangeCount:(id)arg1;
- (void)stopObservingCategory:(id)arg1;
- (void)startObservingCategory:(id)arg1;
- (id)hidingValidatorForCategory:(id)arg1;
- (id)init;

@end

@interface IDEActivityIssueCategory : NSObject
{
    NSString *_title;
    long long _count;
    NSImage *_image;
}

@property long long count; // @synthesize count=_count;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSImage *image; // @synthesize image=_image;
- (id)description;
- (id)initWithTitle:(id)arg1 image:(id)arg2;

@end

@interface IDEActivityIssueCategoryLayer : IDEActivityClickableLayer
{
    NSAttributedString *_cachedAttributedCountString;
    NSString *_issueTypeDisplayName;
    CATextLayer *_textLayer;
    CALayer *_imageLayer;
    long long _count;
}

@property(copy) NSString *issueTypeDisplayName; // @synthesize issueTypeDisplayName=_issueTypeDisplayName;
@property long long count; // @synthesize count=_count;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
@property NSImage *image;
- (void)layoutSublayers;
- (id)attributedCountString;
- (id)textAttributes;
- (id)init;

@end

@interface IDEComparisonEditorAutoLayoutView : DVTAutoLayoutView
{
}

- (void)layoutTopDown;
- (BOOL)isFlipped;

@end

@interface IDEDebuggerMenuDelegate : NSObject
{
}

+ (id)_createEnterPIDOrProcessNameMenuItem;
+ (id)_createProcessMenuItem:(id)arg1;
+ (id)_createHeaderMenuItem:(id)arg1;
+ (void)_addMenuGroup:(id)arg1 withMenuItems:(id)arg2 toMenu:(id)arg3;
+ (id)_currentDevice;
+ (id)_activeWorkspace;
+ (id)_likelyAttachToTargetNames;
- (void)updateAttachToProcessMenuItem:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface IDEAttachToProcessHelper : NSObject <IDEAttachToProcessSheetDelegate>
{
    IDEWorkspace *_workspace;
    NSWindow *_window;
}

+ (id)_archNameForExecutableArchitecture:(int)arg1;
+ (id)_archtiectureForTarget:(id)arg1;
+ (id)debuggerPluginToUseForWorkspace:(id)arg1;
+ (void)askUserForProcessIdentifierAndAttachToItFromWorkspace:(id)arg1 windowForAlertSheet:(id)arg2;
+ (void)attachToProcess:(id)arg1 fromWorkspace:(id)arg2 windowForAlertSheet:(id)arg3;
- (void)processIDEntered:(id)arg1 debuggerToUse:(id)arg2;
- (void)processNameEntered:(id)arg1 debuggerToUse:(id)arg2;
- (void)processInformationSelected:(id)arg1 debuggerToUse:(id)arg2;
- (void)_showAlertForNonDebuggableArchitecture:(id)arg1;
- (void)_attachToPID:(int)arg1 usingDebugger:(id)arg2 displayName:(id)arg3 processPath:(id)arg4 targetArchitecture:(id)arg5;
- (void)_attachToProcessID:(id)arg1 usingDebugger:(id)arg2;
- (void)_attachToProcessName:(id)arg1 usingDebugger:(id)arg2;
- (void)_attachToProcess:(id)arg1 usingDebugger:(id)arg2;
- (id)_initWithWorkspace:(id)arg1 windowForAlertSheet:(id)arg2;

@end

@interface IDETemplateSection : NSObject
{
    DVTPlatform *_platform;
    NSMutableDictionary *_templateCategoriesByName;
    NSArray *_categories;
}

+ (id)keyPathsForValuesAffectingWillChangeDeviceSoftwareVersion;
@property DVTPlatform *platform; // @synthesize platform=_platform;
- (BOOL)navigableItem_isMajorGroup;
- (id)navigableItem_image;
- (id)navigableItem_name;
@property(readonly) NSArray *templates;
@property(readonly) NSArray *categories;
- (void)sortAllCategories;
- (void)addTemplate:(id)arg1;
- (id)categoryWithName:(id)arg1;
@property(readonly) NSString *sectionIdentifier;
- (id)init;

@end

@interface IDETemplateCategory : NSObject
{
    NSMutableArray *_templates;
    NSString *_name;
}

+ (void)initialize;
@property(copy) NSString *name; // @synthesize name=_name;
- (long long)categoryCompare:(id)arg1;
- (id)standardCategoryNames;
- (id)navigableItem_name;
- (id)init;

// Remaining properties
@property(readonly) NSMutableArray *mutableTemplates; // @dynamic mutableTemplates;
@property(readonly) NSArray *templates; // @dynamic templates;

@end

@interface IDEKeyBinding : NSObject <NSCopying>
{
    IDEKeyBindingSet *_keyBindingSet;
    NSString *_title;
    NSString *_parentTitle;
    NSString *_group;
    NSArray *_actions;
    NSMutableArray *_keyboardShortcuts;
    unsigned long long _maxNumberOfShortcuts;
    struct _IDEKeyBindingFlags _kbFlags;
}

+ (id)keyPathsForValuesAffectingIsModified;
+ (id)keyBindingWithTitle:(id)arg1 parentTitle:(id)arg2 group:(id)arg3 actions:(id)arg4 keyboardShortcuts:(id)arg5;
+ (unsigned long long)_defaultMaxNumberOfShortcuts;
@property unsigned long long maxNumberOfShortcuts; // @synthesize maxNumberOfShortcuts=_maxNumberOfShortcuts;
@property(copy) NSArray *keyboardShortcuts; // @synthesize keyboardShortcuts=_keyboardShortcuts;
@property(readonly) NSArray *actions; // @synthesize actions=_actions;
@property(readonly) NSString *group; // @synthesize group=_group;
@property(readonly) NSString *parentTitle; // @synthesize parentTitle=_parentTitle;
@property(readonly) NSString *title; // @synthesize title=_title;
@property IDEKeyBindingSet *keyBindingSet; // @synthesize keyBindingSet=_keyBindingSet;
@property(setter=setControlModifierMaskLocked:) BOOL isControlModifierMaskLocked;
@property(setter=setCommandModifierMaskLocked:) BOOL isCommandModifierMaskLocked;
@property(setter=setAlternateModifierMaskLocked:) BOOL isAlternateModifierMaskLocked;
@property(setter=setShiftModifierMaskLocked:) BOOL isShiftModifierMaskLocked;
@property(setter=setConflictedWithHotKey:) BOOL isConflictedWithHotKey;
@property(setter=setConflicted:) BOOL isConflicted;
@property(readonly) BOOL isModified;
@property(setter=setNavigation:) BOOL isNavigation;
@property(setter=setGroupedAlternate:) BOOL isGroupedAlternate;
@property(setter=setAlternate:) BOOL isAlternate;
@property(readonly) NSString *commandIdentifier;
- (void)removePrefixFromKeyboardShortcuts;
- (void)addPrefixToKeyboardShortcuts:(id)arg1;
- (void)removePrefixFromKeyboardShortcut:(id)arg1;
- (void)addPrefixKeyboardShortcut:(id)arg1 toKeyboardShortcut:(id)arg2;
- (void)removeObjectFromKeyboardShortcutsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inKeyboardShortcutsAtIndex:(unsigned long long)arg2;
@property(readonly) NSMutableArray *mutableKeyboardShortcuts;
- (void)_disablePostingKeyboardShortcutsDidChangeNotification;
- (void)_reenablePostingKeyboardShortcutsDidChangeNotification;
- (id)description;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToKeyBinding:(id)arg1;
- (id)initWithTitle:(id)arg1 parentTitle:(id)arg2 group:(id)arg3 actions:(id)arg4 keyboardShortcuts:(id)arg5;

@end

@interface IDEKeyBindingFieldCell : DVTImageAndTextCell
{
    IDEKeyBinding *_keyBinding;
    NSMutableArray *_keyboardShortcuts;
    IDEKeyBindingFieldEditor *_keyBindingFieldEditor;
    long long _selectedIndex;
    id <IDEKeyBindingFieldCellDelegate> _delegate;
    struct _IDEKeyBindingFieldCellFlags _kbcFlags;
}

@property id <IDEKeyBindingFieldCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) IDEKeyBinding *keyBinding; // @synthesize keyBinding=_keyBinding;
- (BOOL)suppressesTabAlignment;
- (void)setSuppressTabAlignment:(BOOL)arg1;
- (void)setIndexOfSelectedKeyboardShortcut:(long long)arg1;
- (long long)indexOfSelectedKeyboardShortcut;
- (void)replaceSelectionWithKeyboardShortcut:(id)arg1;
- (void)deleteKeyboardShortcut;
- (void)addKeyboardShortcut;
- (id)selectedKeyboardShortcut;
- (void)selectKeyboardShortcutAtCharacterIndex:(unsigned long long)arg1;
- (struct _NSRange)selectedCharacterRange;
- (BOOL)canDeleteKeyboardShortcut;
- (BOOL)canAddKeyboardShortcut;
- (void)endEditing:(id)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (id)fieldEditorForView:(id)arg1;
- (id)attributedStringValue;
- (void)setObjectValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDEKeyBindingFieldEditor : NSTextView <IDEApplicationEventDelegate>
{
    unsigned int _savedHotKeyOperatingMode;
    BOOL _needsToRestoreSavedHotKeyOperatingMode;
    id <DVTObservingToken> _windowDidBecomeKeyObserverToken;
    id <DVTObservingToken> _windowDidResignKeyObserverToken;
    IDEKeyBindingFieldCell *_editingCell;
    NSButton *_addKeyboardShortcutButton;
    NSButton *_deleteKeyboardShortcutButton;
    NSColor *_borderColor;
    struct CGSize _buttonOffset;
}

@property(nonatomic) struct CGSize buttonOffet; // @synthesize buttonOffet=_buttonOffset;
@property(retain, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
@property(readonly) IDEKeyBindingFieldCell *editingCell; // @synthesize editingCell=_editingCell;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)acceptableDragTypes;
- (id)writablePasteboardTypes;
- (id)readablePasteboardTypes;
- (void)endEditingKeyboardShortcut;
- (void)deleteKeyboardShortcut:(id)arg1;
- (void)addKeyboardShortcut:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)resetCursorRects;
- (BOOL)application:(id)arg1 shouldSendEvent:(id)arg2;
- (void)beginEditingKeyboardShortcutForCell:(id)arg1;
- (void)_setSelectionFromEvent:(id)arg1;
- (void)_syncDisplay;
- (void)viewDidMoveToWindow;
- (void)_restoreHotKeyOperationMode;
- (void)_disableHotKeyOperationMode;

@end

@interface IDEKeyBindingPreferenceSetManager : DVTPreferenceSetManager
{
    BOOL _settingCurrentPreferenceSet;
}

- (id)currentPreferenceSet;
- (void)setCurrentPreferenceSet:(id)arg1;

@end

@interface IDEKeyBindingPreferenceSet : NSObject <DVTPreferenceSet>
{
    NSString *_name;
    NSString *_localizedName;
    NSURL *_dataURL;
    NSImage *_image;
    DVTCustomDataSpecifier *_customDataSpecifier;
    BOOL _builtIn;
    BOOL _contentNeedsSaving;
    BOOL _isDataLoaded;
    long long _disableActivateCount;
    IDEMenuKeyBindingSet *_menuKeyBindingSet;
    IDETextKeyBindingSet *_textKeyBindingSet;
    NSArray *_cachedAllKeyBindings;
    NSMutableArray *_cachedModifiedKeyBindings;
    NSMutableArray *_cachedHotKeyboardShortcuts;
    NSMutableArray *_cachedConflictedKeyBindings;
    unsigned long long _numConflictedKeyBindings;
    unsigned long long _numConflictedHotKeyBindings;
    id <DVTObservingToken> _menuKeyBindingsObservingToken;
    id <DVTObservingToken> _textKeyBindingsObservingToken;
}

+ (id)keyPathsForValuesAffectingConflictedKeyBindings;
+ (id)keyPathsForValuesAffectingAllKeyBindings;
+ (id)titleForNewPreferenceSetFromTemplate;
+ (id)preferenceSetsListHeader;
+ (id)preferenceSetsFileExtension;
+ (id)defaultKeyForExcludedBuiltInPreferenceSets;
+ (id)defaultKeyForCurrentPreferenceSet;
+ (id)builtInPreferenceSetsDirectoryURL;
+ (id)systemPreferenceSet;
+ (id)preferenceSetGroupingName;
+ (id)preferenceSetsManager;
+ (id)_defaultKeyBindingsDictionary;
@property(readonly) NSURL *dataURL; // @synthesize dataURL=_dataURL;
@property BOOL contentNeedsSaving; // @synthesize contentNeedsSaving=_contentNeedsSaving;
@property(readonly, getter=isBuiltIn) BOOL builtIn; // @synthesize builtIn=_builtIn;
@property DVTCustomDataSpecifier *customDataSpecifier; // @synthesize customDataSpecifier=_customDataSpecifier;
@property NSImage *image; // @synthesize image=_image;
@property(readonly) NSString *localizedName; // @synthesize localizedName=_localizedName;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void)activate;
- (void)_resolveConflictWithMenuKeyBindingSet:(id)arg1 textKeyBindingSet:(id)arg2;
- (id)conflictedKeyBindingsWithKeyBinding:(id)arg1 keyboardShortcut:(id)arg2;
- (id)_conflictedKeyBindingsWithKeyBinding:(id)arg1 keyboardShortcut:(id)arg2 menuKeyBindingSet:(id)arg3 textKeyBindingSet:(id)arg4;
@property IDETextKeyBindingSet *textKeyBindingSet;
@property IDEMenuKeyBindingSet *menuKeyBindingSet;
- (void)_symbolicHotKeyDidChange;
- (unsigned long long)_numberOfConflictedHotKeyBindings;
- (unsigned long long)_numberOfConflictedKeyBindigns;
@property(readonly) NSArray *conflictedKeyBindings;
- (void)_updateConflictedKeyBindings;
- (id)_cachedHotKeyboardShortcuts;
@property(readonly) NSArray *modifiedKeyBindings;
@property(readonly) NSArray *allKeyBindings;
- (void)loadData;
- (long long)_disableActivateCount;
- (id)initWithCustomDataSpecifier:(id)arg1 basePreferenceSet:(id)arg2;
- (id)dataRepresentationWithError:(id *)arg1;
- (id)initWithName:(id)arg1 dataURL:(id)arg2;

@end

@interface IDEKeyBindingSet : NSObject
{
    NSDictionary *_dictionary;
    IDEKeyBindingPreferenceSet *_keyBindingPreferenceSet;
    NSMutableArray *_keyBindings;
    NSMutableDictionary *_keyBindingForCommandIdentifier;
    NSUndoManager *_undoManager;
    struct _IDEKeyBindingSetFlags _kbsFlags;
}

+ (id)defaultKeyBindingSet;
@property NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(copy) NSArray *keyBindings; // @synthesize keyBindings=_keyBindings;
@property IDEKeyBindingPreferenceSet *keyBindingPreferenceSet; // @synthesize keyBindingPreferenceSet=_keyBindingPreferenceSet;
@property(copy) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)activate;
- (void)didActivate;
- (void)willActivate;
- (id)conflictedKeyBindingsWithKeyboardShortcut:(id)arg1;
- (id)prefixedKeyBindingsForKeyboardshortcut:(id)arg1;
- (BOOL)isPrefixedKeyboardShortcut:(id)arg1;
- (BOOL)_keyboardShortcuts:(id)arg1 containsPrefixKeyboardShortcut:(id)arg2;
@property(readonly) NSArray *prefixedKeyboardShortcuts;
- (id)keyBindingForCommandIdentifier:(id)arg1;
- (id)keyBindingsForKeyboardShortcut:(id)arg1;
- (void)removeObjectFromKeyBindingsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inKeyBindingsAtIndex:(unsigned long long)arg2;
@property(readonly) NSMutableArray *mutableKeyBindings;
- (void)_keyBindingSetWillRemoveKeyBinding:(id)arg1;
- (void)_keyBindingSetDidInsertKeyBinding:(id)arg1;
@property(readonly) NSDictionary *deltaDictionary;
@property BOOL needsUpdateDictionary;
- (void)updateDictionary;
- (id)init;
- (id)initWithDictionary:(id)arg1;

@end

@interface IDEKeyboardShortcut : NSObject <NSCopying>
{
    NSString *_keyEquivalent;
    unsigned long long _modifierMask;
    IDEKeyboardShortcut *_nextKeyboardShortcut;
}

+ (id)translateKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
+ (id)emptyKeyboardShortcut;
+ (id)keyboardShortcutFromStringRepresentation:(id)arg1;
+ (id)keyboardShortcutWithKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
@property(copy) IDEKeyboardShortcut *nextKeyboardShortcut; // @synthesize nextKeyboardShortcut=_nextKeyboardShortcut;
@property(readonly) NSString *stringRepresentation;
@property(readonly) NSString *localizedDisplayName;
@property(readonly) NSString *displayName;
@property(readonly) NSString *localizedModifierMaskDisplayName;
@property(readonly) NSString *modifierMaskDisplayName;
@property(readonly) NSString *localizedKeyEquivalentDisplayName;
@property(readonly) NSString *keyEquivalentDisplayName;
@property(readonly, getter=isEmpty) BOOL empty;
@property(readonly) unsigned long long rawModifierMask;
@property(readonly) unsigned long long modifierMask;
@property(readonly) NSString *rawKeyEquivalent;
@property(readonly) NSString *keyEquivalent;
- (long long)compare:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToKeyboardShortcut:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
- (id)attributedStringValue;
- (double)alignmentOffset;
- (void)_computeMetaKeyGlyphWidths;
- (double)_widthOfKeyEquivalentCharacter:(unsigned short)arg1 usingAttributes:(id)arg2;

@end

@interface IDEMenuKeyBindingSet : IDEKeyBindingSet
{
    NSMutableDictionary *_menuKeyBindingForCommandIdentifier;
    NSMutableDictionary *_menuKeyBindingForCombinedIdentifier;
}

+ (id)defaultKeyBindingSet;
+ (Class)_defaultMenuKeyBindingSetClass;
+ (void)initialize;
- (void)activate;
- (id)prefixedKeyboardShortcuts;
- (void)_keyBindingSetWillRemoveKeyBinding:(id)arg1;
- (void)_keyBindingSetDidInsertKeyBinding:(id)arg1;
- (id)menuItemForCombinedIdentifier:(id)arg1;
- (id)menuKeyBindingForCombinedIdentifier:(id)arg1;
- (id)menuItemForCommandIdentifier:(id)arg1;
- (id)menuKeyBindingForCommandIdentifier:(id)arg1;
- (id)deltaDictionary;
- (void)updateDictionary;
- (id)initWithDictionary:(id)arg1;
- (void)_appendMenuKeyBindingsDictionary:(id)arg1;
- (void)_appendKeyBindingsToMenuKeyBindingSet:(id)arg1 menuDefinitionExtensionAttribute:(id)arg2 allowedEditorDocumentIdentifiers:(id)arg3;
- (void)_appendKeyBindingsToMenuKeyBindingSet:(id)arg1 menuDefinitionExtension:(id)arg2 group:(id)arg3 groupIdentifier:(id)arg4 parentTitle:(id)arg5;

@end

@interface IDETextKeyBindingSet : IDEKeyBindingSet
{
}

+ (id)_rawDefaultSystemTextBindings;
+ (id)defaultKeyBindingSet;
+ (Class)_defaultTextKeyBindingSetClass;
+ (void)initialize;
- (void)activate;
- (id)deltaDictionary;
- (void)updateDictionary;
- (id)initWithDictionary:(id)arg1;

@end

@interface _IDEKeyBindingPrefsPaneTabBorderView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEKeyBindingItem : NSObject
{
    NSString *_title;
    IDEKeyBinding *_keyBinding;
    NSMutableArray *_childItems;
}

@property(readonly) IDEKeyBinding *keyBinding; // @synthesize keyBinding=_keyBinding;
@property(copy) NSString *title; // @synthesize title=_title;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)removeObjectFromChildItemsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildItemsAtIndex:(unsigned long long)arg2;
- (id)_childItems;
@property(readonly) NSMutableArray *mutableChildItems;
@property(readonly) NSArray *childItems; // @synthesize childItems=_childItems;
- (void)setChildItems:(id)arg1;
@property(readonly) NSString *toolTip;
@property(readonly) BOOL isGroupedAlternate;
@property(readonly) BOOL isAlternate;
- (id)initWithTitle:(id)arg1 keyBinding:(id)arg2 childItems:(id)arg3;

@end

@interface IDEKeyBindingsPrefsPaneController : IDEViewController <DVTOutlineViewDelegate, IDEKeyBindingFieldCellDelegate, IDEFilterControlBarTarget>
{
    NSArray *_keyBindingItems;
    NSString *_searchString;
    int _displayScope;
    int _searchScope;
    NSString *_statusText;
    NSArray *_conflictStatusItemCells;
    NSArray *_conflictWithHotKeyStatusItemCells;
    id <DVTObservingToken> _currentPreferenceSetObservingToken;
    id <DVTObservingToken> _contentNeedsSavingObservingToken;
    unsigned long long _lastLockedModifierMask;
    unsigned long long _lastUnlockedModifierMask;
    NSButton *_displayAllScopeButton;
    NSButton *_displayMenuScopeButton;
    NSButton *_displayTextScopeButton;
    NSButton *_displayModifiedScopeButton;
    NSButton *_displayConflictsScopeButton;
    IDEFilterControlBar *_filterControlBar;
    NSMenu *_searchFieldMenu;
    DVTBorderedView *_scopeBarBorderedView;
    DVTReplacementView *_preferenceSetReplacementView;
    DVTOutlineView *_keyBindingsOutlineView;
    NSTreeController *_keyBindingsController;
    NSTextField *_statusTextField;
}

@property(copy) NSString *statusText; // @synthesize statusText=_statusText;
@property int searchScope; // @synthesize searchScope=_searchScope;
@property int displayScope; // @synthesize displayScope=_displayScope;
@property(copy) NSString *searchString; // @synthesize searchString=_searchString;
@property(copy) NSArray *keyBindingItems; // @synthesize keyBindingItems=_keyBindingItems;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)_subtitleForKeyBindingItem:(id)arg1;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)keyBindingFieldCellWillRemoveKeyboardShortcut:(id)arg1;
- (void)keyBindingCellFieldDidEndEditing:(id)arg1;
- (id)keyBindingFieldCell:(id)arg1 validatedKeyboardShortcut:(id)arg2;
- (id)keyBindingFieldCell:(id)arg1 alternateKeyBindingsForKeyBinding:(id)arg2;
- (BOOL)_getLockedModifierMask:(unsigned long long *)arg1 unlockedModifierMask:(unsigned long long *)arg2 forKeyBinding:(id)arg3;
- (id)_alternateKeyBindingsForKeyBinding:(id)arg1;
- (BOOL)keyBindingFieldCellAllowsMultipleKeyboardShortcut:(id)arg1;
- (BOOL)keyBindingFieldCell:(id)arg1 keyboardShortcutIsPrefix:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_conflictStatusButtonCellAction:(id)arg1;
- (void)_searchScopeMenuItemAction:(id)arg1;
- (void)_displayScopeButtonAction:(id)arg1;
- (void)_showConflictedKeyBindings;
- (void)_updateScopeButtons;
- (void)_showConflictedKeyBindingsStatusForKeyBinding:(id)arg1;
- (id)filterButtonMenu;
- (id)filterDefinitionIdentifier;
- (void)updateKeyBindingsItems;
- (id)_searchFilterPredicateWithSearchString:(id)arg1 scope:(int)arg2;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
@property(readonly) DVTPreferenceSetManager *preferenceSetManager;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface IDEWorkspaceUserSettingsSheetController : IDEViewController <IDEWorkspaceUserSettingsBuildFolderLocationSheetControllerDelegate, DVTFilePathFieldCellDelegate>
{
    NSWindow *_sheetWindow;
    NSButton *_doneButton;
    DVTTabChooserView *_tabChooser;
    NSWindow *_hostWindow;
    id _completionBlock;
    BOOL _didSheetEnd;
    NSString *_derivedDataCustomLocation;
    NSString *_buildSubfolderCustomName;
    int _derivedDataLocationStyle;
    int _buildLocationStyle;
    int _buildSubfolderNameStyle;
    BOOL _liveSourceIssuesEnabled;
    int _issueFilterStyle;
    int _snapshotLocationStyle;
    NSString *_snapshotCustomLocation;
    BOOL _takeSnapshotsBeforeSignificantChanges;
    NSButton *_takeSnapshotsCheckbox;
    IDEWorkspace *_workspace;
    NSArray *_selectedTabChoices;
    NSMenuItem *_workspaceRelativePathTypePopUpMenuItem;
    DVTFilePathField *_derivedDataFilePathField;
    NSTextField *_derivedDataRelativePathField;
    DVTFilePathField *_snapshotsFilePathField;
    DVTFilePathField *_derivedDataPathLabel;
    DVTFilePathField *_snapshotsPathLabel;
}

+ (id)keyPathsForValuesAffectingDerivedDataWorkspaceRelativeLocation;
+ (id)keyPathsForValuesAffectingExplanation;
+ (id)keyPathsForValuesAffectingBuildFolderDefaultName;
+ (id)keyPathsForValuesAffectingUseSnapshotCustomLocation;
+ (id)keyPathsForValuesAffectingUseBuildFolder;
+ (id)keyPathsForValuesAffectingUseCustomName;
+ (id)keyPathsForValuesAffectingUseCustomLocation;
+ (id)keyPathsForValuesAffectingDerivedDataLocationChoice;
+ (id)keyPathsForValuesAffectingSelectedTabChoice;
+ (void)runSheetForWindow:(id)arg1;
+ (void)beginSheetForWindow:(id)arg1 completionHandler:(id)arg2;
@property int issueFilterStyle; // @synthesize issueFilterStyle=_issueFilterStyle;
@property BOOL liveSourceIssuesEnabled; // @synthesize liveSourceIssuesEnabled=_liveSourceIssuesEnabled;
@property NSArray *selectedTabChoices; // @synthesize selectedTabChoices=_selectedTabChoices;
@property BOOL takeSnapshotsBeforeSignificantChanges; // @synthesize takeSnapshotsBeforeSignificantChanges=_takeSnapshotsBeforeSignificantChanges;
@property(copy) NSString *snapshotCustomLocation; // @synthesize snapshotCustomLocation=_snapshotCustomLocation;
@property int snapshotLocationStyle; // @synthesize snapshotLocationStyle=_snapshotLocationStyle;
@property(copy) NSString *buildSubfolderCustomName; // @synthesize buildSubfolderCustomName=_buildSubfolderCustomName;
@property(copy) NSString *derivedDataCustomLocation; // @synthesize derivedDataCustomLocation=_derivedDataCustomLocation;
@property int buildSubfolderNameStyle; // @synthesize buildSubfolderNameStyle=_buildSubfolderNameStyle;
@property int buildLocationStyle; // @synthesize buildLocationStyle=_buildLocationStyle;
@property int derivedDataLocationStyle; // @synthesize derivedDataLocationStyle=_derivedDataLocationStyle;
@property NSWindow *hostWindow; // @synthesize hostWindow=_hostWindow;
- (id)currentDerivedDataFolderPath;
- (void)buildFolderLocationSheetDidEndWithBuildLocationStyle:(int)arg1 buildSubfolderNameStyle:(int)arg2 buildSubfolderCustomName:(id)arg3;
- (void)showBuildFolderLocationSheet:(id)arg1;
- (id)DVTFilePathFieldCell:(id)arg1 resolvedPathForPath:(id)arg2;
- (void)_updateSnapshotsPathLabelForSelectedLocationStyle;
- (void)_updateDerivedDataPathLabelForSelectedLocationStyle;
- (void)_updatePathLabelsForSelectedLocationStyles;
- (BOOL)validateSnapshotCustomLocation:(id *)arg1 error:(id *)arg2;
- (BOOL)validateDerivedDataCustomLocation:(id *)arg1 error:(id *)arg2;
- (BOOL)validateBuildSubfolderCustomName:(id *)arg1 error:(id *)arg2;
@property(readonly) NSString *derivedDataWorkspaceRelativeLocation;
@property(readonly) NSString *snapshotDefaultLocation;
@property(readonly) NSString *buildFolderDefaultName;
@property(readonly) NSString *buildFolderDefaultLocation;
@property(readonly) BOOL useSnapshotCustomLocation;
@property(readonly) BOOL useBuildFolder;
@property(readonly) BOOL useCustomName;
@property(readonly) BOOL useCustomLocation;
@property int derivedDataLocationChoice;
@property IDEWorkspace *workspace;
- (void)loadView;
- (void)_updateSnapshotsCustomLocationFieldForPathType;
- (void)_updateDerivedDataCustomLocationFieldForPathType;
- (void)_updateCustomLocationFieldsForPathTypes;
@property DVTChoice *selectedTabChoice;
- (void)sheetDoneAction:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_beginSheetForWindow:(id)arg1 completionHandler:(id)arg2;

@end

@interface IDERefactoringSession : NSObject <DVTInvalidation>
{
    IDERefactoring *_refactoring;
    id <IDERefactoringTransformation> _transformation;
    DVTSourceExpression *_sourceExpression;
    IDEIndexSymbol *_selectedSymbol;
    id <IDERefactoringSessionDelegate> _delegate;
    NSOperationQueue *_queue;
    NSMutableDictionary *_cachedBuildSettingsForCompilationUnits;
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property IDEIndexSymbol *selectedSymbol; // @synthesize selectedSymbol=_selectedSymbol;
@property(readonly) id <IDERefactoringTransformation> transformation; // @synthesize transformation=_transformation;
@property id <IDERefactoringSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (id)snapshotDescription;
- (void)cancel;
- (void)previewChanges:(id)arg1;
- (void)start;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithRefactoring:(id)arg1 transformation:(id)arg2 sourceExpression:(id)arg3;

@end

@interface IDERefactoringWindowController : NSWindowController <IDERefactoringSessionDelegate, IDEReviewFilesDataSource, IDEComparisonEditorDataSource, NSWindowDelegate, DVTInvalidation>
{
    DVTStackView *_stackView;
    NSView *_contentContainerView;
    NSView *_reviewFilesContainerView;
    NSTextField *_transformationSummaryTextField;
    IDERefactoringRevealingView *_revealingView;
    DVTBorderedView *_reviewFilesBorderedView;
    NSView *_reviewFilesMarginView;
    NSWindow *_hostWindow;
    IDERefactoringTransformationViewController *_transformationViewController;
    IDERefactoringActionViewController *_actionViewController;
    IDEReviewFilesViewController *_reviewFilesViewController;
    IDERefactoringSession *_session;
    IDEIndexSymbol *_selectedSymbol;
    IDEWorkspaceDocument *_workspaceDocument;
    id <DVTObservingToken> _comparisonEditorObservingToken;
    NSMutableDictionary *_filesToResults;
    NSMutableDictionary *_filesToTempDocuments;
    NSMutableDictionary *_filesToSourceDocuments;
    NSMutableDictionary *_filesToOriginalDocuments;
    NSMutableArray *_sortedNewFiles;
    NSMutableDictionary *_pathsToRenamedFiles;
    id _groupForNewFiles;
    NSMutableSet *_documentsToRelease;
    NSMutableSet *_documentsToClose;
    NSArray *_workspaceNavigableItems;
    NSArray *_flatNavigableItems;
    NSArray *_issueNavigableItems;
    IDENavigatorDataCell *_containerFileReferenceDataCell;
    IDENavigatorDataCell *_fileReferenceDataCell;
    IDENavigatorDataCell *_fileReferenceWithSubtitleDataCell;
    IDENavigatorDataCell *_issueDataCell;
    IDENavigatorDataCell *_groupDataCell;
    IDENavigableItemCoordinator *_workspaceNavItemCoordinator;
    IDENavigableItemCoordinator *_flatFileNavItemCoordinator;
    IDENavigableItemCoordinator *_issueNavItemCoordinator;
    BOOL _invalidated;
    DVTStackBacktrace *_invalidationBacktrace;
    NSOperationQueue *_queue;
    BOOL _hasFatalError;
    struct dispatch_semaphore_s *_errorResponseWaiter;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
@property NSArray *issueNavigableItems; // @synthesize issueNavigableItems=_issueNavigableItems;
@property NSArray *flatNavigableItems; // @synthesize flatNavigableItems=_flatNavigableItems;
@property NSArray *workspaceNavigableItems; // @synthesize workspaceNavigableItems=_workspaceNavigableItems;
@property IDERefactoringActionViewController *actionViewController; // @synthesize actionViewController=_actionViewController;
@property IDERefactoringTransformationViewController *transformationViewController; // @synthesize transformationViewController=_transformationViewController;
@property IDERefactoringSession *session; // @synthesize session=_session;
- (BOOL)shouldSelectFirstDiff;
- (id)documentForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)_documentForLocation:(id)arg1 useTemp:(BOOL)arg2 completionBlock:(id)arg3;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)_issueCell;
- (id)_fileReferenceWithSubtitleCell;
- (id)_fileReferenceCell;
- (id)_groupCell;
- (id)_containerFileReferenceCell;
- (id)fileSystemNavigableItems;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)errorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)refactoringSession:(id)arg1 didProduceError:(id)arg2;
- (void)refactoringSession:(id)arg1 didCalculateResults:(id)arg2 issues:(id)arg3;
- (void)refactoringSession:(id)arg1 willAnalyzeFile:(id)arg2 progress:(double)arg3;
- (void)_setInitialSelectionForNavigatorOutlineView:(id)arg1 preserveNavigatorSelection:(BOOL)arg2;
- (id)_workspaceNavItemsForFilePaths:(id)arg1;
- (void)_createIssueNavigableItems:(id)arg1;
- (void)refactoringSession:(id)arg1 didProduceInitialData:(id)arg2;
- (void)setActivityString:(id)arg1;
- (void)setError:(id)arg1;
- (void)cancel;
- (void)snapshotAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)apply;
- (void)_copyChangesFromTempFiles;
- (void)_presentError:(id)arg1;
- (void)_cleanupAndEndSheet;
- (void)_addNewFilesToWorkspace;
- (unsigned long long)_insertionIndexNearFile:(id)arg1 inFileList:(id)arg2;
- (void)preview;
- (id)_traverseNavigableItems:(id)arg1 forResults:(id)arg2 referencedFiles:(id)arg3;
- (id)_snapshotContainerItem:(id)arg1 customizationBlock:(id)arg2;
- (void)_beginReviewFilesTransition;
- (void)refactoringSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSheetForWindow:(id)arg1;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithWindowNibName:(id)arg1 symbol:(id)arg2;

@end

@interface IDERefactoringViewController : DVTViewController
{
    IDERefactoringWindowController *_windowController;
}

@property IDERefactoringWindowController *windowController; // @synthesize windowController=_windowController;
- (void)allowUserInput:(BOOL)arg1;

@end

@interface IDERefactoringActionViewController : IDERefactoringViewController
{
    NSButton *_previewOrApplyButton;
    NSButton *_cancelButton;
    NSProgressIndicator *_spinner;
    NSTextField *_activityText;
    NSTextField *_errorText;
    NSImageView *_errorIcon;
    NSError *_error;
    double _progress;
}

- (void)allowCancelling:(BOOL)arg1;
- (void)allowUserInput:(BOOL)arg1;
@property(copy) NSString *activityString;
- (void)setProgress:(double)arg1;
- (void)setError:(id)arg1;
- (void)_allowPreview:(BOOL)arg1;
- (void)cancel:(id)arg1;
- (void)previewOrApply:(id)arg1;
- (void)loadView;

@end

@interface IDERefactoringTransformationViewController : IDERefactoringViewController <NSTextFieldDelegate>
{
    IDEIndexSymbol *_originalSymbol;
    IDERefactoringInputValidator *_inputValidator;
    Class _inputValidatorClass;
    BOOL _checkForReservedWords;
    id <IDERefactoringReservedWordChecking> _reservedWordChecker;
}

@property id <IDERefactoringReservedWordChecking> reservedWordChecker; // @synthesize reservedWordChecker=_reservedWordChecker;
@property IDERefactoringInputValidator *inputValidator; // @synthesize inputValidator=_inputValidator;
@property IDEIndexSymbol *originalSymbol; // @synthesize originalSymbol=_originalSymbol;
- (void)controlTextDidChange:(id)arg1;
- (id)nibBundle;
@property(readonly) NSString *previewSummary;
@property(readonly) NSDictionary *userInput;
- (void)setInitialData:(id)arg1;

@end

@interface IDERefactoringRenameViewController : IDERefactoringTransformationViewController
{
    IDERefactoringTextLayoutView *_textLayoutView;
    NSButton *_relatedFilesCheckbox;
}

- (id)previewSummary;
- (id)userInput;
- (void)allowUserInput:(BOOL)arg1;
- (void)setOriginalSymbol:(id)arg1;
- (void)loadView;
- (id)nibName;

@end

@interface IDEActivityMultiActionIndicatorLayer : IDEActivityClickableLayer
{
    CATextLayer *_textLayer;
    long long _count;
}

+ (id)defaultActionForKey:(id)arg1;
@property long long count; // @synthesize count=_count;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)layoutSublayers;
- (void)sizeToFit;
- (void)setBounds:(struct CGRect)arg1;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;
- (id)attributedStringValue;
- (id)textAttributes;
- (id)init;

@end

@interface IDEActionSliceViewController : IDEViewController <IDECapsuleViewController, IDECapsuleViewDelegate>
{
    IDEExecutionAction *_action;
    id <IDEActionSliceViewControllerDelegate> _delegate;
}

@property id <IDEActionSliceViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) IDEExecutionAction *action; // @synthesize action=_action;
- (void)capsuleView:(id)arg1 setTitle:(id)arg2;
- (void)capsuleViewDidClickRemoveButton:(id)arg1;
@property(readonly) BOOL canUndisclose;
@property BOOL canRemoveItems;
- (BOOL)capsuleViewCanBeRenamed:(id)arg1;
- (BOOL)capsuleViewCanBeRemoved:(id)arg1;
- (id)capsuleViewTitleForEditing:(id)arg1;
@property(readonly) NSString *titleForDisplay;
- (id)initWithAction:(id)arg1;

// Remaining properties
@property BOOL canAddItems;
@property(readonly) BOOL canRemove;
@property(readonly) BOOL canRename;
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) NSImage *icon;

@end

@interface IDESpecialPasteboardHandler : NSObject
{
    NSString *_outputPasteboardType;
    NSDictionary *_context;
}

@property(readonly) NSDictionary *context; // @synthesize context=_context;
@property(readonly) NSString *outputPasteboardType; // @synthesize outputPasteboardType=_outputPasteboardType;
- (id)specialPasteMenuItemTitleFromPasteboard:(id)arg1;
- (id)specialPasteboardDataFromPasteboard:(id)arg1 error:(id *)arg2;
- (id)initWithOutputPasteboardType:(id)arg1 context:(id)arg2;
- (id)init;

@end

@interface IDENewSchemeSheetController : IDEViewController
{
    NSWindow *_sheetWindow;
    NSPopUpButton *_blueprintPopUp;
    NSTextField *_nameField;
    NSButton *_okButton;
    NSWindow *_hostWindow;
    NSWindow *_workspaceWindow;
    IDEWorkspace *_workspace;
    BOOL _didSheetEnd;
    BOOL _userHasEditedName;
    NSString *_name;
}

+ (BOOL)automaticallyNotifiesObserversForName;
+ (void)runSheetForWindow:(id)arg1 workspaceWindow:(id)arg2;
@property(copy) NSString *name; // @synthesize name=_name;
- (void)windowDidResize:(id)arg1;
- (void)blueprintPopUpAction:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)okAction:(id)arg1;
- (void)_setName:(id)arg1;
@property IDEWorkspace *workspace;
- (void)_sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_beginSheetForWindow:(id)arg1 workspaceWindow:(id)arg2;
- (void)_updateOKButtonEnabledState;
- (void)_populateBlueprintPopUp;
- (id)_titleAttributedStringWithImage:(id)arg1 andTitle:(id)arg2;
- (id)_menuImageForImage:(id)arg1;

@end

@interface IDEIconTextAttachmentCell : NSTextAttachmentCell
{
}

- (struct CGPoint)cellBaselineOffset;

@end

@interface IDEInspectorActionMenuProperty : IDEInspectorAbstractActionProperty
{
    NSPopUpButton *pullDown;
}

- (id)bindAndConfigure;
- (void)setMenuItems:(id)arg1;
- (void)setTitle:(id)arg1;
- (double)baseline;

@end

@interface IDEInspectorActionButtonProperty : IDEInspectorAbstractActionProperty
{
    NSButton *button;
}

- (id)bindAndConfigure;
- (void)setTitle:(id)arg1;
- (double)baseline;

@end

@interface IDEInspectorAbstractActionProperty : IDEInspectorProperty
{
    NSArray *menuItems;
    NSString *title;
}

+ (Class)propertyClassForPropertyDefinition:(id)arg1;
@property(copy) NSString *title; // @synthesize title;
@property(copy) NSArray *menuItems; // @synthesize menuItems;
- (id)bindAndConfigure;
- (id)staticMenuItems;

@end

// Not exported
@interface IDEComparisonLineLayer : CALayer
{
    CATextLayer *_labelLayer;
    NSString *_revisionLabel;
    int _selection;
    double _magnification;
    IDEComparisonNavTimelineView *_owner;
    id _representedObject;
    NSDate *_date;
    int _lineLayerStyle;
    BOOL _mouseOver;
    BOOL _validated;
}

+ (id)layerWithOwner:(id)arg1;
+ (id)layer;
+ (struct CGImage *)tickFillImageRef;
+ (struct CGImage *)tickRightEndcapImageRef;
+ (struct CGImage *)tickLeftEndcapImageRef;
+ (void)initialize;
@property NSDate *date; // @synthesize date=_date;
@property id representedObject; // @synthesize representedObject=_representedObject;
@property BOOL validated; // @synthesize validated=_validated;
@property BOOL mouseOver; // @synthesize mouseOver=_mouseOver;
@property double magnification; // @synthesize magnification=_magnification;
@property IDEComparisonNavTimelineView *owner; // @synthesize owner=_owner;
@property int selection; // @synthesize selection=_selection;
@property int lineLayerStyle; // @synthesize lineLayerStyle=_lineLayerStyle;
- (void)updateMagnification:(BOOL)arg1;
@property(readonly) BOOL selectable;
@property NSString *revisionLabel;
- (void)drawInContext:(struct CGContext *)arg1;
@property(readonly) double tickAlpha;
- (double)elasticCenterY;
- (int)hoverIndicator;
- (double)preferredHeight;
- (id)initWithOwner:(id)arg1;
- (id)init;

@end

@interface IDEUtilityPlaceholderView : DVTAutoLayoutView
{
    NSTextField *_placeholderTextField;
}

- (void)layoutBottomUp;
@property(copy) NSString *placeholderString;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEFileIdentityAndType : IDEInspectorViewController
{
    id _sourceDescriptorDidChangeNotificationObservingToken;
}

+ (id)keyPathsForValuesAffectingDefaultTypeDisplayValue;
+ (id)keyPathsForValuesAffectingCustomResolutionStrategiesDisplayNamePopupItems;
+ (id)keyPathsForValuesAffectingStandardResolutionStrategiesDisplayNamePopupItems;
+ (id)keyPathsForValuesAffectingIsFileNameEditable;
+ (id)keyPathsForValuesAffectingIsLocationEditable;
+ (id)keyPathsForValuesAffectingChoosePathMessage;
+ (id)keyPathsForValuesAffectingPathAllowFolder;
+ (id)keyPathsForValuesAffectingPathIsFileReference;
+ (id)keyPathsForValuesAffectingFileDataTypePopupItems;
+ (id)keyPathsForValuesAffectingResolvedFilePath;
+ (id)keyPathsForValuesAffectingResolutionStrategy;
+ (id)keyPathsForValuesAffectingCustomResolutionStrategiesPopupItems;
+ (id)keyPathsForValuesAffectingPath;
+ (id)keyPathsForValuesAffectingFileType;
+ (id)keyPathsForValuesAffectingFileName;
@property(readonly) NSArray *fileDataTypePopupItems;
@property(readonly) NSArray *customResolutionStrategiesDisplayNamePopupItems;
@property(readonly) NSArray *customResolutionStrategiesPopupItems;
@property(readonly) NSArray *standardResolutionStrategiesDisplayNamePopupItems;
- (id)_resolutionContextForContentWithStrategies:(id)arg1;
@property(readonly) NSArray *standardResolutionStrategiesPopupItems;
@property(readonly) NSString *resolvedFilePath;
@property DVTReferenceResolutionStrategy *resolutionStrategy;
@property NSString *path;
@property DVTFileDataType_DisplayName *fileType;
@property(readonly) NSString *defaultTypeDisplayValue;
@property NSString *fileName;
- (BOOL)isLocationEditable;
- (id)choosePathMessage;
@property(readonly) BOOL pathAllowFolder;
@property(readonly) BOOL pathIsFileReference;
@property(readonly) BOOL isFileNameEditable;
- (void)setContent:(id)arg1;
- (void)refreshPaths;
- (void)loadView;

@end

@interface IDEGroupIdentityAndType : IDEInspectorViewController
{
}

+ (id)keyPathsForValuesAffectingCustomResolutionStrategiesDisplayNamePopupItems;
+ (id)keyPathsForValuesAffectingStandardResolutionStrategiesDisplayNamePopupItems;
+ (id)keyPathsForValuesAffectingCustomResolutionStrategiesPopupItems;
+ (id)keyPathsForValuesAffectingResolvedFilePath;
+ (id)keyPathsForValuesAffectingResolutionStrategy;
+ (id)keyPathsForValuesAffectingPath;
+ (id)keyPathsForValuesAffectingName;
@property(readonly) NSArray *customResolutionStrategiesDisplayNamePopupItems;
@property(readonly) NSArray *customResolutionStrategiesPopupItems;
@property(readonly) NSArray *standardResolutionStrategiesDisplayNamePopupItems;
- (id)_resolutionContextForContentWithStrategies:(id)arg1;
@property(readonly) NSArray *standardResolutionStrategiesPopupItems;
@property(readonly) NSString *resolvedFilePath;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)setResolutionStrategy:(id)arg1;
- (id)resolutionStrategy;
@property(copy) NSString *path;
@property NSString *name;
- (void)setContent:(id)arg1;
- (void)refreshPaths;
- (void)loadView;

@end

@interface IDELibraryController : DVTLibraryController
{
    id <DVTObservingToken> _activeEditorKVOToken;
}

- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)stopObservingActiveEditor;
- (void)startObservingActiveEditor;
- (id)workspaceWindowController;
- (void)activeEditorDidChange:(id)arg1;

@end

@interface IDEInspectorPathFieldProperty : IDEInspectorBasicStringProperty
{
}

+ (Class)propertyClassForPropertyDefinition:(id)arg1;
- (void)DVTFilePathFieldCell:(id)arg1 chooserSelectedPath:(id)arg2;
- (id)bindAndConfigure;
- (id)filePathField;

@end

@interface IDEUtilitiesMenuDelegate : NSObject
{
}

+ (void)updateUtilitiesMenu:(id)arg1 withMenuItemsForInspectorArea:(id)arg2 andLibraryArea:(id)arg3;
+ (void)_addMenuItemsForUtilityArea:(id)arg1 toUtilityMenu:(id)arg2 withKeyBindingSet:(id)arg3;
+ (id)defaultMenuKeyBindingsForGroup:(id)arg1;
+ (id)_libraryCategoryExtensions;
+ (id)_inspectorCategoryExtensions;

@end

@interface IDEArchiveRunPhaseSheetController : IDEViewController
{
    IDEScheme *_scheme;
    IDEWorkspace *_workspace;
    IDEArchiveSchemeAction *_schemeAction;
    NSTextField *_archiveNameTextField;
    NSPopUpButton *_packagingPopUp;
    NSPopUpButton *_identityPopUp;
    NSBox *_box;
    NSMenuItem *_packagingPopUpItemToRemove;
    id customArchiveNameObservingToken;
}

+ (void)initialize;
@property IDEArchiveSchemeAction *schemeAction; // @synthesize schemeAction=_schemeAction;
@property IDEScheme *scheme; // @synthesize scheme=_scheme;
@property IDEWorkspace *workspace;
- (id)_applicationToArchiveBundleIdentifiers;
- (id)_applicationPlatform;
- (id)_applicationProducts;
- (void)invalidate;
- (void)loadView;
@property(copy) NSString *customArchiveName;
- (void)updateBoundContent;
- (void)updateBoundIDEWorkspaceBinding;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDEFrameworkIdentityAndType : IDEFileIdentityAndType
{
}

@end

@interface IDEComparisonEditorTimelineNavBar : DVTBorderedView
{
    IDEComparisonEditor *_comparisonEditor;
    IDEPathControl *_primaryPathControl;
    IDEPathControl *_secondaryPathControl;
    DVTGradientImageButton *_timelineActivationButton;
    BOOL _hideTimelineButton;
    BOOL _hideSecondaryPathControl;
}

@property DVTGradientImageButton *timelineActivationButton; // @synthesize timelineActivationButton=_timelineActivationButton;
@property IDEPathControl *secondaryPathControl; // @synthesize secondaryPathControl=_secondaryPathControl;
@property IDEPathControl *primaryPathControl; // @synthesize primaryPathControl=_primaryPathControl;
@property IDEComparisonEditor *comparisonEditor; // @synthesize comparisonEditor=_comparisonEditor;
@property BOOL hideSecondaryPathControl;
@property BOOL hideTimelineButton;
- (void)layoutTopDown;
- (void)_dvt_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDERefactoringTextLayoutView : DVTAutoLayoutView
{
    NSTextField *_descriptionTextField;
    NSTextField *_newNameTextField;
    NSView *_controlsView;
    double _maxDescriptionWidth;
    double _textFieldSpacing;
}

@property NSTextField *newNameTextField; // @synthesize newNameTextField=_newNameTextField;
@property NSTextField *descriptionText; // @synthesize descriptionText=_descriptionTextField;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (void)_calculateValuesIfNeeded;

@end

@interface IDEBreakpointCell : NSButtonCell
{
    BOOL _breakpointsActivated;
    BOOL _breakpointEnabled;
    BOOL _mouseDown;
    IDEBreakpointIcon *_icon;
    double _width;
    double _height;
    double _topPad;
    double _leftPad;
    double _bottomPad;
    double _rightPad;
}

@property BOOL breakpointEnabled; // @synthesize breakpointEnabled=_breakpointEnabled;
@property BOOL breakpointsActivated; // @synthesize breakpointsActivated=_breakpointsActivated;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithHeight:(double)arg1 topAndBottomPad:(double)arg2;

@end

@interface IDEBreakpointIcon : NSObject
{
    struct CGSize _size;
    BOOL _includeBottomHighlight;
    NSImage *_enabledImage;
    NSImage *_disabledImage;
    NSImage *_deactivatedEnabledImage;
    NSImage *_deactivatedDisabledImage;
}

+ (id)_createPressedImageFromImage:(id)arg1;
+ (double)tipLengthForBreakpointHeight:(double)arg1;
- (id)_createBreakpointPathWithFrame:(struct CGRect)arg1;
- (id)_createImageUsingBorderColor:(id)arg1 topGradientColor:(id)arg2 bottomGradientColor:(id)arg3;
- (id)_deactivatedDisabledImage;
- (id)_deactivatedEnabledImage;
- (id)_disabledImage;
- (id)_enabledImage;
- (id)_cachedImageForBreakpointsActivated:(BOOL)arg1 breakpointEnabled:(BOOL)arg2 pressed:(BOOL)arg3;
- (void)drawBreakpointAtPoint:(struct CGPoint)arg1 inView:(id)arg2 breakpointsActivated:(BOOL)arg3 breakpointEnabled:(BOOL)arg4 pressed:(BOOL)arg5;
- (struct CGSize)visualPlacementSize;
- (id)initWithSize:(struct CGSize)arg1 includeBottomHighlight:(BOOL)arg2;
- (id)initWithHeight:(double)arg1 includeBottomHighlight:(BOOL)arg2;

@end

@interface IDECreateSnapshotAlert : IDEAlert
{
}

- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;

@end

@interface IDECreateSnapshotAlertViewController : IDEAlertViewController
{
}

@end

@interface IDENewSnapshotViewController : IDEViewController
{
    NSString *_snapshotName;
    NSString *_snapshotDescription;
    DVTTextViewWithPlaceholder *_descriptionTextView;
    IDEWorkspace *_workspace;
    NSWindow *_sheetWindow;
    NSWindow *_hostWindow;
    BOOL _didSheetEnd;
}

+ (void)runSheetForWindow:(id)arg1;
@property(copy) NSString *snapshotDescription; // @synthesize snapshotDescription=_snapshotDescription;
@property(copy) NSString *snapshotName; // @synthesize snapshotName=_snapshotName;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)sheetOKAction:(id)arg1;
- (void)sheetCancelAction:(id)arg1;
- (void)loadView;
- (void)_beginSheetForWindow:(id)arg1;

@end

@interface IDEShowTabAlert : IDEAlert
{
    NSString *_tabName;
}

@property(retain) NSString *tabName; // @synthesize tabName=_tabName;
- (int)alertPropertyListVersion;
- (void)runForEvent:(id)arg1 inWorkspace:(id)arg2 context:(id)arg3 completionBlock:(id)arg4;
- (id)initWithPropertyList:(id)arg1;
- (id)propertyList;
- (id)init;

@end

@interface IDEShowTabAlertViewController : IDEAlertViewController
{
}

@end

@interface IDERefactoringRevealingView : DVTAutoLayoutView
{
    double _minimumHeight;
    NSView *_revealableView;
}

@property NSView *revealableView; // @synthesize revealableView=_revealableView;
- (void)layoutTopDown;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDERefactoringRevealingAnimation : NSViewAnimation
{
    NSWindow *_window;
}

- (void)setCurrentProgress:(float)arg1;
- (id)initWithWindow:(id)arg1 animations:(id)arg2;

@end

@interface IDEGeneralPrefsPaneController : IDEViewController
{
    NSPopUpButton *_singleClickPopUpButton;
    NSPopUpButton *_optionClickPopUpButton;
    NSPopUpButton *_doubleClickPopUpButton;
    NSTextField *_singleClickTextLabel;
    NSTextField *_optionClickTextLabel;
    NSTextField *_doubleClickTextLabel;
}

@property NSTextField *doubleClickTextLabel; // @synthesize doubleClickTextLabel=_doubleClickTextLabel;
@property NSTextField *optionClickTextLabel; // @synthesize optionClickTextLabel=_optionClickTextLabel;
@property NSTextField *singleClickTextLabel; // @synthesize singleClickTextLabel=_singleClickTextLabel;
@property NSPopUpButton *doubleClickPopUpButton; // @synthesize doubleClickPopUpButton=_doubleClickPopUpButton;
@property NSPopUpButton *optionClickPopUpButton; // @synthesize optionClickPopUpButton=_optionClickPopUpButton;
@property NSPopUpButton *singleClickPopUpButton; // @synthesize singleClickPopUpButton=_singleClickPopUpButton;
- (void)resetDialogWarnings:(id)arg1;
- (id)dialogWarningsExtensionPoint;
@property BOOL shouldActivateNewTabsAndWindows;
@property unsigned long long doubleClickTarget;
@property unsigned long long optionClickTarget;
@property unsigned long long singleClickTarget;
- (void)loadView;
- (id)_labelNameForTarget:(int)arg1;
- (id)_menuNameForTarget:(int)arg1;

@end

@interface IDESourceControlQuickCheckoutWindowController : NSWindowController <DVTReplacementViewDelegate, NSWindowDelegate>
{
    DVTBorderedView *_borderedView;
    DVTReplacementView *_replacementView;
    IDESourceControlRepositoryCreationContext *_context;
    IDESourceControlRepositoryCreationStep *_currentStep;
    NSMutableArray *_stepHistory;
    NSView *_nextKeyView;
    IDESourceControlWorkingTree *_addedWorkingTree;
    IDESourceControlRequest *_checkoutRequest;
    NSString *_startingLocation;
    BOOL _successfullyCheckedOut;
}

+ (id)keyPathsForValuesAffectingCanGoBack;
+ (id)keyPathsForValuesAffectingHidePreviousButton;
+ (id)keyPathsForValuesAffectingTitleString;
+ (id)keyPathsForValuesAffectingGlobalDescriptionHidden;
+ (id)keyPathsForValuesAffectingPreviousOrDontOpenButtonTitle;
+ (id)keyPathsForValuesAffectingCancelOrShowButtonTitle;
+ (id)keyPathsForValuesAffectingForwardOrFinishButtonTitle;
+ (id)keyPathsForValuesAffectingCanGoForwardOrFinish;
+ (void)initialize;
+ (id)sharedQuickCheckoutWindowController;
@property IDESourceControlRepositoryCreationStep *currentStep; // @synthesize currentStep=_currentStep;
@property IDESourceControlRepositoryCreationContext *context; // @synthesize context=_context;
- (void)cancelSession:(id)arg1;
- (void)goBack:(id)arg1;
- (BOOL)canGoBack;
- (BOOL)hidePreviousButton;
- (void)cancel;
- (void)checkoutWithCurrentSourceTree;
- (void)goNextOrFinish:(id)arg1;
- (id)titleString;
- (BOOL)globalDescriptionHidden;
- (id)previousOrDontOpenButtonTitle;
- (id)cancelOrShowButtonTitle;
- (id)forwardOrFinishButtonTitle;
- (BOOL)canGoForwardOrFinish;
- (id)_popStepHistoryStack;
- (void)_pushStepOntoHistoryStack:(id)arg1;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (id)_openWindowTerminationDisablingReason;
- (void)awakeFromNib;
- (void)showWithStartingLocation:(id)arg1;

@end

@interface IDESourceControlCheckoutStepViewController : IDESourceControlRepositoryCreationStep
{
    NSProgressIndicator *_progressIndicator;
}

+ (id)defaultViewNibName;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
@property(readonly) NSString *checkoutString;
- (void)viewDidInstall;

@end

@interface IDESourceControlSimpleURLOnlyStepViewController : IDESourceControlURLValidationStep
{
}

+ (id)keyPathsForValuesAffectingCanFinish;
+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)defaultViewNibName;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;

@end

@interface IDESourceControlURLValidationStep : IDESourceControlRepositoryCreationStep
{
    NSTextField *_locationTextField;
    NSString *_tempLocation;
}

+ (id)keyPathsForValuesAffectingValidatingText;
+ (id)keyPathsForValuesAffectingReachableImage;
+ (id)keyPathsForValuesAffectingLocation;
- (id)validatingText;
- (id)reachableImage;
- (void)commitInformation;
- (void)_setLocation:(id)arg1;
- (void)setLocation:(id)arg1 afterDelay:(double)arg2;
@property(copy) NSString *location;
- (void)viewWillUninstall;
- (void)viewWillInstall;

@end

@interface IDESourceControlNameTypeStepViewController : IDESourceControlRepositoryCreationStep <DVTReplacementViewDelegate>
{
    NSView *_nextKeyView;
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)defaultViewNibName;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)hidePreviousButton;
- (id)extensions;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)replacementView:(id)arg1 willInstallViewController:(id)arg2;
- (void)viewDidInstall;

@end

@interface IDESourceControlRepositoryCreationContext : NSObject
{
    IDESourceControlRepository *_sourceTree;
    IDESourceControlRepository *_foundRepository;
    NSString *_wcName;
    NSURL *_workspaceURL;
    NSURL *_projectURL;
    NSError *_error;
    BOOL _defaultTrunkExists;
    BOOL _defaultBranchesExists;
    BOOL _defaultTagsExists;
}

@property BOOL defaultTagsExists; // @synthesize defaultTagsExists=_defaultTagsExists;
@property BOOL defaultBranchesExists; // @synthesize defaultBranchesExists=_defaultBranchesExists;
@property BOOL defaultTrunkExists; // @synthesize defaultTrunkExists=_defaultTrunkExists;
@property NSError *error; // @synthesize error=_error;
@property(copy) NSURL *projectURL; // @synthesize projectURL=_projectURL;
@property(copy) NSURL *workspaceURL; // @synthesize workspaceURL=_workspaceURL;
@property(copy) NSString *wcName; // @synthesize wcName=_wcName;
@property IDESourceControlRepository *foundRepository; // @synthesize foundRepository=_foundRepository;
@property IDESourceControlRepository *sourceTree; // @synthesize sourceTree=_sourceTree;
- (id)init;

@end

@interface IDESourceControlFinishedStepViewController : IDESourceControlRepositoryCreationStep
{
}

+ (id)defaultViewNibName;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)hidePreviousButton;
- (id)finishedImage;
@property(readonly) NSString *finishedString;

@end

@interface IDEInspectorPropertyContainingView : DVTAutoLayoutView <IDEInspectorPropertyContainingView>
{
    BOOL isInstalled;
}

- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)propertiesWillUninstall;
- (void)propertiesDidInstall;
@property(readonly) NSArray *orderedInspectorProperties;

@end

@interface IDESharedLibrariesPopUp : DVTHUDPopUpContentViewController
{
    id <IDEDebugSession> _debugSession;
    NSURL *_url;
    NSArray *_sharedLibraryEntries;
    DVTHUDPopUpController *_popUpWindowController;
    id _popUpWindowCloseToken;
    IDEDebugSymbolsLoadedButtonCell *_loadDebugSymbolsButtonCell;
    NSArrayController *_arrayController;
    NSTextField *_loadedModulesLabel;
    NSTableView *_tableView;
    NSTableColumn *_nameColumn;
    DVTBorderedView *_glassBar;
}

+ (BOOL)_isDebugSymbolsLoadedTableColumn:(id)arg1;
+ (void)showPopUpAtPoint:(struct CGPoint)arg1 relativeToView:(id)arg2 debugSession:(id)arg3 executableURL:(id)arg4;
@property(readonly) NSArray *sharedLibraryEntries; // @synthesize sharedLibraryEntries=_sharedLibraryEntries;
- (void)copy:(id)arg1;
- (void)_loadDebugSymbols:(id)arg1;
- (id)_loadDebugSymbolsButtonCell;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)_handleDebugSessionStateChanged:(id)arg1;
- (void)_cleanUpAfterClosingPopUpWindow;
- (void)_showPopUpAtPoint:(struct CGPoint)arg1 relativeToView:(id)arg2;
- (void)_setupGlassBar;
- (struct CGSize)doneButtonOffset;
- (void)loadView;
- (id)_initWithDebugSession:(id)arg1 executableURL:(id)arg2;

@end

@interface IDEDebugSymbolsLoadedButtonCell : NSButtonCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDESharedLibrariesPopUpTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;

@end

@interface IDESharedLibraryEntryDefaultSortDescriptor : NSSortDescriptor
{
    NSString *_executableName;
}

- (long long)compareObject:(id)arg1 toObject:(id)arg2;
- (id)initWithExecutableURL:(id)arg1;

@end

@interface IDERefactoringInputValidator : NSObject
{
    unsigned long long _numberOfMethodColons;
}

@property unsigned long long numberOfMethodColons; // @synthesize numberOfMethodColons=_numberOfMethodColons;
- (id)modifiedSignatureString;
- (id)initialSignatureString;
- (id)shouldBeShownLocalizedMessageForChar:(unsigned short)arg1;
- (id)localizedCapitalizedMethodKeyword:(id)arg1 index:(unsigned long long)arg2;
- (id)firstDigitInLocalizedMessage:(id)arg1;
- (id)reservedWordLocalizedMessage:(id)arg1;
- (id)lastColonLocalizedMessage;
- (id)firstColonLocalizedMessage;
- (id)fewerColonsLocalizedMessage:(unsigned long long)arg1;
- (id)oneFewerColonLocalizedMessage;
- (id)moreColonsLocalizedMessage:(unsigned long long)arg1;
- (id)oneMoreColonLocalizedMessage;
- (id)firstDigitLocalizedMessage;
- (id)blankLocalizedMessage;
- (id)standardCharsLocalizedMessage;
- (id)standardCharsPlusColonsLocalizedMessage;
- (BOOL)isStringValid:(id)arg1 otherStrings:(id)arg2 localizedMessage:(id *)arg3 invalidRange:(struct _NSRange *)arg4;
- (BOOL)shouldStringWithChangesBeShown:(id)arg1 localizedMessage:(id *)arg2;

@end

@interface IDERefactoringRenameInputValidator : IDERefactoringInputValidator
{
    IDEIndexSymbol *_originalSymbol;
    IDEIndex *_index;
    BOOL _symbolIsGlobal;
}

@property IDEIndex *index; // @synthesize index=_index;
@property IDEIndexSymbol *originalSymbol; // @synthesize originalSymbol=_originalSymbol;
- (BOOL)isStringValid:(id)arg1 otherStrings:(id)arg2 localizedMessage:(id *)arg3 invalidRange:(struct _NSRange *)arg4;
- (id)_sameAsExistingSymbolLocalizedMessage;
- (id)_sameAsOriginalLocalizedMessage;

@end

@interface IDEActivityPlaceholderView : NSView
{
    IDEWorkspaceWindowController *_workspaceWindowController;
    IDEActivityView *_activityView;
}

@property IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
- (id)hitTest:(struct CGPoint)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)sizeAndPositionActivityView;
- (void)sizeToFitToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;

@end

@interface IDEActivityClickableLayer : CALayer <IDEActivityClickableLayer>
{
    id _clickHandlerBlock;
    BOOL _disableClickHandler;
    BOOL _showsClickedState;
}

@property BOOL disableClickHandler; // @synthesize disableClickHandler=_disableClickHandler;
@property BOOL showsClickedState; // @synthesize showsClickedState=_showsClickedState;
@property(copy) id clickHandlerBlock; // @synthesize clickHandlerBlock=_clickHandlerBlock;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)fireClickHandler;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;

@end

@interface IDEActivityClickableTextLayer : CATextLayer <IDEActivityClickableLayer>
{
    id _clickHandlerBlock;
    BOOL _disableClickHandler;
    BOOL _showsClickedState;
}

@property(copy) id clickHandlerBlock; // @synthesize clickHandlerBlock=_clickHandlerBlock;
@property BOOL showsClickedState; // @synthesize showsClickedState=_showsClickedState;
@property BOOL disableClickHandler; // @synthesize disableClickHandler=_disableClickHandler;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)fireClickHandler;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;

@end

@interface IDEActivityPopUpBottomBarLayer : CALayer
{
    IDEActivityPopUpBottomBarDoneButtonLayer *_doneButtonLayer;
}

@property(copy) id doneButtonHandlerBlock;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEActivityPopUpBottomBarDoneButtonLayer : IDEActivityClickableLayer
{
    NSImage *_clickedContents;
    NSImage *_normalContents;
}

- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)layerShouldShowUnclickedState;
- (void)layerShouldShowClickedState;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)contentsForClickState:(BOOL)arg1;
- (id)doneStringAttributes;
- (id)doneStringShadow;

@end

@interface IDEActivityReportLayer : CALayer
{
    IDEActivityProgressIndicatorLayer *_progressIndicatorLayer;
    IDEActivityScrollingTextLayer *_scrollingTextLayer;
    long long _displayStyle;
    IDEActivityReport *_activityReport;
    CALayer *_imageLayer;
    id <DVTObservingToken> _kvoActivityReportTitleSegmentsToken;
    id <DVTObservingToken> _kvoActivityReportProgressToken;
    id <DVTObservingToken> _kvoActivityReportTitleToken;
}

+ (struct CGSize)defaultSizeForPopUpStyle;
@property long long displayStyle; // @synthesize displayStyle=_displayStyle;
@property IDEActivityReport *activityReport; // @synthesize activityReport=_activityReport;
- (void)updateImageLayer;
- (void)updateVisibilityForTextFieldAndAdjustLayoutIfNeeded;
- (void)startObservingActivityReport;
- (void)stopObservingActivityReport;
- (void)updateScrollingTextFieldStringValue;
- (id)defaultIdleTitle;
- (id)defaultReportTitle;
- (id)defaultCompletionSummary;
- (void)sizeToFit;
- (struct CGPoint)imageLayerPosition;
- (struct CGRect)scrollingTextLayerFrame;
- (struct CGRect)progressIndicatorLayerFrame;
- (id)description;
- (id)init;

@end

@interface IDEActivityTestingManager : NSObject
{
    BOOL _testing;
}

+ (id)activityTestingManagerForWorkspace:(id)arg1;
@property(getter=isTesting) BOOL testing; // @synthesize testing=_testing;

@end

@interface IDEActivityTestingActivityReporter : IDEActivityReporter
{
    id <DVTObservingToken> _kvoManagerIsTestingToken;
}

+ (void)initialize;
- (void)stopTestingActivity;
- (void)startTestingActivity;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDESourceControlUIHandler : NSObject
{
}

- (void)applicationDidActivate:(id)arg1;
- (void)authenticationNeededNotification:(id)arg1;
- (id)init;

@end

@interface IDESourceControlAuthenticationWindowController : NSWindowController
{
    NSTextField *messageTextField;
    NSTextField *infoTextField;
    NSTextField *usernameTextField;
    NSTextField *statusTextField;
    NSSecureTextField *passwordTextField;
    NSProgressIndicator *progressIndicator;
    IDESourceControlRepository *_repository;
    id _completionBlock;
    NSTimer *_autodismissTimer;
    long long _count;
    BOOL _isCheckingPassword;
}

@property(copy) id completionBlock; // @synthesize completionBlock=_completionBlock;
@property BOOL isCheckingPassword; // @synthesize isCheckingPassword=_isCheckingPassword;
- (void)dontAsk:(id)arg1;
- (void)cancel:(id)arg1;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)ok:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)autodismiss;
- (void)beginAutodismissCountdown;
- (void)testCredentialsWithCompletionBlock:(id)arg1;
- (void)presentWindow;
- (id)_openWindowTerminationDisablingReason;
- (void)presentAuthenticationWindowForRepository:(id)arg1;
- (id)windowNibName;

@end

@interface IDEToolbarStopButtonViewController : DVTGenericButtonViewController
{
    NSToolbarItem *_toolbarItem;
    id <DVTObservingToken> _workspaceIdleObservingToken;
    id <DVTObservingToken> _workspaceValidObservingToken;
    id <DVTObservingToken> _executionTrackersObservingToken;
    id <DVTObservingToken> _executionTrackersStatusObserverToken;
}

@property NSToolbarItem *toolbarItem; // @synthesize toolbarItem=_toolbarItem;
- (void)_handleExecutionTrackersChanged:(id)arg1 forExecutionEnvironment:(id)arg2;
- (void)_handleToolbarValidStateChange:(id)arg1 forWorkspace:(id)arg2;
- (void)_handleToolbarIdleStateChange:(id)arg1 forWorkspace:(id)arg2;
- (void)_setEnabled:(BOOL)arg1;
- (id)_button;
- (id)initWithButton:(id)arg1 itemIdentifier:(id)arg2 window:(id)arg3;

@end

@interface IDEHelpMenuDelegate : NSObject <NSMenuDelegate>
{
}

- (void)menuWillOpen:(id)arg1;
- (void)buildMenu:(id)arg1;

@end

@interface IDEQuickHelpConstants : NSObject
{
}

@end

@interface IDEActivityReport : NSObject <DVTProgressReporting>
{
    NSArray *_completionSummaryStringSegments;
    NSString *_completionSummaryString;
    int _options;
    long long _progress;
    double _timestamp;
    NSArray *_titleSegments;
    NSString *_title;
    NSImage *_image;
    unsigned long long _fileIOPriority;
    id _fileIOCoordinatorBlock;
}

+ (id)keyPathsForValuesAffectingCompleted;
@property(readonly) id fileIOCoordinatorBlock; // @synthesize fileIOCoordinatorBlock=_fileIOCoordinatorBlock;
@property unsigned long long fileIOPriority; // @synthesize fileIOPriority=_fileIOPriority;
@property(copy) NSArray *completionSummaryStringSegments; // @synthesize completionSummaryStringSegments=_completionSummaryStringSegments;
@property(copy) NSString *completionSummaryString; // @synthesize completionSummaryString=_completionSummaryString;
@property(readonly) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly) NSImage *image; // @synthesize image=_image;
@property long long progress; // @synthesize progress=_progress;
@property(copy) NSArray *titleSegments; // @synthesize titleSegments=_titleSegments;
@property(copy) NSString *title; // @synthesize title=_title;
@property(readonly) int options; // @synthesize options=_options;
@property(readonly) NSString *stringValue;
@property(readonly, getter=isHidden) BOOL hidden;
@property(readonly, getter=isFileIOIntensive) BOOL fileIOIntensive;
@property(readonly, getter=isPersistent) BOOL persistent;
@property(readonly) BOOL disableTitleAnimation;
@property(readonly) BOOL shouldDisplayImmediately;
@property(readonly) BOOL hidesProgress;
@property(readonly, getter=isSchemeBased) BOOL schemeBased;
@property(readonly, getter=isUserRequested) BOOL userRequested;
@property(readonly, getter=isCancelable) BOOL cancelable;
@property(readonly, getter=isCompleted) BOOL completed;
@property(readonly) NSDictionary *dictionaryRepresentation;
- (id)description;
- (id)init;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithOptions:(int)arg1 image:(id)arg2 fileIOPriority:(unsigned long long)arg3 fileIOCoordinatorBlock:(id)arg4;

@end

@interface IDEActivityReporter : NSObject
{
    DVTExtension *_representedExtension;
    IDEWorkspace *_workspace;
    NSArray *_activityReports;
    NSImage *_image;
}

+ (id)activityReporterWithExtension:(id)arg1 workspace:(id)arg2;
@property(readonly) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property DVTExtension *representedExtension; // @synthesize representedExtension=_representedExtension;
@property(readonly) NSImage *image;
- (id)newActivityReportWithTitle:(id)arg1 options:(int)arg2 image:(id)arg3;
- (id)newActivityReportWithTitle:(id)arg1 options:(int)arg2 image:(id)arg3 fileIOPriority:(unsigned long long)arg4 fileIOCoordinatorBlock:(id)arg5;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(readonly) NSArray *activityReports; // @dynamic activityReports;
@property(readonly) NSMutableArray *mutableActivityReports; // @dynamic mutableActivityReports;

@end

@interface IDEActivityReportManager : NSObject <DVTInvalidation>
{
    IDEActivityReport *_lastShownCompletedPersistentSchemeBasedReport;
    IDEActivityReport *_lastCompletedPersistentSchemeBasedReport;
    IDEActivityReport *_lastShownCompletedSchemeBasedReport;
    IDEActivityReport *_lastCompletedSchemeBasedReport;
    DVTStackBacktrace *_invalidationBacktrace;
    IDEWorkspaceDocument *_workspaceDocument;
    NSSet *_activityReporterObservingTokens;
    NSSet *_activityReporters;
    NSMutableSet *_observers;
    NSArray *_orderedActivityReports;
    NSSet *_activityReports;
    NSArray *_shownOrderedActivityReports;
    NSSet *_shownActivityReports;
    BOOL _isInvalidated;
}

@property IDEActivityReport *lastShownCompletedPersistentSchemeBasedReport; // @synthesize lastShownCompletedPersistentSchemeBasedReport=_lastShownCompletedPersistentSchemeBasedReport;
@property IDEActivityReport *lastShownCompletedSchemeBasedReport; // @synthesize lastShownCompletedSchemeBasedReport=_lastShownCompletedSchemeBasedReport;
@property IDEActivityReport *lastCompletedPersistentSchemeBasedReport; // @synthesize lastCompletedPersistentSchemeBasedReport=_lastCompletedPersistentSchemeBasedReport;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property IDEActivityReport *lastCompletedSchemeBasedReport; // @synthesize lastCompletedSchemeBasedReport=_lastCompletedSchemeBasedReport;
@property(copy) NSArray *orderedActivityReports; // @synthesize orderedActivityReports=_orderedActivityReports;
@property(copy) NSSet *activityReports; // @synthesize activityReports=_activityReports;
@property(readonly) IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
- (void)reportDidComplete:(id)arg1;
- (void)stopObservingReportForCompletion:(id)arg1;
- (void)startObservingReportForCompletion:(id)arg1;
- (id)addObserver:(id)arg1;
- (void)removeObserverBlock:(id)arg1;
@property(readonly) NSSet *shownActivityReports;
@property(readonly) NSArray *shownOrderedActivityReports;
- (void)rebuildActivityReportCaches;
- (void)handleUpdateFromActivityReporter:(id)arg1;
@property(readonly) NSSet *activityReporters;
- (void)loadActivityReporters;
- (void)invalidate;
@property(readonly, getter=isValid) BOOL valid;
- (id)initWithWorkspaceDocument:(id)arg1;

@end

@interface IDEActivityReportStringSegment : NSObject
{
    id _frontSeparator;
    id _backSeparator;
    id _stringValue;
    double _priority;
}

+ (id)activityReportStringSegmentWithDictionaryRepresentation:(id)arg1;
@property(readonly) id frontSeparator; // @synthesize frontSeparator=_frontSeparator;
@property(readonly) id backSeparator; // @synthesize backSeparator=_backSeparator;
@property(readonly) double priority; // @synthesize priority=_priority;
@property(readonly) id stringValue; // @synthesize stringValue=_stringValue;
@property(readonly) NSDictionary *dictionaryRepresentation;
@property(readonly) long long segmentType;
- (id)description;
- (id)attributedStringValueWithDefaultAttributes:(id)arg1 hasFrontSeparator:(BOOL)arg2 hasBackSeparator:(BOOL)arg3;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithString:(id)arg1 priority:(double)arg2;
- (id)initWithString:(id)arg1 priority:(double)arg2 frontSeparator:(id)arg3 backSeparator:(id)arg4;

@end

@interface IDEActivityReportDateStringSegment : IDEActivityReportStringSegment
{
    unsigned long long _dateStyle;
    unsigned long long _timeStyle;
    NSDate *_date;
}

@property(readonly) unsigned long long timeStyle; // @synthesize timeStyle=_timeStyle;
@property(readonly) unsigned long long dateStyle; // @synthesize dateStyle=_dateStyle;
@property(readonly) NSDate *date; // @synthesize date=_date;
- (id)dictionaryRepresentation;
- (long long)segmentType;
- (id)stringValue;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithDate:(id)arg1 priority:(double)arg2 dateStyle:(unsigned long long)arg3 timeStyle:(unsigned long long)arg4;
- (id)initWithDate:(id)arg1 priority:(double)arg2 frontSeparator:(id)arg3 backSeparator:(id)arg4 dateStyle:(unsigned long long)arg5 timeStyle:(unsigned long long)arg6;

@end

@interface IDEActivityIssuesContainerLabelLayer : IDEActivityClickableTextLayer
{
}

- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)sizeToFit;
- (void)setString:(id)arg1;
- (id)labelAttributes;

@end

@interface IDEInspectorFontProperty : IDEInspectorProperty
{
    DVTFontTextField *_textField;
    NSStepper *_stepper;
}

@property NSStepper *stepper; // @synthesize stepper=_stepper;
@property DVTFontTextField *textField; // @synthesize textField=_textField;
- (void)incrementSize:(id)arg1;
- (id)bindAndConfigure;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface IDERefactoringFileChange : NSObject
{
    IDERefactoringFileChangeSet *_fileChangeSet;
    IDERefactoringFileChangeLocation *_fileLocation;
    BOOL _shouldBeApplied;
}

@property BOOL shouldBeApplied; // @synthesize shouldBeApplied=_shouldBeApplied;
@property(readonly) IDERefactoringFileChangeLocation *fileLocation; // @synthesize fileLocation=_fileLocation;
@property(readonly) IDERefactoringFileChangeSet *fileChangeSet; // @synthesize fileChangeSet=_fileChangeSet;
- (BOOL)isEqualToFileChange:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)applyChange;
- (id)initWithFileChangeSet:(id)arg1 fileLocation:(id)arg2;

@end

@interface IDERefactoringFileChangeLocation : NSObject
{
    DVTFilePath *_filePath;
}

@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (long long)compareFileLocationNoPath:(id)arg1;
- (BOOL)isEqualToFileLocation:(id)arg1;
- (id)description;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDERefactoringFileChangeSet : NSObject <IDERefactoringResult>
{
    DVTFilePath *_filePath;
    DVTFilePath *_tempFilePath;
    NSMutableArray *_changes;
    NSString *_newName;
}

+ (id)changeSetForFileAtPath:(id)arg1 transformation:(id)arg2 error:(id *)arg3;
@property NSString *newName; // @synthesize newName=_newName;
@property(readonly) NSArray *changes; // @synthesize changes=_changes;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
- (void)writeTempResults;
- (BOOL)writesOwnTempResults;
- (id)resultTempFilePath;
- (id)resultNewFileName;
- (id)resultFilePath;
- (BOOL)resultIsEditable;
- (id)description;
- (BOOL)applyChangesWithError:(id *)arg1;
- (BOOL)willRenameFile;
- (id)newFilePath;
- (BOOL)isEqualToFileChangeSet:(id)arg1;
- (void)addChange:(id)arg1;
- (long long)numberOfChanges;
- (id)initWithFilePath:(id)arg1;

@end

@interface IDERefactoringNibFileChange : IDERefactoringFileChange
{
    long long _objectID;
    NSMutableDictionary *_commands;
    NSMutableDictionary *_properties;
}

+ (id)commandString;
@property(readonly) NSMutableDictionary *properties; // @synthesize properties=_properties;
@property(readonly) NSMutableDictionary *commands; // @synthesize commands=_commands;
@property long long objectID; // @synthesize objectID=_objectID;
- (BOOL)applyChange;
- (void)_removePropertyForKey:(id)arg1;
- (id)_propertyForKey:(id)arg1;
- (void)_setProperty:(id)arg1 forKey:(id)arg2;
- (void)_removeCommandForKey:(id)arg1;
- (id)_commandForKey:(id)arg1;
- (void)_setCommand:(id)arg1 forKey:(id)arg2;
- (id)initWithFileChangeSet:(id)arg1 fileLocation:(id)arg2;

@end

@interface IDERefactoringNibFileClassChange : IDERefactoringNibFileChange
{
}

+ (id)commandString;
- (id)destinationClass;
- (void)setDestinationClass:(id)arg1;
- (id)sourceClass;
- (void)setSourceClass:(id)arg1;

@end

@interface IDERefactoringNibFileActionChange : IDERefactoringNibFileChange
{
}

+ (id)commandString;
- (id)destinationActionType;
- (void)setDestinationActionType:(id)arg1;
- (id)destinationActionName;
- (void)setDestinationActionName:(id)arg1;
- (id)destinationActionClass;
- (void)setDestinationActionClass:(id)arg1;
- (id)sourceActionType;
- (void)setSourceActionType:(id)arg1;
- (id)sourceActionName;
- (void)setSourceActionName:(id)arg1;
- (id)sourceActionClass;
- (void)setSourceActionClass:(id)arg1;
- (id)initWithFileChangeSet:(id)arg1 fileLocation:(id)arg2;

@end

@interface IDERefactoringNibFileOutletChange : IDERefactoringNibFileChange
{
}

+ (id)commandString;
- (id)destinationOutletName;
- (void)setDestinationOutletName:(id)arg1;
- (id)destinationOutletType;
- (void)setDestinationOutletType:(id)arg1;
- (id)destinationOutletClass;
- (void)setDestinationOutletClass:(id)arg1;
- (id)sourceOutletName;
- (void)setSourceOutletName:(id)arg1;
- (id)sourceOutletType;
- (void)setSourceOutletType:(id)arg1;
- (id)sourceOutletClass;
- (void)setSourceOutletClass:(id)arg1;
- (id)initWithFileChangeSet:(id)arg1 fileLocation:(id)arg2;

@end

@interface IDERefactoringNibFilePropertyChange : IDERefactoringNibFileChange
{
}

+ (id)commandString;
- (void)renameDeclaredKey:(id)arg1 withKey:(id)arg2;
- (void)removeDeclaredKey:(id)arg1;
- (void)addDeclaredKey:(id)arg1;
- (id)binding;
- (void)setBinding:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)objectClass;
- (void)setObjectClass:(id)arg1;

@end

@interface IDERefactoringNibFileChangeLocation : IDERefactoringFileChangeLocation
{
}

@end

@interface IDERefactoringNibFileChangeSet : IDERefactoringFileChangeSet
{
    NSMutableArray *_commands;
    NSMutableDictionary *_properties;
    NSDictionary *_resultDictionary;
    NSString *_ibtoolAgentString;
    BOOL _isWrapper;
    DVTFilePath *_filePathForWritableCheck;
}

+ (id)changeSetForFileAtPath:(id)arg1 transformation:(id)arg2 error:(id *)arg3;
@property(readonly) NSDictionary *resultDictionary; // @synthesize resultDictionary=_resultDictionary;
@property(readonly) NSString *ibtoolAgentString; // @synthesize ibtoolAgentString=_ibtoolAgentString;
- (void)writeTempResults;
- (BOOL)writesOwnTempResults;
- (BOOL)resultIsEditable;
- (BOOL)applyChangesWithError:(id *)arg1;
- (void)removeNibFileToolPropertyDictionaryForKey:(id)arg1;
- (void)setNibFileToolPropertyDictionary:(id)arg1 forKey:(id)arg2;
- (void)removeNibFileToolCommandDictionary:(id)arg1;
- (void)addNibFileToolCommandDictionary:(id)arg1;
- (id)nibFileToolCommandDictionaries;
- (id)initWithFilePath:(id)arg1 ibtoolAgentString:(id)arg2;

@end

@interface IDERefactoringNibFileToolTask : DVTTask
{
}

+ (void)killIBToolAgentWithString:(id)arg1;
+ (id)nibContentsOfFile:(id)arg1 ibtoolAgentString:(id)arg2;
+ (id)nibContentsOfFile:(id)arg1;
+ (id)nibDataContentsOfFile:(id)arg1 ibtoolAgentString:(id)arg2;
+ (BOOL)runTaskWithArguments:(id)arg1 standardOutData:(id *)arg2 ibtoolAgentString:(id)arg3 error:(id *)arg4;
+ (id)nibDataContentsOfFile:(id)arg1;
+ (id)defaultNibFileToolPath;
+ (double)ibtoolAgentTimeout;

@end

@interface IDESourceCodeGenerator : NSObject
{
    IDEWorkspaceDocument *_workspaceDocument;
}

+ (id)alloc;
@property(readonly) IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
- (id)commitInsertionOfSourceCodeForCompositeResult:(id)arg1 error:(id *)arg2;
- (id)prepareToAddSourceCodeForCounterparts:(id)arg1 documentLocationForCounterpartBlock:(id)arg2 addSourceCodeForCounterpartBlock:(void)arg3 options:(id)arg4 error:(void)arg5;
- (void)releaseEditorDocumentsFromEditorDocumentComponents:(id)arg1;
- (id)editorDocumentComponentsForCounterparts:(id)arg1 documentLocationForCounterpartBlock:(id)arg2 error:(void)arg3;
@property(readonly) DVTSourceCodeLanguage *generatedLanguage;
- (id)classSymbolForClassNamed:(id)arg1 error:(id *)arg2;
- (id)initWithWorkspaceDocument:(id)arg1;

@end

@interface IDEObjectiveCSourceCodeGenerator : IDESourceCodeGenerator
{
}

+ (BOOL)isTeardownCounterpart:(id)arg1;
+ (id)allTeardownCounterparts;
+ (id)teardownMethodNameForCounterpart:(id)arg1;
- (id)prepareToAddClassMethodWithName:(id)arg1 inClassNamed:(id)arg2 options:(id)arg3 error:(id *)arg4;
- (id)prepareToAddInstanceMethodWithName:(id)arg1 inClassNamed:(id)arg2 options:(id)arg3 error:(id *)arg4;
- (id)primitiveAddMethodWithName:(id)arg1 inClassNamed:(id)arg2 options:(id)arg3 instanceMethod:(BOOL)arg4 error:(id *)arg5;
- (id)prepareToAddPropertyWithName:(id)arg1 type:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)prepareToAddInstanceVariableWithName:(id)arg1 type:(id)arg2 inClassNamed:(id)arg3 options:(id)arg4 error:(id *)arg5;
- (id)effectiveOptionsForTeardownCounterpart:(id)arg1 originalOptions:(id)arg2;
- (id)documentLocationForCounterpartBlockForClassSymbol:(SEL)arg1;
- (id)inferInstanceVariableNameFromSurroundings:(id)arg1 classSymbol:(id)arg2;
- (BOOL)preferUnderbarPrefixForInferredInstanceVariableNames;
- (id)generateSourceCodeForPropertySetterWithName:(id)arg1 options:(id)arg2;
- (id)generateSourceCodeForPropertyGetterWithName:(id)arg1 options:(id)arg2;
- (id)generateSourceCodeForPropertyAtSynthesizeWithName:(id)arg1 options:(id)arg2;
- (id)generateSourceCodeForPropertyDeclarationWithName:(id)arg1 type:(id)arg2 options:(id)arg3;
- (id)generateSourceCodeForMessageSendWithOptions:(id)arg1;
- (id)generateSourceCodeForInstanceVariableDeclarationWithName:(id)arg1 type:(id)arg2 options:(id)arg3;
- (id)generateSourceCodeForClassMethodDefinitionWithName:(id)arg1 options:(id)arg2;
- (id)generateSourceCodeForClassMethodDeclarationWithName:(id)arg1 options:(id)arg2;
- (id)generateSourceCodeForInstanceMethodDefinitionWithName:(id)arg1 options:(id)arg2;
- (id)generateSourceCodeForInstanceMethodDeclarationWithName:(id)arg1 options:(id)arg2;
- (id)baseSourceCodeForMethodDeclaratorWithName:(id)arg1 options:(id)arg2;
- (id)typeString:(id)arg1 concatenatedWithNameString:(id)arg2;
- (id)generatedLanguage;

@end

@interface IDESourceCodeGenerationPartialResult : NSObject
{
    DVTDocumentLocation *_insertionDocumentLocation;
    NSDictionary *_insertBeforeHint;
    NSDictionary *_insertAfterHint;
    NSString *_insertionSourceCode;
    NSError *_insertionError;
}

@property(readonly) NSError *insertionError; // @synthesize insertionError=_insertionError;
@property(readonly) NSDictionary *insertAfterHint; // @synthesize insertAfterHint=_insertAfterHint;
@property(readonly) NSDictionary *insertBeforeHint; // @synthesize insertBeforeHint=_insertBeforeHint;
@property(readonly) NSString *insertionSourceCode; // @synthesize insertionSourceCode=_insertionSourceCode;
@property(readonly) DVTDocumentLocation *insertionDocumentLocation; // @synthesize insertionDocumentLocation=_insertionDocumentLocation;
- (id)description;
- (id)resultByReplacingInsertionDocumentLocationWithLocation:(id)arg1;
- (id)initWithInsertionError:(id)arg1;
- (id)initWithInsertionSourceCode:(id)arg1 documentLocation:(id)arg2;
- (id)initWithInsertionSourceCode:(id)arg1 documentLocation:(id)arg2 insertAfterHint:(id)arg3 insertBeforeHint:(id)arg4;

@end

@interface IDESourceCodeGenerationCompositeResult : NSObject
{
    NSDictionary *_resultsByCounterpart;
}

@property(readonly) NSDictionary *resultsByCounterpart; // @synthesize resultsByCounterpart=_resultsByCounterpart;
- (id)compositeResultByMergingWithCompositeResult:(id)arg1;
- (id)description;
- (id)firstCounterpartWithInsertionError;
- (id)resultForCounterpart:(id)arg1;
@property(readonly) NSSet *counterparts;
- (id)initWithResultsByCounterpart:(id)arg1;

@end

@interface IDETextSubstitutionTemplateInstantiationContext : IDETemplateInstantiationContext
{
}

@end

@interface IDETemplateTextSubstitutionFactory : IDETemplateFactory
{
    NSOperationQueue *_queue;
    NSFileManager *_fileManager;
    IDEVersionedFileManager *_versionedFileManager;
}

@property(readonly) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void)instantiateTemplateForContext:(id)arg1 options:(id)arg2 whenDone:(id)arg3;
- (id)operationForContext:(id)arg1 options:(id)arg2;
- (id)proposedFilePathsForContext:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (id)_operationToInstantiateTemplateForContext:(id)arg1 options:(id)arg2 processor:(id)arg3 finalProcessor:(void)arg4;
- (id)standardMacrosForContext:(id)arg1;
- (void)addImportMacroForOption:(id)arg1 toEngine:(id)arg2 index:(id)arg3;
- (BOOL)shouldAddCreatedDocumentsToVersionControl:(id)arg1;
- (id)additionalMacrosForContext:(id)arg1;
- (id)blueprintProviderForGroup:(id)arg1;
- (id)init;

@end

@interface IDETemplateTextSubstitutionOperation : DVTOperation
{
    NSArray *_paths;
    DVTFilePath *_primaryPath;
}

@property(copy) DVTFilePath *primaryPath; // @synthesize primaryPath=_primaryPath;
@property(copy) NSArray *paths; // @synthesize paths=_paths;

@end

@interface IDEEditorContainerDocument : IDEEditorDocument
{
    IDEContainer *_container;
    id <DVTObservingToken> _containerValidObservingToken;
}

+ (id)keyPathsForValuesAffectingReadOnlyItemURL;
+ (id)keyPathsForValuesAffectingReadOnlyStatus;
+ (Class)_containerClass;
+ (BOOL)shouldTrackFileSystemChanges;
@property IDEContainer *container; // @synthesize container=_container;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)updateChangeCount:(unsigned long long)arg1;
- (void)runPageLayout:(id)arg1;
- (void)printDocument:(id)arg1;
- (void)saveDocumentTo:(id)arg1;
- (void)saveDocumentAs:(id)arg1;
- (void)saveDocument:(id)arg1;
- (void)revertDocumentToSaved:(id)arg1;
- (BOOL)makeWritableWithError:(id *)arg1;
- (id)readOnlyItemURL;
- (int)readOnlyStatus;
- (BOOL)canRevert;
- (void)editorDocumentWillClose;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface _IDEDocumentControllerCloseAllContext : NSObject
{
    void *innerContext;
    id delegate;
    SEL didCloseAllSelector;
    BOOL shouldCloseAutosavingDocuments;
}

@end

@interface IDEDocumentController : NSDocumentController <IDEVersionedFileManagerDelegate, IDEContainerErrorPresenter, IDEContainerReloadingDelegate, IDEContainerUnlockingDelegate>
{
    BOOL _isClosingAllDocuments;
}

+ (void)_setOpenAsContextMenu:(id)arg1 withViewController:(id)arg2;
+ (BOOL)_isProjectDocumentURL:(id)arg1;
+ (BOOL)_isWorkspaceDocumentURL:(id)arg1;
+ (Class)_THREAD_editorDocumentClassForType:(id)arg1 extension:(id *)arg2;
+ (void)_THREAD_cacheDocumentClass:(Class)arg1 forExtension:(id)arg2;
+ (Class)_THREAD_cachedDocumentClassForExtension:(id)arg1;
+ (id)_typeForContentsOfURL:(id)arg1;
+ (BOOL)_isValidDocumentExtensionIdentifier:(id)arg1 withEditorCategories:(id)arg2;
+ (id)editorDocumentExtensionForNavigableItem:(id)arg1 editorCategories:(id)arg2;
+ (id)editorDocumentExtensionForFileDataType:(id)arg1 editorCategories:(id)arg2;
+ (id)_THREAD_editorDocumentExtensionForType:(id)arg1 withEditorCategories:(id)arg2;
+ (id)_THREAD_bestEditorDocumentExtensionSupportingType:(id)arg1 withEditorCategories:(id)arg2;
+ (BOOL)_isValidDocumentExtensionIdentifier:(id)arg1 supportingDocumentType:(id)arg2 withEditorCategories:(id)arg3;
+ (void)_enumerateDocumentExtensionsMatchingFileDataType:(id)arg1 withEditorCategories:(id)arg2 matchBlock:(id)arg3;
+ (id)_readableTypesForDocumentClass:(Class)arg1;
+ (id)_organizerSourceExtensionForDocumentType:(id)arg1;
+ (id)_bestEditorDocumentExtensionForDocumentClass:(Class)arg1 supportingDocumentType:(id)arg2 withEditorCategories:(id)arg3;
+ (id)_documentExtensionForNavigableItem:(id)arg1;
+ (id)_editorDocumentExtensionsForOpenAsWhichSupportType:(id)arg1 editorCategories:(id)arg2;
+ (BOOL)_isAllowedToCreateEditorDocumentForFileDataType:(id)arg1;
+ (BOOL)_THREAD_type:(id)arg1 isPreferableToType:(id)arg2;
+ (void)_THREAD_cacheBestEditorDocumentExtension:(id)arg1 forType:(id)arg2 withEditorCategory:(id)arg3;
+ (id)_THREAD_cachedBestEditorDocumentExtensionForType:(id)arg1 withEditorCategory:(id)arg2;
+ (id)_THREAD_allOrganizerSourceExtensions;
+ (id)_THREAD_allEditorDocumentExtensions;
+ (id)editorDocumentForNavigableItem:(id)arg1;
+ (id)editorDocumentForFilePath:(id)arg1;
+ (id)editorDocumentForURL:(id)arg1;
+ (id)retainedEditorDocumentForNavigableItem:(id)arg1 forUseWithWorkspaceDocument:(id)arg2 error:(id *)arg3;
+ (id)retainedEditorDocumentForDocumentLocation:(id)arg1 forUseWithWorkspaceDocument:(id)arg2 error:(id *)arg3;
+ (id)retainedEditorDocumentForDocumentLocation:(id)arg1 error:(id *)arg2;
+ (id)retainedEditorDocumentForNavigableItem:(id)arg1 error:(id *)arg2;
+ (id)_retainedEditorDocumentForURL:(id)arg1 type:(id)arg2 error:(id *)arg3;
+ (id)_retainedNewEditorDocumentWithClass:(Class)arg1 ofURL:(id)arg2 ofType:(id)arg3 extension:(id)arg4 error:(id *)arg5;
+ (void)releaseEditorDocument:(id)arg1;
+ (BOOL)_closeDocumentIfNeeded:(id)arg1;
+ (void)retainEditorDocument:(id)arg1;
+ (id)_openDocuments;
+ (id)sharedDocumentController;
+ (void)initialize;
@property BOOL isClosingAllDocuments; // @synthesize isClosingAllDocuments=_isClosingAllDocuments;
- (void)container:(id)arg1 attemptToUnlockItems:(id)arg2 inWorkspaces:(id)arg3 completionQueue:(id)arg4 completionBlock:(id)arg5;
- (int)responseToExternalChangesToBackingFileForContainer:(id)arg1 fileWasRemoved:(BOOL)arg2;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned int)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (int)handleSaveError:(id)arg1 forContainer:(id)arg2 withAction:(int)arg3;
- (BOOL)canMoveItemsAtFilePaths:(id)arg1 toFilePaths:(id)arg2 completionBlockDispatchQueue:(struct dispatch_queue_s **)arg3 completionBlock:(id *)arg4;
- (void)willRemoveItemsAtFilePaths:(id)arg1;
- (BOOL)canRemoveItemsAtFilePaths:(id)arg1 completionBlockDispatchQueue:(struct dispatch_queue_s **)arg2 completionBlock:(id *)arg3;
- (id)_wrappedWorkspacesForContainers:(id)arg1;
- (id)_containersForFilePaths:(id)arg1;
- (id)_getEditorDocumentsForFilePaths:(id)arg1 editedDocuments:(id *)arg2;
- (void)menuNeedsUpdate:(id)arg1;
- (id)_openAsDocumentExtensionsForFileDataTypes:(id)arg1 editorCategories:(id)arg2;
- (void)_openAs:(id)arg1;
- (void)noteNewRecentDocumentURL:(id)arg1;
- (id)_recentWorkspaceDocumentURLs;
- (id)_recentEditorDocumentURLs;
- (id)displayNameForType:(id)arg1;
- (id)fileExtensionsFromType:(id)arg1;
- (BOOL)_applicationShouldTerminate;
- (void)runOpenPanelWithCompletionBlock:(id)arg1;
- (id)_setupOpenPanel;
- (id)currentDirectory;
- (id)documentClassNames;
- (BOOL)saveAllEditorDocumentsBeforeBuilding;
- (BOOL)saveAllEditorDocumentsBeforeActionWithTitle:(id)arg1 cancelButtonTitle:(id)arg2 allowNever:(BOOL)arg3;
- (BOOL)saveAllEditorDocumentsBeforeActionWithTitle:(id)arg1 cancelButtonTitle:(id)arg2 allowNever:(BOOL)arg3 allowDontSave:(BOOL)arg4;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)reviewUnsavedDocumentsWithAlertTitle:(id)arg1 cancellable:(BOOL)arg2 delegate:(id)arg3 didReviewAllSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)closeAllDocumentsWithDelegate:(id)arg1 didCloseAllSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)_dvt_closeAllDocumentsWithDelegate:(id)arg1 didCloseAllSelector:(SEL)arg2 shouldCloseAutosavingDocuments:(BOOL)arg3 contextInfo:(void *)arg4;
- (void)_checkAndCloseAllDocumentsStartingWith:(id)arg1 shouldCloseDocuments:(BOOL)arg2 closeAllContext:(void *)arg3;
- (void)saveMultipleEditorDocuments:(id)arg1;
- (BOOL)_saveMultipleEditorDocumentsWithCancelButton:(BOOL)arg1 cancelButtonTitle:(id)arg2 dontSaveButton:(BOOL)arg3 title:(id)arg4;
- (BOOL)_saveMultipleEditorDocuments:(id)arg1 withCancelButton:(BOOL)arg2 cancelButtonTitle:(id)arg3 dontSaveButton:(BOOL)arg4 title:(id)arg5;
- (void)saveAllUnlockedEditorDocuments:(id)arg1;
- (void)saveAllEditorDocuments:(id)arg1;
- (void)saveEditorDocuments:(id)arg1;
- (void)_saveAllDocuments:(id)arg1 includeReadOnly:(BOOL)arg2;
@property(readonly) NSArray *editedEditorDocuments;
@property(readonly) NSArray *editorDocuments;
- (id)_editorDocuments:(BOOL)arg1;
@property(readonly) NSArray *workspaceDocuments;
- (void)removeDocument:(id)arg1;
- (void)addDocument:(id)arg1;
- (Class)documentClassForType:(id)arg1;
- (Class)_THREAD_documentClassForType:(id)arg1 extension:(id *)arg2;
- (void)_editorDocument:(id)arg1 didPrint:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)_printDocumentsWithContentsOfURLs:(id)arg1 settings:(id)arg2 showPrintPanels:(BOOL)arg3 completionHandler:(id)arg4;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2;
- (id)openDocumentsWithContentsOfURLs:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (id)_openDocumentsForURLs:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (BOOL)_openProjectsAndWorkspaces:(id)arg1 documents:(id *)arg2 simpleFileURLs:(id *)arg3 display:(BOOL)arg4 error:(id *)arg5;
- (id)_workspaceOrProjectURLsInFolderURL:(id)arg1;
- (BOOL)_openSimpleFileURLs:(id)arg1 documents:(id *)arg2 display:(BOOL)arg3 error:(id *)arg4;
- (id)_frontmostSimpleFilesFocusedWorkspaceWindowForTopLevelFilePaths:(id)arg1;
- (BOOL)_workspace:(id)arg1 topLevelChildrenMatches:(id)arg2;
- (id)_openProjectDocument:(id)arg1 displayDocument:(BOOL)arg2 error:(id *)arg3;
- (id)makeDocumentWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)_setupWrappedXcode3ProjectForWorkspaceDocument:(id)arg1;
- (id)_openWorkspaceDocumentForProjectAtURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (id)_addPath:(id)arg1 toChildrenOfWorkspace:(id)arg2;
- (id)_projectDocumentWorkspaceURL:(id)arg1;
- (id)_workspacesForFileReferences:(id)arg1;
- (id)_frontmostWorkspaceWindowForWorkspaces:(id)arg1 matched:(char *)arg2;
- (BOOL)_isWorkspaceWindow:(id)arg1 forWorkspaces:(id)arg2 matched:(char *)arg3;
- (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
- (id)openDocumentLocation:(id)arg1 error:(id *)arg2;
- (BOOL)saveUntitledWorkspaceDocument:(id)arg1 forProjectDocument:(id)arg2 error:(id *)arg3;
- (id)openUntitledWorkspaceDocumentAndDisplay:(BOOL)arg1 error:(id *)arg2;
- (id)_openUntitledWorkspaceDocumentAndDisplay:(BOOL)arg1 simpleFilesFocused:(BOOL)arg2 editorDocumentURLOrNil:(id)arg3 error:(id *)arg4;
- (id)defaultType;
- (id)init;

@end

@interface IDEEditorReadOnlyIndicatorController : NSObject
{
    IDEEditorContext *_editorContext;
    DVTGradientImageButton *_indicatorView;
    BOOL _showReadOnlyIndicator;
    id <DVTObservingToken> _documentStatusObserver;
    int _indicatorStatus;
}

@property BOOL showReadOnlyIndicator; // @synthesize showReadOnlyIndicator=_showReadOnlyIndicator;
- (void)_updateReadOnlyIndicator;
- (id)readOnlyIndicatorView;
- (id)initWithEditorContext:(id)arg1;
- (id)init;

@end

@interface IDEProfileActionSheetController : IDEViewController <IDECapsuleListViewDataSource>
{
    DVTTabChooserView *_tabChooser;
    IDECapsuleListView *_capsuleListView;
    DVTBorderedView *_capsuleListEnclosingBorderedView;
    NSPopUpButton *_runnablePopUp;
    NSPopUpButton *_analysisToolsPopUp;
    DVTFilePathFieldCell *_workingDirectoryTextFieldCell;
    NSView *_infoTabViewContentView;
    NSPopUpButton *_macroExpansionRunnableBuildablesPopUp;
    NSBox *_dividerLine;
    DVTStackView *_optionsStackView;
    NSView *_resumeOptionView;
    NSView *_debugDocumentVersioningOptionView;
    NSView *_workingDirectoryOptionView;
    DVTChoice *_infoChoice;
    DVTChoice *_conditionsChoice;
    DVTChoice *_optionsChoice;
    IDEScheme *_runContext;
    IDEProfileSchemeAction *_runPhase;
    IDEArgumentsCapsuleSheetController *_argumentsViewController;
    IDEEnvironmentVariablesCapsuleSheetController *_environmentVariablesViewController;
    NSArray *_analysisToolsForDisplay;
    BOOL _isSupportedCustomWorkingDirectory;
    id <DVTObservingToken> _runnableBuildableProductsObservingToken;
    id <DVTObservingToken> _runContextRunnableObservingToken;
    id <DVTObservingToken> _runContextAnalysisToolObservingToken;
    id <DVTObservingToken> _launchActionArgsEnvLinkObservingToken;
    NSMutableArray *_observationTokens;
    unsigned long long _runnablePopUpRunnableBuildableProductsCount;
    BOOL _runnablePopUpHasCustomRunnable;
}

+ (id)defaultViewNibName;
+ (void)initialize;
@property BOOL isSupportedCustomWorkingDirectory; // @synthesize isSupportedCustomWorkingDirectory=_isSupportedCustomWorkingDirectory;
@property DVTTabChooserView *tabChooser; // @synthesize tabChooser=_tabChooser;
@property IDEProfileSchemeAction *runPhase; // @synthesize runPhase=_runPhase;
@property IDEScheme *runContext; // @synthesize runContext=_runContext;
@property(copy) NSArray *analysisToolsForDisplay; // @synthesize analysisToolsForDisplay=_analysisToolsForDisplay;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
@property(readonly) IDEWorkspace *workspace;
- (id)DVTFilePathFieldCell:(id)arg1 resolvedPathForPath:(id)arg2;
- (void)DVTFilePathFieldCell:(id)arg1 chooserSelectedPath:(id)arg2;
- (void)_updateSupportedOptions;
- (id)_iconForBuildable:(id)arg1;
- (void)_macroExpansionRunnableBuildableSelected:(id)arg1;
- (void)_updateMacroExpansionRunnablePopUpSelection;
- (void)_updateMacroExpansionRunnablePopUp;
- (unsigned long long)_indexOfDebuggerFromScheme;
- (void)_updateRunnablePopUp;
- (void)_runnableBuildableProductsDidChange;
- (void)runnablePopUpAction:(id)arg1;
- (void)_updateMacroExpansionRunnablePopUpEnablement;
- (void)_runnableDidUpdate;
- (void)_analysisToolSelected:(id)arg1;
- (void)_addMenuItemForAnalysisTool:(id)arg1;
- (void)_addMenuItemForAnalysisTools:(id)arg1;
- (void)_updateAnalysisToolsPopUp;
- (void)_selectedSchemeChanged:(id)arg1;
- (void)invalidate;
- (void)loadView;
- (void)updateBoundContent;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDESourceControlPerson : NSObject <IDESourceControlNameTokenViewDelegate>
{
    NSString *_name;
    NSString *_displayName;
    NSArray *_emails;
    NSImage *_image;
    NSString *_chatUUID;
    NSString *_pairedUUID;
    ABPerson *_pairedPerson;
    NSNotification *_lastSeenNotification;
}

@property(copy) NSString *pairedUUID; // @synthesize pairedUUID=_pairedUUID;
@property(copy) NSString *chatUUID; // @synthesize chatUUID=_chatUUID;
@property ABPerson *pairedPerson; // @synthesize pairedPerson=_pairedPerson;
@property(copy) NSImage *image; // @synthesize image=_image;
@property NSArray *emails; // @synthesize emails=_emails;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void)imPersonStatusChangedNotification:(id)arg1;
- (void)startChatWithToken:(id)arg1;
- (void)email:(id)arg1;
- (id)menuForNameToken:(id)arg1;
- (void)_stopListeningForChatAvailability;
- (void)_startListeningForChatAvailability;
- (id)_chatUUIDForPerson:(id)arg1;
- (BOOL)_personWithStatusIsOnline:(unsigned long long)arg1;
- (void)finalize;
- (id)_emailsFromPerson:(id)arg1;
- (id)_arrayFromABMultiValue:(id)arg1;
- (id)_displayNameFromPerson:(id)arg1;
- (id)_imageFromPerson:(id)arg1;
- (id)initWithName:(id)arg1 email:(id)arg2 pairedAddressBookPerson:(id)arg3;
- (void)abDatabaseChangedNotification:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 displayName:(id)arg2 emails:(id)arg3 image:(id)arg4;

@end

@interface IDESourceControlNameTokenView : NSView <NSMenuDelegate>
{
    NSString *_value;
    struct CGRect _tokenRect;
    struct CGRect _stringRect;
    BOOL _showToken;
    BOOL _forceHideToken;
    BOOL _hideMenuButton;
    BOOL _selected;
    NSObject<IDESourceControlNameTokenViewDelegate> *_delegate;
    BOOL _showChatButton;
    NSMutableDictionary *_textAttributes;
    double _fontSize;
    BOOL _isBold;
    unsigned long long _alignment;
    id _clickCallbackBlock;
}

@property BOOL isBold; // @synthesize isBold=_isBold;
@property(copy) id clickCallbackBlock; // @synthesize clickCallbackBlock=_clickCallbackBlock;
@property BOOL hideMenuButton; // @synthesize hideMenuButton=_hideMenuButton;
@property unsigned long long alignment; // @synthesize alignment=_alignment;
@property double fontSize; // @synthesize fontSize=_fontSize;
@property BOOL forceHideToken; // @synthesize forceHideToken=_forceHideToken;
@property NSObject<IDESourceControlNameTokenViewDelegate> *delegate; // @synthesize delegate=_delegate;
@property BOOL showChatButton; // @synthesize showChatButton=_showChatButton;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawWholeTokenWithTextFrame:(struct CGRect)arg1 tokenFrame:(struct CGRect)arg2;
- (void)_drawInteriorWithTextFrame:(struct CGRect)arg1 tokenFrame:(struct CGRect)arg2;
- (void)_drawTextWithFrame:(struct CGRect)arg1;
- (void)_drawTokenWithFrame:(struct CGRect)arg1;
- (id)tokenForegroundColor;
- (id)tokenBackgroundColor;
- (void)_drawTokenWithContext:(id)arg1 frame:(struct CGRect)arg2;
- (struct CGRect)_chatIconRectWithTokenFrame:(struct CGRect)arg1;
- (id)_chatImage;
- (id)_pullDownImage;
- (struct CGRect)_pullDownRectForTokenFrame:(struct CGRect)arg1;
- (struct CGRect)_tokenRectForStringRect:(struct CGRect)arg1;
@property(copy) NSString *value;
- (void)_resetTokenRect;
- (struct CGRect)_rectForString:(id)arg1 withRect:(struct CGRect)arg2;
- (double)_widthOfChatButtonWithPadding;
- (double)_widthOfRightMenuWithPadding;
- (void)mouseUp:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_setTrackingRectWithRect:(struct CGRect)arg1;
- (void)_setFontSize:(double)arg1 bold:(BOOL)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDESourceControlPersonManager : NSObject
{
    NSMutableDictionary *_peopleByRepository;
    NSMutableDictionary *_savedABPeoplePairingsByRepository;
}

+ (id)logAspect;
+ (id)sharedSourceControlPeopleRepository;
- (void)_saveAuthorsABPairingDictionary:(id)arg1 forSourceControlTree:(id)arg2;
- (id)_autoSetupAddressBookSupportWithEmails:(id)arg1;
- (void)_findABPersonForSourceTree:(id)arg1 person:(id)arg2 withCompletionBlock:(id)arg3;
- (id)_loadAuthorABPairingForSourceTree:(id)arg1;
- (id)_authorsFromCustomDataSpecifier:(id)arg1 dataStore:(id)arg2;
- (id)_findABPersonFromKnownAuthors:(id)arg1 author:(id)arg2;
- (id)_savedNameForSourceTree:(id)arg1;
- (void)clearPersonPairing:(id)arg1 forSourceControlTree:(id)arg2;
- (void)savePersonPairing:(id)arg1 forSourceControlTree:(id)arg2;
- (id)_scPeopleForTree:(id)arg1;
- (id)personMatchingSourceControlTree:(id)arg1 forUserName:(id)arg2 email:(id)arg3 createIfNeeded:(BOOL)arg4;
- (id)init;

@end

@interface _IDEReadOnlyItemsManagerContext : NSObject
{
    NSArray *_itemsToUnlock;
    NSString *_itemName;
    id _changedObject;
    IDEWorkspace *_workspace;
    NSWindow *_window;
    id _completionBlock;
}

@property(copy) id completionBlock; // @synthesize completionBlock=_completionBlock;
@property id changedObject; // @synthesize changedObject=_changedObject;
@property NSWindow *window; // @synthesize window=_window;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(copy) NSString *itemName; // @synthesize itemName=_itemName;
@property(copy) NSArray *itemsToUnlock; // @synthesize itemsToUnlock=_itemsToUnlock;

@end

@interface IDERefactoringMoveDownViewController : IDERefactoringTransformationViewController
{
    NSString *_containerSymbolName;
}

@property(copy) NSString *containerSymbolName; // @synthesize containerSymbolName=_containerSymbolName;
- (id)previewSummary;
- (id)userInput;
- (void)setWindowController:(id)arg1;
- (void)setOriginalSymbol:(id)arg1;
- (id)nibName;

@end

@interface IDERefactoringMoveUpViewController : IDERefactoringTransformationViewController
{
    NSButton *_moveRelatedMethodsCheckbox;
    NSString *_oldSuperclassName;
    NSString *_newSuperclassName;
}

@property NSString *newSuperclassName; // @synthesize newSuperclassName=_newSuperclassName;
@property NSString *oldSuperclassName; // @synthesize oldSuperclassName=_oldSuperclassName;
- (id)previewSummary;
- (id)userInput;
- (void)allowUserInput:(BOOL)arg1;
- (void)setOriginalSymbol:(id)arg1;
- (void)setWindowController:(id)arg1;
- (id)nibName;

@end

@interface IDERefactoringSplitLayoutView : DVTAutoLayoutView
{
    NSView *_leftView;
    NSView *_rightView;
}

- (void)layoutBottomUp;
- (void)layoutTopDown;

@end

@interface IDERefactoringEncapsulateViewController : IDERefactoringTransformationViewController
{
    NSTextField *_getterField;
    NSTextField *_setterField;
    IDERefactoringEncapsulateInputValidator *_getterInputValidator;
    IDERefactoringEncapsulateInputValidator *_setterInputValidator;
}

- (void)controlTextDidChange:(id)arg1;
- (id)previewSummary;
- (id)userInput;
- (void)allowUserInput:(BOOL)arg1;
- (void)setOriginalSymbol:(id)arg1;
- (void)setWindowController:(id)arg1;
- (void)loadView;
- (id)nibName;

@end

@interface IDERefactoringEncapsulateInputValidator : IDERefactoringInputValidator
{
}

- (BOOL)isStringValid:(id)arg1 otherStrings:(id)arg2 localizedMessage:(id *)arg3 invalidRange:(struct _NSRange *)arg4;
- (id)_setterGetterSameLocalizedMessage;

@end

@interface IDESourceControlTrunksTagsBranchesStepViewController : IDESourceControlRepositoryCreationStep
{
    DVTBorderedView *_borderedView;
    NSTextField *_trunkField;
    NSTextField *_branchesField;
    NSTextField *_tagsField;
    NSImageView *_trunkValidImage;
    NSImageView *_branchesValidImage;
    NSImageView *_tagsValidImage;
    NSTextField *_trunkTag;
    NSTextField *_branchesTag;
    NSTextField *_tagsTag;
    NSString *_pendingTrunkUpdate;
    NSString *_pendingBranchesUpdate;
    NSString *_pendingTagsUpdate;
    BOOL _trunkValid;
    BOOL _branchesValid;
    BOOL _tagsValid;
    BOOL _automaticallyAddingInfo;
    BOOL _firstLoadAddingInfo;
}

+ (id)keyPathsForValuesAffectingTagsLocation;
+ (id)keyPathsForValuesAffectingBranchesLocation;
+ (id)keyPathsForValuesAffectingTrunkLocation;
+ (id)keyPathsForValuesAffectingReachableTagsImage;
+ (id)keyPathsForValuesAffectingReachableBranchesImage;
+ (id)keyPathsForValuesAffectingReachableTrunkImage;
+ (id)defaultViewNibName;
@property BOOL tagsValid; // @synthesize tagsValid=_tagsValid;
@property BOOL branchesValid; // @synthesize branchesValid=_branchesValid;
@property BOOL trunkValid; // @synthesize trunkValid=_trunkValid;
- (void)addBindings;
- (void)removeBindings;
- (void)commitInformation;
- (void)_setTagsLocation:(id)arg1;
- (void)setTagsLocation:(id)arg1;
- (void)setTagsLocation:(id)arg1 afterDelay:(double)arg2;
- (id)tagsLocation;
- (void)_setBranchesLocation:(id)arg1;
- (void)setBranchesLocation:(id)arg1;
- (void)setBranchesLocation:(id)arg1 afterDelay:(double)arg2;
- (id)branchesLocation;
- (void)_setTrunkLocation:(id)arg1;
- (void)setTrunkLocation:(id)arg1;
- (void)setTrunkLocation:(id)arg1 afterDelay:(double)arg2;
- (id)trunkLocation;
- (id)reachableTagsImage;
- (id)reachableBranchesImage;
- (id)reachableTrunkImage;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canFinish;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (void)viewDidInstall;

@end

@interface IDESourceControlBackendSetupStepViewController : IDESourceControlCheckoutStepViewController
{
    DVTOperationGroup *_backendOperationGroup;
    NSMutableDictionary *_backendSetupData;
    BOOL _canGoForward;
}

@property BOOL canGoForward; // @synthesize canGoForward=_canGoForward;
- (id)identifier;
- (id)nextStepIdentifier;
- (BOOL)canGoBack;
- (id)checkoutString;
- (void)viewWillUninstall;
- (void)giveUp:(id)arg1;
- (void)performBackendSetupWithCompletionBlock:(id)arg1;
- (void)viewDidInstall;

@end

@interface __IDENSImageAdditionsClass : NSObject
{
}

@end

@interface IDERefactoringCreateSuperclassViewController : IDERefactoringTransformationViewController
{
    NSTextField *_superclassNameField;
    NSMatrix *_filesMatrix;
}

- (id)previewSummary;
- (id)userInput;
- (void)allowUserInput:(BOOL)arg1;
- (void)setOriginalSymbol:(id)arg1;
- (void)loadView;
- (id)nibName;

@end

@interface IDERefactoringCreateSuperclassInputValidator : IDERefactoringInputValidator
{
    NSString *_subclassName;
    IDEIndex *_index;
}

@property IDEIndex *index; // @synthesize index=_index;
@property NSString *subclassName; // @synthesize subclassName=_subclassName;
- (BOOL)isStringValid:(id)arg1 otherStrings:(id)arg2 localizedMessage:(id *)arg3 invalidRange:(struct _NSRange *)arg4;
- (id)_sameAsExistingClassLocalizedMessage;
- (id)_sameAsSubclassLocalizedMessage;

@end

@interface IDERefactoringExtractViewController : IDERefactoringTransformationViewController
{
    NSTextField *_newSignatureField;
    NSMatrix *_methodOrFunctionMatrix;
    NSButtonCell *_methodButton;
    NSButtonCell *_functionButton;
    BOOL _methodAllowed;
    IDERefactoringInputValidator *_methodValidator;
    IDERefactoringInputValidator *_functionValidator;
    IDERefactoringInputValidator *_currentValidator;
    struct _NSRange _functionNameRange;
    struct _NSRange _methodNameRange;
    NSDictionary *_transformationData;
}

- (void)controlTextDidChange:(id)arg1;
- (void)allowUserInput:(BOOL)arg1;
- (id)previewSummary;
- (id)userInput;
- (void)selectFunctionOrMethod:(id)arg1;
- (void)setInitialData:(id)arg1;
- (void)setWindowController:(id)arg1;
- (void)loadView;
- (id)nibName;

@end

@interface IDEGroupNavigableItem : IDENavigableItem
{
    NSString *_name;
    NSArray *_subitems;
    int _scmLocalStatusFlag;
    int _scmServerStatusFlag;
    NSString *_scmLocalStatus;
    NSString *_scmServerStatus;
    unsigned long long _conflictStateForUpdateOrMerge;
    BOOL _needsSCMStatusFlagUpdates;
}

+ (id)_createExtraInfoObject;
- (unsigned long long)indexOfChildItemForIdentifier:(id)arg1;
- (id)identifierForChildItem:(id)arg1;
- (unsigned long long)conflictStateForUpdateOrMerge;
- (id)sourceControlServerStatus;
- (int)sourceControlServerStatusFlag;
- (id)sourceControlLocalStatus;
- (int)sourceControlLocalStatusFlag;
- (void)updateSCMAttributesIfNeeded;
- (id)documentType;
- (BOOL)isMajorGroup;
- (id)fileReference;
- (id)contentDocumentLocation;
- (id)image;
- (id)name;
- (void)updateAttributes;
- (void)updateChildRepresentedObjects;
- (id)childRepresentedObjects;
- (BOOL)isLeaf;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDETextDocumentFactoryDocument : IDEEditorDocument
{
}

+ (id)convertURLToPlainTextDataOrFile:(id)arg1 hintedFileDataType:(id *)arg2 editableFlag:(char *)arg3 error:(id *)arg4;
+ (Class)textConversionProviderClassForDataType:(id)arg1;
+ (BOOL)isBlacklistedFile:(id)arg1;
+ (BOOL)hasTextConversionProviderClassForDataType:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface IDESnapshotActivityReporter : IDEActivityReporter
{
    id _snapshotStartObserver;
    id _snapshotEndObserver;
    id _snapshotRestoreStartObserver;
    id _snapshotRestoreEndObserver;
    IDEActivityReport *_activeCreationReport;
    IDEActivityReport *_activeRestoreReport;
}

+ (void)initialize;
- (id)initWithWorkspace:(id)arg1;
- (void)_updateWithValue:(BOOL)arg1 forCreation:(BOOL)arg2;

@end

@interface IDEToolbarPauseButtonViewController : DVTGenericButtonViewController
{
    NSToolbarItem *_toolbarItem;
    id <DVTObservingToken> _workspaceIdleObservingToken;
    id <DVTObservingToken> _workspaceValidObservingToken;
    id <DVTObservingToken> _launchSessionsObservingToken;
    id <DVTObservingToken> _debugSessionsStateObserverToken;
}

@property NSToolbarItem *toolbarItem; // @synthesize toolbarItem=_toolbarItem;
- (void)_handleLaunchSessionsChanged:(id)arg1 forExecutionEnvironment:(id)arg2;
- (void)_handleToolbarValidStateChange:(id)arg1 forWorkspace:(id)arg2;
- (void)_handleToolbarIdleStateChange:(id)arg1 forWorkspace:(id)arg2;
- (void)_setEnabled:(BOOL)arg1;
- (id)_button;
- (id)initWithButton:(id)arg1 itemIdentifier:(id)arg2 window:(id)arg3;

@end

@interface IDEKeyDrivenNavigableItem : IDENavigableItem
{
    NSDictionary *_cachedPropertyValues;
    struct {
        unsigned int _invalidatingChildItems:1;
        unsigned int _disposing:1;
        unsigned int _reserved:30;
    } _idekdniFlags;
}

+ (void)_customizeNewNavigableItemClass:(Class)arg1 forModelObjectClass:(Class)arg2 extension:(id)arg3;
+ (id)_automatic_keyPathsForValuesAffectingMajorGroup;
+ (id)keyPathsForValuesAffectingFileReference;
+ (id)keyPathsForValuesAffectingGroupIdentifier;
+ (id)keyPathsForValuesAffectingImage;
+ (id)keyPathsForValuesAffectingName;
+ (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
+ (unsigned long long)countOfNavigableItemsForRepresentedObject:(id)arg1;
+ (id)navigableItemsForRepresentedObject:(id)arg1;
+ (id)keyPathsForValuesAffectingConflictStateForUpdateOrMerge;
+ (id)keyPathsForValuesAffectingSourceControlCurrentRevision;
+ (id)keyPathsForValuesAffectingSourceControlLastModifiedDate;
+ (id)keyPathsForValuesAffectingSourceControlServerStatusFlag;
+ (id)keyPathsForValuesAffectingSourceControlServerStatus;
+ (id)keyPathsForValuesAffectingSourceControlLocalStatusFlag;
+ (id)keyPathsForValuesAffectingSourceControlLocalStatus;
- (unsigned long long)indexOfChildItemForIdentifier:(id)arg1;
- (id)identifierForChildItem:(id)arg1;
- (BOOL)_automatic_isMajorGroup;
- (BOOL)isMajorGroup;
- (id)contentDocumentLocation;
- (id)documentType;
- (id)fileReference;
- (id)groupIdentifier;
- (id)image;
- (id)name;
- (void)invalidateValueForKey:(id)arg1;
- (id)cachedValueForProperty:(id)arg1;
- (void)cacheValue:(id)arg1 forProperty:(id)arg2;
- (id)cachedPropertyValues;
- (id)_cachedPropertyValues;
- (void)_configurePropertyObservingForKey:(id)arg1;
- (void)_propagateFilterPredicateToChildItems;
- (BOOL)isLeaf;
- (id)childRepresentedObjects;
- (id)_childItemsKeyPath;
- (id)childItemsKeyPath;
- (void)willAccessChildItems;
- (void)invalidateChildItems;
- (void)_refreshChildItem:(id)arg1;
- (void)_setCoordinator:(id)arg1;
- (void)dispose;
- (void)_removeFromNavigableItemByRepresentedObjectMap;
- (void)_registerInNavigableItemByRepresentedObjectMap;
- (BOOL)representedObjectSupportsVariableConformanceString;
- (id)sourceControlSourceTreeName;
- (unsigned long long)conflictStateForUpdateOrMerge;
- (id)sourceControlCurrentRevision;
- (id)sourceControlLastModifiedDate;
- (id)sourceControlServerStatus;
- (int)sourceControlServerStatusFlag;
- (id)sourceControlLocalStatus;
- (int)sourceControlLocalStatusFlag;

@end

@interface _IDEContainerItemNavigableItemExtraInfo : _IDENavigableItemExtraInfo
{
    NSMapTable *_observersByModelObjectGraph;
}

@property(readonly) NSMapTable *_observersByModelObjectGraph; // @synthesize _observersByModelObjectGraph;
- (void)configureObservingForModelObjectGraph:(id)arg1;
- (void)processModelObjectGraphNotification:(id)arg1;
- (id)init;

@end

@interface IDEMediaPasteHandler : IDESpecialPasteboardHandler
{
}

- (id)specialPasteMenuItemTitleFromPasteboard:(id)arg1;
- (id)specialPasteboardDataFromPasteboard:(id)arg1 error:(id *)arg2;

@end

@interface IDEEditorMultipleContext : IDEViewController <NSSplitViewDelegate>
{
    NSMutableArray *_editorContexts;
    IDEEditorContext *_selectedEditorContext;
    id _viewFrameDidChangeNotificationObserver;
    id _lastActiveEditorContextDidChangeNotificationObserver;
    id <IDEEditorMultipleContextDelegate> _delegate;
    int _layout;
    id <IDEEditorContextDelegate> _editorContextDelegate;
    NSArray *_defaultEditorCategories;
    NSArray *_validEditorCategories;
    NSString *_emptyContentString;
    BOOL _showNavBarHistoryStepperControls;
    BOOL _showSiblingStepperControls;
    BOOL _containsPrimaryEditorContexts;
    BOOL _showMiniIssueNavigators;
}

@property(copy) NSArray *validEditorCategories; // @synthesize validEditorCategories=_validEditorCategories;
@property(copy) NSArray *defaultEditorCategories; // @synthesize defaultEditorCategories=_defaultEditorCategories;
@property BOOL showMiniIssueNavigators; // @synthesize showMiniIssueNavigators=_showMiniIssueNavigators;
@property BOOL containsPrimaryEditorContexts; // @synthesize containsPrimaryEditorContexts=_containsPrimaryEditorContexts;
@property BOOL showSiblingStepperControls; // @synthesize showSiblingStepperControls=_showSiblingStepperControls;
@property BOOL showNavBarHistoryStepperControls; // @synthesize showNavBarHistoryStepperControls=_showNavBarHistoryStepperControls;
@property id <IDEEditorContextDelegate> editorContextDelegate; // @synthesize editorContextDelegate=_editorContextDelegate;
@property int layout; // @synthesize layout=_layout;
@property id <IDEEditorMultipleContextDelegate> delegate; // @synthesize delegate=_delegate;
@property IDEEditorContext *selectedEditorContext; // @synthesize selectedEditorContext=_selectedEditorContext;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)_splitView:(id)arg1 resizeVerticalSubviewsWithOldSize:(struct CGSize)arg2;
- (void)_splitView:(id)arg1 resizeHorizontalSubviewsWithOldSize:(struct CGSize)arg2;
- (struct CGSize)minimumSizeForView:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)discardEditing;
- (BOOL)commitEditingForAction:(int)arg1 errors:(id)arg2;
- (void)_setStateSavingStateDictionaries:(id)arg1 selected:(id)arg2 geometry:(id)arg3;
- (void)_setStateSavingStateDictionaries:(id)arg1 selected:(id)arg2 geometry:(id)arg3 excludingEditorContext:(id)arg4;
- (BOOL)_getStateSavingStateDictionaries:(id *)arg1 selected:(id *)arg2 geometry:(id *)arg3;
- (void)_setEditorHistoryStacks:(id)arg1 selected:(id)arg2 geometry:(id)arg3;
- (BOOL)_getEditorHistoryStacks:(id *)arg1 selected:(id *)arg2 geometry:(id *)arg3;
- (void)_setEditorContextProperties:(id)arg1 selectedProperty:(id)arg2 geometry:(id)arg3 propertySetterBlock:(id)arg4;
- (BOOL)_getEditorContextProperties:(id *)arg1 selectedProperty:(id *)arg2 geometry:(id *)arg3 propertyGetterBlock:(id)arg4;
- (struct CGRect)grabRect;
- (void)setEmptyContentString:(id)arg1;
- (BOOL)_removeEditorContextAtIndex:(unsigned long long)arg1;
- (BOOL)_splitEditorContextAtIndex:(unsigned long long)arg1 actuallySplit:(BOOL)arg2 splitEditorContext:(id *)arg3 newEditorContext:(id *)arg4;
- (void)_updateCanAddOrRemoveSplitStatus;
- (void)closeAllEditorContextsKeeping:(id)arg1;
- (void)closeEditorContext:(id)arg1;
- (BOOL)canCloseEditorContexts;
- (id)addEditorContext;
- (void)splitEditorContext:(id)arg1;
- (BOOL)canCreateAdditionalEditorContexts;
- (id)_addSplitAtIndex:(unsigned long long)arg1;
- (id)secondEditorContext;
- (id)firstEditorContext;
- (id)editorContexts;
- (void)_adjustEditorBorders;
- (BOOL)_editorsAreStackedVertically;
- (id)_splitView;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)_generateNodeAndAddMappingToWorkspaceTabControllerLayoutTree:(id)arg1;

@end

@interface IDEEditorSplittingController : NSObject
{
    DVTGradientImageButton *_addSplitButton;
    DVTGradientImageButton *_removeSplitButton;
    id <IDEEditorSplittingControllerDelegate> _delegate;
}

@property id <IDEEditorSplittingControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)removeSplitAction:(id)arg1;
- (void)addSplitAction:(id)arg1;
- (id)removeSplitButton;
- (id)addSplitButton;
- (id)init;

@end

@interface IDENavigationHUDWindowController : NSWindowController
{
    id _originalCompletionBlock;
    IDENavigationHUDController *_navigationHUDController;
    id _notificationTokenWillResignActive;
    id _notificationTokenWillHide;
}

@property(readonly) IDENavigationHUDController *navigationHUDController; // @synthesize navigationHUDController=_navigationHUDController;
- (void)close;
- (void)showWithEvent:(id)arg1;
- (BOOL)shouldShowAtLocationOfEvent:(id)arg1;
- (void)stopListeningForClosure;
- (void)startListeningForClosure;
- (void)closeWithHUDController:(id)arg1 selection:(id)arg2 animate:(BOOL)arg3;
- (void)loadWindow;
- (id)windowNibName;
- (id)initWithInitialSelection:(id)arg1 options:(id)arg2 completionBlock:(id)arg3;
- (id)initWithURL:(id)arg1 initialSelection:(id)arg2 options:(id)arg3 completionBlock:(id)arg4;
- (id)initWithNavigationHUDController:(id)arg1;

@end

@interface IDENavigationHUDBackgroundView : NSView
{
    NSBezierPath *_cachedStrokePath;
    NSBezierPath *_cachedFillPath;
    struct CGRect _lastKnownBounds;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)cachedFillPath;
- (id)cachedStrokePath;
- (void)generateCachedPathsIfNeeded;

@end

@interface IDERefactoringCreateSuperclassTemplateFactory : IDETemplateTextSubstitutionFactory
{
    NSString *_superclassName;
    NSString *_importFileName;
}

@property(copy) NSString *importFileName; // @synthesize importFileName=_importFileName;
@property(copy) NSString *superclassName; // @synthesize superclassName=_superclassName;
- (BOOL)shouldAddCreatedDocumentsToVersionControl:(id)arg1;
- (id)additionalMacrosForContext:(id)arg1;
- (id)initWithSuperclassName:(id)arg1 importFileName:(id)arg2;

@end

@interface IDERefactoringCreateSuperclassTemplateInstantiationContext : IDETextSubstitutionTemplateInstantiationContext
{
    IDEWorkspace *_workspace;
}

@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;

@end

@interface IDELocationsPrefsPaneController : IDEViewController <DVTFilePathFieldCellDelegate, IDEBuildFolderLocationPrefsSheetControllerDelegate>
{
    BOOL _useCustomDerivedDataLocation;
    BOOL _useCustomSnapshotsLocation;
    BOOL _useCustomDistributionArchivesLocation;
    NSString *_customDerivedDataLocation;
    NSString *_customSnapshotsLocation;
    NSString *_customDistributionArchivesLocation;
    int _derivedDataLocationStyle;
    int _snapshotsLocationStyle;
    int _distributionArchivesLocationStyle;
    int _buildFolderLocationStyle;
    int _buildSubfolderStyle;
    NSString *_customBuildSubfolderName;
    DVTFilePathField *_derivedDataFilePathField;
    NSTextField *_derivedDataRelativePathField;
    DVTFilePathField *_snapshotsFilePathField;
    DVTFilePathField *_distributionArchivesFilePathField;
    DVTFilePathField *_derivedDataPathLabel;
    DVTFilePathField *_snapshotsPathLabel;
    DVTFilePathField *_distributionArchivesPathLabel;
    NSTextField *_derivedDataRelativePathLabel;
}

+ (id)keyPathsForValuesAffectingCustomWorkspaceRelativeDerivedDataLocation;
+ (id)keyPathsForValuesAffectingUseCustomDistributionArchivesLocation;
+ (id)keyPathsForValuesAffectingUseCustomSnapshotsLocation;
+ (id)keyPathsForValuesAffectingUseCustomDerivedDataLocation;
@property(copy) NSString *customBuildSubfolderName; // @synthesize customBuildSubfolderName=_customBuildSubfolderName;
@property int buildSubfolderStyle; // @synthesize buildSubfolderStyle=_buildSubfolderStyle;
@property int buildFolderLocationStyle; // @synthesize buildFolderLocationStyle=_buildFolderLocationStyle;
@property int distributionArchivesLocationStyle; // @synthesize distributionArchivesLocationStyle=_distributionArchivesLocationStyle;
@property int snapshotsLocationStyle; // @synthesize snapshotsLocationStyle=_snapshotsLocationStyle;
@property int derivedDataLocationStyle; // @synthesize derivedDataLocationStyle=_derivedDataLocationStyle;
@property(copy) NSString *customDistributionArchivesLocation; // @synthesize customDistributionArchivesLocation=_customDistributionArchivesLocation;
@property(copy) NSString *customSnapshotsLocation; // @synthesize customSnapshotsLocation=_customSnapshotsLocation;
@property(copy) NSString *customDerivedDataLocation; // @synthesize customDerivedDataLocation=_customDerivedDataLocation;
- (BOOL)validateCustomSnapshotsLocation:(id *)arg1 error:(id *)arg2;
- (BOOL)validateCustomDistributionArchivesLocation:(id *)arg1 error:(id *)arg2;
- (BOOL)validateCustomDerivedDataLocation:(id *)arg1 error:(id *)arg2;
- (void)buildFolderLocationSheetDidEndWithBuildFolderLocationStyle:(int)arg1 buildSubfolderStyle:(int)arg2 customBuildSubfolderName:(id)arg3;
- (void)showBuildFolderLocationSheet:(id)arg1;
@property(readonly) NSString *defaultDistributionArchivesLocation;
@property(readonly) NSString *defaultSnapshotsLocation;
@property(readonly) NSString *defaultDerivedDataLocation;
@property(readonly) NSAttributedString *customWorkspaceRelativeDerivedDataLocation;
@property(readonly) BOOL useCustomDistributionArchivesLocation;
@property(readonly) BOOL useCustomSnapshotsLocation;
@property(readonly) BOOL useCustomDerivedDataLocation;
- (id)DVTFilePathFieldCell:(id)arg1 resolvedPathForPath:(id)arg2;
- (void)_updateDistributionArchivesPathLabelForSelectedLocationStyle;
- (void)_updateSnapshotsPathLabelForSelectedLocationStyle;
- (void)_updateDerivedDataPathLabelForSelectedLocationStyle;
- (void)_updatePathLabelsForSelectedLocationStyles;
- (void)_updateDistributionArchivesCustomLocationFieldForPathType;
- (void)_updateSnapshotsCustomLocationFieldForPathType;
- (void)_updateDerivedDataCustomLocationFieldForPathType;
- (void)_updateCustomLocationFieldsForPathTypes;
- (void)_saveLocationsPreferences;
- (void)_windowDidResignMain:(id)arg1;
- (void)viewWillUninstall;
- (void)loadView;

@end

@interface IDENavigationHUDController : IDEViewController
{
    IDENavigationHUDSelectionView *_selectionView;
    CALayer<IDENavigationHUDSelectableLayer> *_currentClickedLayer;
    NSMapTable *_workspaceWindowControllerToWorkspaceWindowLayerMap;
    id _completionBlock;
    IDENavigationHUDNewWorkspaceWindowLayer *_newWindowLayer;
    NSMapTable *_workspaceTabToLayoutTreeMap;
    IDEWorkspaceDocument *_workspaceDocument;
    IDENavigationHUDSelection *_selection;
    NSArray *_workspaceWindowControllers;
    NSSet *_workspaceObservingTokens;
    NSArray *_workspaceWindowLayers;
    id _hudLocalEventHandler;
    NSDictionary *_options;
    NSURL *_URL;
}

@property(readonly) IDENavigationHUDNewWorkspaceWindowLayer *newWindowLayer; // @synthesize newWindowLayer=_newWindowLayer;
@property IDENavigationHUDSelection *selection; // @synthesize selection=_selection;
@property IDEWorkspaceDocument *workspaceDocument; // @synthesize workspaceDocument=_workspaceDocument;
@property(readonly) NSURL *URL; // @synthesize URL=_URL;
- (id)defaultPrimaryEditorContextLayoutTreeNodeForWorkspaceTabController:(id)arg1;
- (id)layoutTreeForWorkspaceTabController:(id)arg1;
- (void)selectionViewDidStartDraggingFileProxy:(id)arg1;
- (id)filePathForSelectionViewFileProxy:(id)arg1;
- (id)textForSelectionView:(id)arg1;
- (void)selectionView:(id)arg1 didDoubleClickWithEvent:(id)arg2;
- (void)selectionView:(id)arg1 didReceiveMouseUp:(id)arg2;
- (void)selectionView:(id)arg1 didReceiveMouseDown:(id)arg2;
- (id)selectableLayerForMouseEvent:(id)arg1;
- (id)coverFlowLayersForSelectionView:(id)arg1;
- (id)fileProxyImageForSelectionView:(id)arg1;
- (id)fileProxyTitleForSelectionView:(id)arg1;
@property(readonly) IDENavigationHUDAbstractWorkspaceWindowLayer *selectedWorkspaceWindowLayer;
- (void)respondToSelection;
- (void)chooseSelection:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (void)stopListeningToWindowControllers;
- (void)startListeningToWindowControllers;
- (void)stopListeningToEvents;
- (void)startListeningToEvents;
- (void)navigateRight;
- (void)navigateLeft;
- (void)navigateDown;
- (void)navigateUp;
- (void)navigateRightOneTab;
- (void)navigateLeftOneTab;
- (void)navigateRightOneWindow;
- (void)navigateLeftOneWindow;
- (void)generateWorkspaceWindowLayers;
- (id)workspaceWindowLayerForWorkspaceWindowController:(id)arg1;
- (id)existingWorkspaceWindowLayerForWorkspaceWindowController:(id)arg1;
- (BOOL)shouldOnlySelectInitialWindow;
- (BOOL)canCreateNewWindow;
- (unsigned long long)role;
@property(readonly) NSArray *workspaceWindowControllers;
- (void)invalidate;
- (id)initWithURL:(id)arg1 initialSelection:(id)arg2 options:(id)arg3 completionBlock:(id)arg4;
- (id)initWithInitialSelection:(id)arg1 options:(id)arg2 completionBlock:(id)arg3;

@end

@interface IDENavigationHUDImageAndTextLayer : DVTImageAndTextLayer
{
}

+ (struct CGColor *)defaultTextShadowColor;
+ (id)defaultAttributes;

@end

@interface IDENavigationHUDSelectionView : DVTLayerHostingView
{
    id <IDENavigationHUDSelectionViewDelegate> _delegate;
    DVTDelayedValidator *_fileProxyValidator;
    DVTDelayedValidator *_coverFlowValidator;
    DVTDelayedValidator *_textAreaValidator;
    DVTImageAndTextLayer *_fileProxyLayer;
    DVTImageAndTextLayer *_textLayer;
    NSMapTable *_wrappingLayerToRealLayerMap;
    NSMapTable *_realLayerToWrappingLayerMap;
    unsigned long long _selectedCoverFlowLayerIndex;
    CAScrollLayer *_coverFlowScrollLayer;
    NSArray *_coverFlowLayers;
}

+ (id)keyPathsForValuesAffectingSelectedCoverFlowLayer;
@property unsigned long long selectedCoverFlowLayerIndex; // @synthesize selectedCoverFlowLayerIndex=_selectedCoverFlowLayerIndex;
@property id <IDENavigationHUDSelectionViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)removeCoverFlowLayer:(id)arg1;
- (void)addCoverFlowLayer:(id)arg1;
- (id)wrappingLayerForLayerCreatingIfNecessary:(id)arg1;
- (id)realLayerForWrappingLayer:(id)arg1;
- (id)existingWrappingLayerForLayer:(id)arg1;
- (void)setCoverFlowNeedsLayout;
- (void)refreshTextArea;
- (void)refreshCoverFlow;
- (void)refreshFileProxy;
- (void)invalidateTextArea;
- (void)invalidateCoverFlow;
- (void)invalidateFileProxy;
- (BOOL)requireOptimumPerformance;
@property CALayer *selectedCoverFlowLayer;
@property(readonly) struct CGSize fileProxyImageSize;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)selectionViewCommonInit;

@end

@interface IDENavigationHUDCoverFlowWrapperLayer : CALayer
{
    CAReplicatorLayer *_reflectionLayer;
}

@property(readonly) CALayer *layerForApplyingPerspective; // @synthesize layerForApplyingPerspective=_reflectionLayer;
- (id)initWithLayerToWrap:(id)arg1;

@end

@interface IDENavigationHUDAbstractWorkspaceWindowLayer : CAGradientLayer <IDENavigationHUDSelectableLayer, IDENavigationHUDWindowLevelNavigableLayer>
{
    IDENavigationHUDController *_navigationHUDController;
}

@property(readonly) IDENavigationHUDController *navigationHUDController; // @synthesize navigationHUDController=_navigationHUDController;
- (id)selectionForNavigatingRightOneTab;
- (id)selectionForNavigatingLeftOneTab;
- (id)selectionForNavigatingRight;
- (id)selectionForNavigatingLeft;
- (id)selectionForNavigatingDown;
- (id)selectionForNavigatingUp;
@property(readonly) BOOL representativeSelectionIsFinalForSingleMouseUp;
@property(readonly) IDENavigationHUDSelection *representativeSelection;
- (id)initWithNavigationHUDController:(id)arg1;

@end

@interface IDENavigationHUDWorkspaceWindowLayer : IDENavigationHUDAbstractWorkspaceWindowLayer <IDENavigationHUDSelectionDrivenLayer>
{
    NSMapTable *_strongWorkspaceTabControllerToStrongTabLayerMap;
    IDEWorkspaceWindowController *_workspaceWindowController;
    NSMapTable *_strongDividerLayerToLastKnownBoundsMap;
    NSMapTable *_strongTabLayerToStrongDividerLayerMap;
    IDENavigationHUDTabBarLayer *_tabBarLayer;
    IDENavigationHUDSelection *_selection;
    CAScrollLayer *_mainTabScrollLayer;
    NSArray *_orderedTabLayers;
    NSDictionary *_options;
}

@property(copy) IDENavigationHUDSelection *selection; // @synthesize selection=_selection;
@property(readonly) IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
- (id)selectionForNavigatingRightOneTab;
- (id)selectionForNavigatingLeftOneTab;
- (id)selectionForNavigatingRight;
- (id)selectionForNavigatingLeft;
- (id)selectionForNavigatingDown;
- (id)selectionForNavigatingUp;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)setLastKnownBounds:(struct CGRect)arg1 forDividerLayer:(id)arg2;
- (struct CGRect)lastKnownBoundsForDividerLayer:(id)arg1;
- (id)dividerLayerForTabLayer:(id)arg1;
- (id)tabLayerForWorkspaceTabController:(id)arg1;
- (void)scrollSelectedTabVisible;
- (id)selectedTabLayer;
- (id)representativeSelection;
@property(readonly) BOOL shouldShowTabBar;
@property(readonly) BOOL shouldOnlySelectInitialTab;
@property(readonly) BOOL canCreateNewTab;
- (id)initWithNavigationHUDController:(id)arg1 workspaceWindowController:(id)arg2 initialSelection:(id)arg3 options:(id)arg4;

@end

@interface IDENavigationHUDNewWorkspaceWindowLayer : IDENavigationHUDAbstractWorkspaceWindowLayer
{
}

- (id)representativeSelection;
- (id)initForCreatingNewWindowInNavigationHUDController:(id)arg1;

@end

@interface IDEGeniusResultsGraphNode : NSObject
{
    int _type;
    NSString *_identifier;
    NSImage *_image;
    NSString *_name;
    NSArray *_subitems;
    NSString *_manualDomainIdentifier;
    IDENavigableItem *_manualDomainRootNavigableItem;
    id <DVTObservingToken> _manualDomainRootChildItemsObservingToken;
}

+ (id)_rootNodeForGeniusResultsWithJumpToCounterpartCategory:(id)arg1;
+ (id)_rootNodeForGeniusResultsWithManualCategory:(id)arg1 editorContext:(id)arg2;
+ (id)_rootNodeForGeniusResults:(id)arg1 editorContext:(id)arg2 includeJumpToCounterpartCategory:(BOOL)arg3 includeManualCategory:(BOOL)arg4;
@property(readonly) IDENavigableItem *manualDomainRootNavigableItem; // @synthesize manualDomainRootNavigableItem=_manualDomainRootNavigableItem;
@property(readonly) NSString *manualDomainIdentifier; // @synthesize manualDomainIdentifier=_manualDomainIdentifier;
@property(copy) NSArray *subitems; // @synthesize subitems=_subitems;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSImage *image; // @synthesize image=_image;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property int type; // @synthesize type=_type;
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)nameWithSubitemCount;
- (id)ideModelObjectTypeIdentifier;
- (void)setManualDomainIdentifier:(id)arg1 rootNavigableItem:(id)arg2;
- (void)setChildrenToURL:(id)arg1;
- (id)description;
- (id)initWithType:(int)arg1 identifier:(id)arg2 image:(id)arg3 name:(id)arg4 subitems:(id)arg5;

@end

@interface IDEGeniusResultsGraphNodeNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (BOOL)isLeaf;

@end

@interface IDEOutlineBasedNavigator : IDENavigator
{
    id _rootItemObservingToken;
    IDENavigatorOutlineView *_outlineView;
    NSArray *_objects;
    NSArray *_selectedObjects;
    id <IDEOpenRequest> _lastOpenRequest;
}

+ (void)initialize;
@property id <IDEOpenRequest> lastOpenRequest; // @synthesize lastOpenRequest=_lastOpenRequest;
@property NSArray *objects; // @synthesize objects=_objects;
@property IDENavigatorOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (id)navigableItemWithName:(id)arg1 inArray:(id)arg2;
- (id)itemsForNameArrays:(id)arg1;
- (id)nameArraysForItems:(id)arg1;
- (id)contextMenuSelection;
@property(readonly) NSIndexSet *contextMenuSelectedRowIndexes;
@property(readonly) NSIndexSet *clickedRowIndexes;
- (void)invalidate;
- (void)updateBoundContent;
- (void)_setupRootNavigableItemObserving;
- (void)_clearRootNavigableItemObserving;
- (void)updateOutlineViewContents;
- (void)_openNavigableItem:(id)arg1 eventType:(unsigned long long)arg2;
- (void)openDoubleClickedNavigableItemsAction:(id)arg1;
- (void)openClickedNavigableItemAction:(id)arg1;
- (void)openSelectedNavigableItemsKeyAction:(id)arg1;
- (id)openSpecifierForNavigableItem:(id)arg1 error:(id *)arg2;
- (BOOL)shouldOpenNavigableItem:(id)arg1;
- (BOOL)delegateFirstResponder;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;

// Remaining properties
@property(readonly) NSMutableArray *mutableSelectedObjects; // @dynamic mutableSelectedObjects;
@property NSArray *selectedObjects; // @dynamic selectedObjects;

@end

@interface IDENavigationHUDTabBarLayer : CALayer <IDENavigationHUDSelectionDrivenLayer, IDENavigationHUDWindowLevelNavigableLayer>
{
    IDENavigationHUDWorkspaceWindowLayer *_workspaceWindowLayer;
    NSMapTable *_strongTabControllerToStrongTabLayerMap;
    IDENavigationHUDTabBarNewTabLayer *_newTabButton;
    BOOL _shouldScrollSelectedTabVisibleInLayout;
    IDENavigationHUDSelection *_initialSelection;
    IDENavigationHUDSelection *_selection;
    CAGradientLayer *_rightOverflowLayer;
    CAGradientLayer *_leftOverflowLayer;
    CAScrollLayer *_tabsScrollLayer;
    NSDictionary *_options;
}

@property(copy) IDENavigationHUDSelection *selection; // @synthesize selection=_selection;
@property(readonly) IDENavigationHUDWorkspaceWindowLayer *workspaceWindowLayer; // @synthesize workspaceWindowLayer=_workspaceWindowLayer;
- (id)selectionForNavigatingRightOneTab;
- (id)selectionForNavigatingLeftOneTab;
- (id)selectionForNavigatingRight;
- (id)selectionForNavigatingLeft;
- (id)selectionForNavigatingDown;
- (id)selectionForNavigatingUp;
@property(readonly) IDENavigationHUDTabBarTabLayer *selectedTabLayer;
- (void)layoutSublayersOfLayer:(id)arg1;
- (id)orderedTabLayers;
- (id)tabLayerForTabController:(id)arg1;
- (id)navigationHUDController;
@property(readonly) IDEWorkspaceWindowController *workspaceWindowController;
@property(readonly) BOOL shouldOnlySelectInitialTab;
@property(readonly) BOOL canCreateNewTab;
- (id)initWithWorkspaceWindowLayer:(id)arg1 initialSelection:(id)arg2 options:(id)arg3;

@end

@interface IDENavigationHUDTabBarTabLayer : IDENavigationHUDBorderedGradientLayer <IDENavigationHUDSelectableLayer>
{
    IDEWorkspaceTabController *_workspaceTabController;
    IDENavigationHUDTabBarLayer *_tabBarLayer;
    unsigned long long _tabState;
    struct CGSize _lastKnownOverlaySize;
    CALayer *_overlayLayer;
}

@property(readonly) IDENavigationHUDTabBarLayer *tabBarLayer; // @synthesize tabBarLayer=_tabBarLayer;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property unsigned long long tabState; // @synthesize tabState=_tabState;
@property(readonly) BOOL representativeSelectionIsFinalForSingleMouseUp;
@property(readonly) IDENavigationHUDSelection *representativeSelection;
- (id)navigationHUDController;
- (void)layoutSublayers;
- (id)initWithWorkspaceTabController:(id)arg1 tabBarLayer:(id)arg2;
- (id)initWithTabBarLayer:(id)arg1;

@end

@interface IDENavigationHUDTabBarNewTabLayer : IDENavigationHUDTabBarTabLayer
{
}

- (BOOL)representativeSelectionIsFinalForSingleMouseUp;
- (id)representativeSelection;
- (id)initForCreatingNewTabInTabBarLayer:(id)arg1;

@end

@interface IDENavigationHUDSelection : NSObject
{
    IDEWorkspaceTabControllerLayoutTreeNode *_representedLayoutTreeNode;
    IDEWorkspaceWindowController *_workspaceWindowController;
    IDEWorkspaceTabController *_workspaceTabController;
    unsigned long long _attributes;
}

+ (unsigned long long)defaultAttributes;
@property(readonly) unsigned long long attributes; // @synthesize attributes=_attributes;
@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *representedLayoutTreeNode; // @synthesize representedLayoutTreeNode=_representedLayoutTreeNode;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property(readonly) IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
- (id)humanReadableStringForRole:(unsigned long long)arg1 inNavigationHUDController:(id)arg2;
- (id)humanReadableStringForOpeningLayoutTreeNode:(id)arg1 withRole:(unsigned long long)arg2 inNavigationHUDController:(id)arg3;
- (id)description;
- (id)currentEditorContextApproximatingSelection;
- (void)revealInUI;
@property(readonly) int editorCoordinatorTarget;
@property(readonly) BOOL representsDirectEditorContextSelection;
@property(readonly) BOOL representsDirectTabBarSelection;
@property(readonly) BOOL representsNewSplitAction;
@property(readonly) BOOL representsNewWorkspaceTabAction;
@property(readonly) BOOL representsNewWorkspaceWindowAction;
- (id)initWithDefaultSelectionInWorkspaceTabController:(id)arg1 workspaceWindowController:(id)arg2 inNavigationHUDController:(id)arg3;
- (id)initWithSelection:(id)arg1;
- (id)initWithWorkspaceWindowController:(id)arg1;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabController:(id)arg2;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabController:(id)arg2 representedLayoutTreeNode:(id)arg3;
- (id)init;

@end

@interface IDENavigationHUDNewWorkspaceWindowSelection : IDENavigationHUDSelection
{
}

+ (unsigned long long)defaultAttributes;
- (void)revealInUI;
- (int)editorCoordinatorTarget;
- (id)humanReadableStringForRole:(unsigned long long)arg1 inNavigationHUDController:(id)arg2;

@end

@interface IDENavigationHUDTabBarTabSelection : IDENavigationHUDSelection
{
}

+ (unsigned long long)defaultAttributes;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabController:(id)arg2;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabController:(id)arg2 representedLayoutTreeNode:(id)arg3;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabController:(id)arg2 forNavigationHUDController:(id)arg3;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabController:(id)arg2 representedLayoutTreeNode:(id)arg3 forNavigationHUDController:(id)arg4;

@end

@interface IDENavigationHUDTabBarNewTabSelection : IDENavigationHUDSelection
{
}

+ (unsigned long long)defaultAttributes;
- (int)editorCoordinatorTarget;
- (id)humanReadableStringForRole:(unsigned long long)arg1 inNavigationHUDController:(id)arg2;

@end

@interface IDENavigationHUDNewSplitSelection : IDENavigationHUDSelection
{
}

+ (unsigned long long)defaultAttributes;
- (int)editorCoordinatorTarget;
- (id)humanReadableStringForRole:(unsigned long long)arg1 inNavigationHUDController:(id)arg2;

@end

@interface IDENavigationHUDTabLayer : CALayer <IDENavigationHUDSelectionDrivenLayer, IDENavigationHUDNavigableLayer>
{
    NSMapTable *_strongLayoutTreeNodeToStrongLayoutTreeNodeLayerMap;
    IDENavigationHUDWorkspaceWindowLayer *_workspaceWindowLayer;
    IDENavigationHUDNewSplitTabLayoutTreeLayer *_newSplitLayer;
    IDEWorkspaceTabController *_workspaceTabController;
    NSMapTable *_strongLayoutCellToStrongLayerMap;
    IDENavigationHUDTabLayout *_currentTabLayout;
    IDENavigationHUDSelection *_selection;
}

@property(copy) IDENavigationHUDSelection *selection; // @synthesize selection=_selection;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property(readonly) IDENavigationHUDWorkspaceWindowLayer *workspaceWindowLayer; // @synthesize workspaceWindowLayer=_workspaceWindowLayer;
- (id)selectionForLastPrimaryEditorContextLayoutTreeNode;
- (id)selectionForFirstPrimaryEditorContextLayoutTreeNode;
- (id)selectionForNavigatingRight;
- (id)selectionForNavigatingLeft;
- (id)selectionForNavigatingDown;
- (id)selectionForNavigatingUp;
- (id)minimumOrMaximumDescendentCellOfLayoutCell:(id)arg1 beforeOrAfterCell:(id)arg2 afterReversingChildren:(BOOL)arg3 orientation:(unsigned long long)arg4 intersectingOppositeAxisOfRect:(struct CGRect)arg5;
- (id)selectionForNavigatingWithOrientation:(unsigned long long)arg1 handlerBlock:(id)arg2;
- (id)selectionForLayoutCell:(id)arg1;
- (id)selectableLayerForLayoutCell:(id)arg1;
- (void)recursivelyLayoutCell:(id)arg1 inContainingLayer:(id)arg2;
- (id)laidOutLayerForLayoutCell:(id)arg1;
- (id)selectedLayoutTreeLayer;
- (id)layoutTreeNodeLayerForLayoutTreeNode:(id)arg1;
- (id)workspaceWindowController;
- (id)initWithWorkspaceTabController:(id)arg1 workspaceWindowLayer:(id)arg2;

@end

@interface IDENavigationHUDTabLayout : NSObject
{
    IDENavigationHUDNewSplitTabLayoutCell *_cellRepresentingNewGeniusSplit;
    NSMapTable *_strongLayoutTreeNodeToStrongLayoutCellMap;
    IDEWorkspaceTabControllerLayoutTree *_tabLayoutTree;
    IDEWorkspaceTabController *_workspaceTabController;
    IDENavigationHUDTabLayoutCell *_rootLayoutCell;
}

@property(readonly) IDENavigationHUDNewSplitTabLayoutCell *cellRepresentingNewGeniusSplit; // @synthesize cellRepresentingNewGeniusSplit=_cellRepresentingNewGeniusSplit;
@property(readonly) IDENavigationHUDTabLayoutCell *rootLayoutCell; // @synthesize rootLayoutCell=_rootLayoutCell;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
- (id)tabLayoutCellForLayoutTreeNode:(id)arg1;
@property(readonly) NSArray *orderedPrimaryEditorContextLayoutTreeNodes;
- (id)description;
- (id)initWithWorkspaceTabController:(id)arg1 inNavigationHUDController:(id)arg2;

@end

@interface IDEWorkspaceTabControllerLayoutTreeNode : NSObject <NSCoding>
{
    unsigned long long _orientation;
    unsigned long long _contentType;
    IDEWorkspaceTabControllerLayoutTreeNode *_parent;
    IDENavigableItemArchivableRepresentation *_documentArchivableRepresentation;
    IDEWorkspaceTabControllerLayoutTree *_layoutTree;
    NSArray *_children;
}

@property(readonly) IDENavigableItemArchivableRepresentation *documentArchivableRepresentation; // @synthesize documentArchivableRepresentation=_documentArchivableRepresentation;
@property(readonly) unsigned long long contentType; // @synthesize contentType=_contentType;
@property(readonly) unsigned long long orientation; // @synthesize orientation=_orientation;
@property(readonly) NSArray *children; // @synthesize children=_children;
@property IDEWorkspaceTabControllerLayoutTreeNode *parent; // @synthesize parent=_parent;
@property IDEWorkspaceTabControllerLayoutTree *layoutTree; // @synthesize layoutTree=_layoutTree;
@property(readonly) NSString *fullDescription;
- (void)appendDescriptionToString:(id)arg1 withIndentation:(id)arg2;
- (id)description;
@property(readonly) NSArray *descendantLeafNodes;
- (void)addLeafNodesToMutableArray:(id)arg1;
@property(readonly) NSURL *fileURL;
- (id)lastLeafNodeOfContentType:(unsigned long long)arg1;
- (id)firstLeafNodeOfContentType:(unsigned long long)arg1;
- (id)descendantTreeNodeForIndexPath:(id)arg1;
- (id)indexPathRelativeToNode:(id)arg1;
@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *rootLayoutTreeNode;
@property(readonly, getter=isLeaf) BOOL leaf;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithChildren:(id)arg1 orientation:(unsigned long long)arg2;
- (id)initLeafNodeWithContentType:(unsigned long long)arg1 documentArchivableRepresentation:(id)arg2;
- (id)generateLayoutTreeCell;

@end

@interface IDENavigationHUDTabLayoutCell : NSObject
{
    IDEWorkspaceTabControllerLayoutTreeNode *_representedLayoutTreeNode;
    unsigned long long _orientation;
    IDENavigationHUDTabLayoutCell *_parentCell;
    NSArray *_childCells;
}

@property(readonly) unsigned long long orientation; // @synthesize orientation=_orientation;
@property IDENavigationHUDTabLayoutCell *parentCell; // @synthesize parentCell=_parentCell;
@property(readonly) NSArray *childCells; // @synthesize childCells=_childCells;
@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *representedLayoutTreeNode; // @synthesize representedLayoutTreeNode=_representedLayoutTreeNode;
@property(readonly) NSString *fullDescription;
- (void)appendDescriptionToString:(id)arg1 withIndentation:(id)arg2;
- (id)description;
- (BOOL)canRotateLogicalGeometricLayoutToOrientation:(BOOL)arg1;
- (void)rotateLogicallyGeometricNodes;
@property(readonly) BOOL canCollapse;
- (void)condense;
@property(readonly) double fixedWidthOrHeight;
@property(readonly) BOOL hasFixedWidthOrHeight;
@property(readonly) BOOL representsNewSplitAction;
- (void)addChildCell:(id)arg1;
- (void)setChildCells:(id)arg1;
- (id)representativeLayerForTabLayer:(id)arg1;
@property(readonly, getter=isLeaf) BOOL leaf;
- (id)initWithRepresentedLayoutTreeNode:(id)arg1 childCells:(id)arg2 orientation:(unsigned long long)arg3;
- (id)initWithRepresentedLayoutTreeNode:(id)arg1;

@end

@interface IDENavigationHUDNewSplitTabLayoutCell : IDENavigationHUDTabLayoutCell
{
}

- (id)description;
- (id)representativeLayerForTabLayer:(id)arg1;
- (double)fixedWidthOrHeight;
- (BOOL)hasFixedWidthOrHeight;
- (BOOL)representsNewSplitAction;
- (id)initForCreatingNewSplit;

@end

@interface IDENavigationHUDBorderedLayer : CALayer <IDENavigationHUDBorderedLayer>
{
    int _borderSides;
    int _highlightSides;
    CALayer *_horizontalHighlightLayer;
    CALayer *_verticalHighlightLayer;
    CALayer *_rightBorderLayer;
    CALayer *_leftBorderLayer;
    CALayer *_bottomBorderLayer;
    CALayer *_topBorderLayer;
}

- (void)layoutSublayers;
- (BOOL)hasVerticalHighlight;
@property int highlightSides;
@property int borderSides;
- (id)init;

@end

@interface IDENavigationHUDBorderedGradientLayer : CAGradientLayer <IDENavigationHUDBorderedLayer>
{
    int _borderSides;
    int _highlightSides;
    CALayer *_horizontalHighlightLayer;
    CALayer *_verticalHighlightLayer;
    CALayer *_rightBorderLayer;
    CALayer *_leftBorderLayer;
    CALayer *_bottomBorderLayer;
    CALayer *_topBorderLayer;
}

- (void)layoutSublayers;
- (BOOL)hasVerticalHighlight;
@property int highlightSides;
@property int borderSides;
- (id)init;

@end

@interface IDENavigationHUDTabLayoutLayer : IDENavigationHUDBorderedGradientLayer <IDENavigationHUDSelectableLayer>
{
    IDEWorkspaceWindowController *_workspaceWindowController;
    IDENavigationHUDTabLayer *_workspaceTabLayer;
    unsigned long long _state;
    CAGradientLayer *_overlayLayer;
    CALayer *_imageLayer;
}

@property(readonly) IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
@property(readonly) IDENavigationHUDTabLayer *workspaceTabLayer; // @synthesize workspaceTabLayer=_workspaceTabLayer;
@property unsigned long long state; // @synthesize state=_state;
@property(readonly) BOOL representativeSelectionIsFinalForSingleMouseUp;
- (id)workspaceTabController;
@property(readonly) IDENavigationHUDSelection *representativeSelection;
- (void)layoutSublayers;
- (struct CGSize)imageSize;
- (id)initWithWorkspaceWindowController:(id)arg1 workspaceTabLayer:(id)arg2 image:(id)arg3;
- (id)init;

@end

@interface IDENavigationHUDTabLayoutTreeNodeLayer : IDENavigationHUDTabLayoutLayer
{
    IDEWorkspaceTabControllerLayoutTreeNode *_representedLayoutTreeNode;
}

@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *representedLayoutTreeNode; // @synthesize representedLayoutTreeNode=_representedLayoutTreeNode;
- (id)representativeSelection;
- (id)initWithRepresentedLayoutTreeNode:(id)arg1 inWorkspaceTabLayer:(id)arg2 inWorkspaceWindowController:(id)arg3;

@end

@interface IDENavigationHUDNewSplitTabLayoutTreeLayer : IDENavigationHUDTabLayoutLayer
{
}

- (id)representativeSelection;
- (id)initForCreatingNewSplitInWithWorkspaceWindowController:(id)arg1 workspaceTabLayer:(id)arg2;

@end

@interface IDEEditorModeViewController : IDEViewController
{
    IDEEditorContext *_primaryEditorContext;
    IDEEditorContext *_selectedAlternateEditorContext;
    NSDictionary *_lastSetEditorLayoutConfiguration;
    NSDictionary *_lastSetPersistentRepresentation;
    IDEEditorArea *_editorArea;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)stateSavingIdentifiers;
@property IDEEditorContext *selectedAlternateEditorContext; // @synthesize selectedAlternateEditorContext=_selectedAlternateEditorContext;
@property IDEEditorContext *primaryEditorContext; // @synthesize primaryEditorContext=_primaryEditorContext;
@property IDEEditorArea *editorArea; // @synthesize editorArea=_editorArea;
- (void)editorContext:(id)arg1 editorStateRepositoryDidChange:(id)arg2;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_setPersistentRepresentation:(id)arg1 forIdentifier:(id)arg2;
- (id)_persistentRepresentationForIdentifier:(id)arg1;
- (void)_setPersistentRepresentation:(id)arg1;
- (id)_persistentRepresentation;
- (void)_stampEditorLayoutConfiguration:(id)arg1 forIdentifier:(id)arg2;
- (id)_liftEditorLayoutConfigurationForIdentifier:(id)arg1;
- (void)_stampEditorLayoutConfiguration:(id)arg1;
- (id)_liftEditorLayoutConfiguration;
- (BOOL)_getStateSavingStateDictionaries:(id *)arg1 selected:(id *)arg2 geometry:(id *)arg3 forPersistentRepresentation:(id)arg4;
- (id)_persistentRepresentationForStateSavingStateDictionaries:(id)arg1 selected:(id)arg2 geometry:(id)arg3;
- (BOOL)_getEditorHistoryStacks:(id *)arg1 selected:(id *)arg2 geometry:(id *)arg3 forEditorLayoutConfiguration:(id)arg4;
- (id)_editorLayoutConfigurationForEditorHistoryStacks:(id)arg1 selected:(id)arg2 geometry:(id)arg3;
- (BOOL)_getItems:(id *)arg1 itemsKey:(id)arg2 selected:(id *)arg3 geometry:(id *)arg4 inConfigurationDictionary:(id)arg5;
- (id)_configurationDictionaryWithItems:(id)arg1 itemsKey:(id)arg2 selected:(id)arg3 geometry:(id)arg4;
- (id)_stealPrimaryEditorContext;
- (id)editorContexts;
- (BOOL)openEditorOpenSpecifier:(id)arg1 editorContext:(id)arg2;
- (BOOL)openEditorHistoryItem:(id)arg1 editorContext:(id)arg2;
@property(readonly) struct CGSize minimumContentViewFrameSize;
- (BOOL)canCreateSplitForNavigationHUD;
- (void)resetEditor;
- (BOOL)canResetEditor;
- (void)removeAssistantEditor;
- (id)addNewAssistantEditor;
- (BOOL)canAddNewAssistantEditor;
- (BOOL)canRemoveAssistantEditor;
- (void)addAssistantEditor;
- (BOOL)canAddAssistantEditor;
- (void)setAssistantEditorsLayout:(int)arg1;
- (BOOL)canChangeAssistantEditorsLayout;
- (id)_initWithPrimaryEditorContext:(id)arg1;

// Remaining properties
@property DVTStateToken *stateToken; // @dynamic stateToken;

@end

@interface IDESnapshotAreYouSureController : DVTViewController <IDESnapshotConfirmationDelegate>
{
    NSWindow *_hostWindow;
    id _completionBlock;
    IDEWorkspace *_workspace;
    NSWindow *_sheetWindow;
    NSImage *_snapshotImage;
    NSString *_projectOrWorkspaceCapitalized;
    NSString *_operationName;
    BOOL _shouldTakeSnapshot;
}

+ (id)defaultViewNibName;
- (void)_sheetDidEnd;
- (void)skipSnapshot:(id)arg1;
- (void)takeSnapshot:(id)arg1;
- (id)messageDescription;
- (id)messageTitle;
- (void)requestSnapshotConfirmationForOperationName:(id)arg1 inWorkspace:(id)arg2 completionBlock:(id)arg3;
- (id)initUsingDefaultNib;

@end

@interface IDEWorkspaceTabControllerLayoutTree : NSObject <NSCoding>
{
    IDEWorkspaceTabControllerLayoutTreeNode *_primaryEditorContextNode;
    IDEWorkspaceTabControllerLayoutTreeNode *_geniusEditorContextNode;
    IDEWorkspaceTabControllerLayoutTreeNode *_rootLayoutTreeNode;
    NSMapTable *_strongEditorMultipleContextToStrongLayoutTreeNodeMap;
    NSMapTable *_strongLayoutTreeNodeToStrongEditorMultipleContextMap;
    NSMapTable *_strongEditorContextToStrongLayoutTreeNodeMap;
    NSMapTable *_strongLayoutTreeNodeToStrongEditorContextMap;
}

@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *rootLayoutTreeNode; // @synthesize rootLayoutTreeNode=_rootLayoutTreeNode;
@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *treeNodeRepresentingGeniusEditorContextArea; // @synthesize treeNodeRepresentingGeniusEditorContextArea=_geniusEditorContextNode;
@property(readonly) IDEWorkspaceTabControllerLayoutTreeNode *treeNodeRepresentingPrimaryEditorContextArea; // @synthesize treeNodeRepresentingPrimaryEditorContextArea=_primaryEditorContextNode;
- (void)_setEditorMultipleContext:(id)arg1 forRepresentedLayoutTreeNode:(id)arg2;
- (void)_setEditorContext:(id)arg1 forRepresentedLayoutTreeNode:(id)arg2;
- (id)editorMultipleContextForRepresentedLayoutTreeNode:(id)arg1;
- (id)editorContextForRepresentedLayoutTreeNode:(id)arg1;
- (id)representedLayoutTreeNodeForEditorMultipleContext:(id)arg1;
- (id)representedLayoutTreeNodeForEditorContext:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initUsingEditorContextsOfWorkspaceTabController:(id)arg1;

@end

@interface IDESourceControlLogItem : NSObject
{
    IDESourceControlPerson *_author;
    NSString *_revision;
    NSDate *_date;
    NSString *_message;
    NSDictionary *_filesWithStatus;
}

@property(readonly) NSDictionary *filesWithStatus; // @synthesize filesWithStatus=_filesWithStatus;
@property NSString *message; // @synthesize message=_message;
@property(readonly) NSDate *date; // @synthesize date=_date;
@property(readonly) NSString *revision; // @synthesize revision=_revision;
@property(readonly) IDESourceControlPerson *author; // @synthesize author=_author;
- (id)initWithAuthor:(id)arg1 revision:(id)arg2 date:(id)arg3 message:(id)arg4 filesWithStatus:(id)arg5;

@end

@interface IDESourceControlLog : NSObject <DVTInvalidation>
{
    NSMutableArray *_logRequests;
    DVTDispatchLock *_requestLock;
    DVTDispatchLock *_logItemsLock;
    NSMutableArray *_logItems;
    IDESourceControlTreeItem *_sourceTreeItem;
    IDESourceControlBranch *_branch;
    NSString *_lastRevisionLoaded;
    struct dispatch_queue_s *_queue;
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _isInvalidated;
    BOOL _moreAvailable;
    BOOL _groupByDay;
    BOOL _displayFilesChanged;
}

+ (id)logAspect;
@property IDESourceControlBranch *branch; // @synthesize branch=_branch;
@property BOOL displayFilesChanged; // @synthesize displayFilesChanged=_displayFilesChanged;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL groupByDay; // @synthesize groupByDay=_groupByDay;
@property IDESourceControlTreeItem *sourceTreeItem; // @synthesize sourceTreeItem=_sourceTreeItem;
@property(readonly) NSString *lastRevisionLoaded; // @synthesize lastRevisionLoaded=_lastRevisionLoaded;
@property(readonly) NSArray *logItems; // @synthesize logItems=_logItems;
- (void)previousLogItemOfRevision:(id)arg1 completionBlock:(id)arg2;
- (void)logItemForRevision:(id)arg1 completionBlock:(id)arg2;
- (id)_logItemForRevision:(id)arg1;
- (void)loadLogItemsFromRevision:(id)arg1 completionBlock:(id)arg2;
- (id)createLogItemFromLogInfo:(id)arg1;
- (void)arrangeLogEntries:(id)arg1;
- (void)clearLog;
- (void)cancelAllLogRequests;
- (void)removeLogRequest:(id)arg1;
- (void)addLogRequest:(id)arg1;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)init;

@end

@interface IDESourceControlUpdateDataSource : IDESourceControlReviewFilesDataSource
{
    NSArray *_operationInfo;
}

@property(copy) NSArray *operationInfo; // @synthesize operationInfo=_operationInfo;
- (void)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forNavigableItem:(id)arg4;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)operationInfoForWorkingTree:(id)arg1;
- (id)statusCellsForCategoryName:(id)arg1 representedObject:(id)arg2;
- (id)conflictCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)sourceControlCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)init;

@end

@interface IDESourceControlMergeDataSource : IDESourceControlReviewFilesDataSource
{
    NSArray *_operationInfo;
}

@property(copy) NSArray *operationInfo; // @synthesize operationInfo=_operationInfo;
- (void)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 willDisplayCell:(id)arg3 forNavigableItem:(id)arg4;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)operationInfoForWorkingTree:(id)arg1;
- (id)statusCellsForCategoryName:(id)arg1 representedObject:(id)arg2;
- (id)conflictCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)sourceControlCategoryStatusCellsWithRepresentedObject:(id)arg1;
- (id)init;

@end

@interface IDESourceControlConflictStatusCell : NSActionCell
{
    NSAttributedString *_string;
    NSNumber *_conflictStateForUpdateOrMerge;
    BOOL _hidden;
}

+ (void)initialize;
@property BOOL hidden; // @synthesize hidden=_hidden;
@property(copy) NSNumber *conflictStateForUpdateOrMerge; // @synthesize conflictStateForUpdateOrMerge=_conflictStateForUpdateOrMerge;
- (struct CGSize)cellSize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_barrelPathInRect:(struct CGRect)arg1 leftBarrel:(BOOL)arg2 rightBarrel:(BOOL)arg3;
- (void)_drawStatusString:(id)arg1 inPathRect:(struct CGRect)arg2 view:(id)arg3;
- (id)_validateAttributedString;
- (id)init;

@end

@interface IDEMenuKeyBinding : IDEKeyBinding
{
    NSString *_commandIdentifier;
    NSString *_groupIdentifier;
}

+ (id)keyPathsForValuesAffectingCombinedIdentifier;
+ (long long)_defaultMaxNumberOfShortcuts;
@property(copy) NSString *groupIdentifier; // @synthesize groupIdentifier=_groupIdentifier;
@property(copy) NSString *commandIdentifier; // @synthesize commandIdentifier=_commandIdentifier;
@property(readonly) NSString *combinedIdentifier;
- (BOOL)isEqualToKeyBinding:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IDETextKeyBinding : IDEKeyBinding
{
}

+ (unsigned long long)_defaultMaxNumberOfShortcuts;
- (id)commandIdentifier;

@end

@interface IDEArgumentsCapsuleSheetController : IDERunOptionsTableViewCapsuleSheetController
{
}

- (id)titleForDisplay;
- (id)pasteBoardType;

@end

@interface IDEEnvironmentVariablesCapsuleSheetController : IDERunOptionsTableViewCapsuleSheetController
{
}

- (id)titleForDisplay;
- (id)pasteBoardType;

@end

@interface IDERunOptionsTableViewCapsuleSheetController : IDEViewController <IDECapsuleViewDelegate, IDECapsuleViewController, DVTTableViewDelegate>
{
    NSArrayController *_arrayController;
    DVTTableView *_tableView;
    NSMutableArray *_tableViewContent;
    BOOL _arrayControllerCanRemoveItems;
    BOOL _canRemoveItems;
    BOOL _enabled;
}

+ (id)keyPathsForValuesAffectingCanRemoveItems;
+ (id)keyPathsForValuesAffectingCanAddItems;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property BOOL canRemoveItems; // @synthesize canRemoveItems=_canRemoveItems;
@property BOOL arrayControllerCanRemoveItems; // @synthesize arrayControllerCanRemoveItems=_arrayControllerCanRemoveItems;
@property NSMutableArray *tableViewContent; // @synthesize tableViewContent=_tableViewContent;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(id)arg1;
@property BOOL canAddItems;
@property(readonly) BOOL canRename;
@property(readonly) BOOL canRemove;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
@property(readonly) NSString *titleForDisplay;
- (void)_resizeView;
@property(readonly) NSString *pasteBoardType;
- (void)loadView;
- (id)init;

// Remaining properties
@property(readonly) BOOL canUndisclose;
@property(readonly) BOOL disclosedByDefault;
@property(readonly) NSString *footerLabel;
@property(readonly) NSImage *icon;

@end

@interface IDENoEndCapTableHeaderView : NSTableHeaderView
{
}

- (BOOL)_drawingEndSeparator;

@end

@interface IDEAutoForwardScrollEventsScrollView : NSScrollView
{
}

- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface IDEManualSymbolLoadingCapsuleSheetController : IDERunOptionsTableViewCapsuleSheetController
{
}

- (id)titleForDisplay;

@end

@interface IDESourceControlRepositoryChooserWindowController : NSWindowController <NSUserInterfaceValidations>
{
    NSPopUpButton *_popupButton;
    NSButton *_chooseButton;
    NSTextField *_progressField;
    NSImageView *_reachabilityImage;
    NSProgressIndicator *_progressIndicator;
    IDESourceControlOperationInfo *_operationInfo;
    IDESourceControlRepositoryChooserItem *_repositoryChooserItem;
    id _continuationBlock;
    int _requestType;
    NSString *_messageText;
    NSString *_infoText;
    NSWindow *_parentWindow;
    NSImage *_successImage;
    id <DVTInvalidation> _operationToken;
    BOOL _inProgress;
}

@property BOOL inProgress; // @synthesize inProgress=_inProgress;
@property(copy) NSString *infoText; // @synthesize infoText=_infoText;
@property(copy) NSString *messageText; // @synthesize messageText=_messageText;
@property int requestType; // @synthesize requestType=_requestType;
@property(copy) id continuationBlock; // @synthesize continuationBlock=_continuationBlock;
@property IDESourceControlRepositoryChooserItem *repositoryChooserItem; // @synthesize repositoryChooserItem=_repositoryChooserItem;
@property IDESourceControlOperationInfo *operationInfo; // @synthesize operationInfo=_operationInfo;
- (void)cancel:(id)arg1;
- (void)cancelSheet;
- (void)choose:(id)arg1;
- (void)selectRepository:(id)arg1;
- (void)repositoryChooserSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)successImage;
- (id)stringForReachabilityState;
- (void)endSheet;
- (void)displayError:(id)arg1;
- (void)displayErrorAndCancel:(id)arg1;
- (void)displayErrorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSheetForWindow:(id)arg1;
- (id)windowNibName;

@end

@interface IDESourceControlBranchChooserWindowController : NSWindowController
{
    NSPopUpButton *_popupButton;
    NSButton *_chooseButton;
    NSTextField *_infoTextField;
    NSTextField *_progressField;
    NSProgressIndicator *_progressIndicator;
    IDEWorkspace *_workspace;
    IDESourceControlMergeOperationInfo *_operationInfo;
    NSArray *_branches;
    IDESourceControlBranch *_selectedBranch;
    id _continuationBlock;
    NSWindow *_parentWindow;
    id <DVTInvalidation> _token;
    BOOL _inProgress;
}

@property BOOL inProgress; // @synthesize inProgress=_inProgress;
@property(copy) id continuationBlock; // @synthesize continuationBlock=_continuationBlock;
@property IDESourceControlBranch *selectedBranch; // @synthesize selectedBranch=_selectedBranch;
@property(readonly) NSArray *branches; // @synthesize branches=_branches;
@property IDESourceControlMergeOperationInfo *operationInfo; // @synthesize operationInfo=_operationInfo;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)cancel:(id)arg1;
- (void)cancelSheet;
- (void)choose:(id)arg1;
- (void)branchChooserSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)fetchBranches;
- (void)displayError:(id)arg1;
- (void)beginSheetForWindow:(id)arg1;
- (id)windowNibName;

@end

@interface IDESourceControlMultiChooserWindowController : NSWindowController
{
    NSTableView *_tableView;
    NSButton *_chooseButton;
    NSTextField *_messageTextField;
    NSTextField *_infoTextField;
    NSTextField *_progressField;
    NSImageView *_errorImageView;
    NSProgressIndicator *_progressIndicator;
    IDEWorkspace *_workspace;
    NSArray *_workingTrees;
    NSArray *_workingTreeItems;
    NSArray *_items;
    NSOperationQueue *_operationQueue;
    id _continuationBlock;
    int _requestType;
    NSMutableDictionary *_tokenDictionary;
    NSMutableDictionary *_dataCellDictionary;
    NSString *_messageText;
    NSString *_infoText;
    NSWindow *_parentWindow;
    NSImage *_successImage;
    NSImage *_errorImage;
    BOOL _inProgress;
    BOOL _canContinue;
    BOOL _willDismiss;
}

+ (id)keyPathsForValuesAffectingCanContinue;
@property BOOL canContinue; // @synthesize canContinue=_canContinue;
@property BOOL inProgress; // @synthesize inProgress=_inProgress;
@property(copy) NSString *infoText; // @synthesize infoText=_infoText;
@property(copy) NSString *messageText; // @synthesize messageText=_messageText;
@property int requestType; // @synthesize requestType=_requestType;
@property(copy) id continuationBlock; // @synthesize continuationBlock=_continuationBlock;
@property(readonly) NSArray *items; // @synthesize items=_items;
@property(copy) NSArray *workingTreeItems; // @synthesize workingTreeItems=_workingTreeItems;
@property(copy) NSArray *workingTrees; // @synthesize workingTrees=_workingTrees;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (BOOL)validateMenuItem:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)cancel:(id)arg1;
- (void)cancelSheet;
- (void)choose:(id)arg1;
- (void)multiChooserSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)endSheet;
- (id)selectedItems;
- (void)displayError:(id)arg1;
- (void)displayErrorAndCancel:(id)arg1;
- (void)displayErrorAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)updateCanContinue;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)successImage;
- (void)setupPopUpMenus;
- (void)selectRepository:(id)arg1;
- (void)setupPopUpMenuForItem:(id)arg1;
- (void)setupItems;
- (id)_operationalItemsForWorkingTree:(id)arg1;
- (void)setupText;
- (id)workingTreeForLocation:(id)arg1;
- (void)beginSheetForWindow:(id)arg1;
- (void)windowDidLoad;
- (id)windowNibName;

@end

@interface _IDESourceControlInfoConflictDetectorCancellationToken : NSObject <DVTInvalidation>
{
    DVTStackBacktrace *_invalidationBacktrace;
    BOOL _isInvalidated;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;

@end

@interface IDESourceControlInfoConflictDetector : NSObject
{
}

+ (id)detectConflictForWorkingTreeItem:(id)arg1 localRevisionIdentifier:(id)arg2 remoteBranchIdentifier:(id)arg3 remoteRevisionIdentifier:(id)arg4 ancestorRevisionIdentifier:(id)arg5 completionBlock:(id)arg6;
+ (id)allowedTypesForNonBinaryConflictResolution;
+ (id)detectConflictForDocumentLocation:(id)arg1 completionBlock:(id)arg2;
+ (void)_cleanupDocument:(id)arg1 withOptions:(int)arg2;
+ (id)_exportAncestorDocumentUsingDataSource:(id)arg1 workingTreeItem:(id)arg2 ancestorRevisionIdentifier:(id)arg3 documentOptions:(int *)arg4 error:(id *)arg5;
+ (id)_exportRemoteDocumentUsingDataSource:(id)arg1 workingTreeItem:(id)arg2 remoteBranchIdentifier:(id)arg3 remoteRevisionIdentifier:(id)arg4 documentOptions:(int *)arg5 error:(id *)arg6;
+ (id)_exportOrOpenLocalDocumentUsingDataSource:(id)arg1 workingTreeItem:(id)arg2 localRevisionIdentifier:(id)arg3 documentOptions:(int *)arg4 error:(id *)arg5;
+ (id)_originalDocumentForWorkingTreeItem:(id)arg1 error:(id *)arg2;
+ (id)_temporaryQueue;
+ (id)logAspect;

@end

@interface IDESourceControlMultiChooserItem : NSObject <DVTInvalidation>
{
    IDESourceControlRequest *_currentRequest;
    DVTOperation *_currentOperation;
    IDESourceControlOperationInfo *_info;
    int _requestType;
    NSMenu *_menu;
    NSMenuItem *_selectedItem;
    NSError *_error;
    BOOL _selected;
    BOOL _enabled;
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property int requestType; // @synthesize requestType=_requestType;
@property(copy) NSError *error; // @synthesize error=_error;
@property NSMenuItem *selectedItem; // @synthesize selectedItem=_selectedItem;
@property(copy) NSMenu *menu; // @synthesize menu=_menu;
@property BOOL selected; // @synthesize selected=_selected;
@property(readonly) IDESourceControlOperationInfo *operationInfo; // @synthesize operationInfo=_info;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (id)initWithOperationInfo:(id)arg1;

@end

@interface IDESourceControlRepositoryChooserItem : IDESourceControlMultiChooserItem
{
    IDESourceControlBranch *_currentBranch;
    NSString *_trackingRemoteName;
    NSString *_trackingBranchName;
    IDESourceControlRemote *_selectedRemote;
    IDESourceControlBranch *_selectedBranch;
}

@property IDESourceControlBranch *selectedBranch; // @synthesize selectedBranch=_selectedBranch;
@property IDESourceControlRemote *selectedRemote; // @synthesize selectedRemote=_selectedRemote;
- (void)setSelectedItem:(id)arg1;
- (void)fetchRemotesWithCompletionBlock:(id)arg1;
- (id)_defaultSelectionForItems:(id)arg1;

@end

@interface IDESourceControlBranchChooserItem : IDESourceControlMultiChooserItem
{
    IDESourceControlBranch *_selectedBranch;
}

@property IDESourceControlBranch *selectedBranch; // @synthesize selectedBranch=_selectedBranch;
- (void)setSelectedItem:(id)arg1;
- (void)fetchBranchesWithCompletionBlock:(id)arg1;

@end

@interface IDETemplateOptionsAssistant : IDETemplateInstantiationAssistant
{
    BOOL _canGoForward;
    NSView *_mainView;
    NSTextField *_firstTextField;
}

@property NSTextField *firstTextField; // @synthesize firstTextField=_firstTextField;
@property BOOL canGoForward; // @synthesize canGoForward=_canGoForward;
- (void)writeStateToUserDefaults;
- (void)restoreSelectionFromUserDefaults;
- (void)setOptionsPersistanceDictionary:(id)arg1;
- (id)optionsPersistanceDictionary;
- (void)setupOptionViews;
- (id)additionalOptions;
- (double)requiredViewSpacingForOption:(id)arg1;
- (id)createLabelForOption:(id)arg1;
- (id)createControlForOption:(id)arg1;
- (void)_setAccessibilityForCell:(id)arg1 withOption:(id)arg2 prefix:(id)arg3;
- (id)assistantTitle;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (id)nextAssistantIdentifier;
- (void)updateOptions:(id)arg1;
- (void)setAssistantContext:(id)arg1;

@end

@interface IDETemplateOptionsView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface IDEBuildIssueNoticeAnnotation : IDEBuildIssueAnnotation
{
    BOOL _isCurrentNote;
}

+ (id)nonCurrentTheme;
+ (id)inactiveCurrentTheme;
+ (id)activeTheme;
+ (id)sidebarIcon;
+ (unsigned long long)severity;
+ (double)precedence;
@property BOOL isCurrentNote; // @synthesize isCurrentNote=_isCurrentNote;
- (BOOL)isHighlightedRangesVisible;
- (id)currentStateInTextView:(id)arg1;
- (id)annotationDisplayName;
- (id)init;

@end

@interface IDESourceControlRepositoryStatusViewController : DVTViewController
{
    NSMenuItem *_representedMenuItem;
    IDESourceControlRepository *_repository;
}

+ (id)defaultViewNibName;
@property IDESourceControlRepository *repository; // @synthesize repository=_repository;
@property NSMenuItem *representedMenuItem; // @synthesize representedMenuItem=_representedMenuItem;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface IDESourceControlRepositoryStatusView : NSView
{
    NSTextField *_nameField;
    NSMenuItem *_representedMenuItem;
}

+ (void)initialize;
@property NSMenuItem *representedMenuItem; // @synthesize representedMenuItem=_representedMenuItem;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (id)attributedStringForString:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDESourceControlConflictMergeData : NSObject
{
    NSFileWrapper *_fileWrapper;
    BOOL _dirty;
}

@property(getter=isDirty) BOOL dirty; // @synthesize dirty=_dirty;
@property NSFileWrapper *fileWrapper; // @synthesize fileWrapper=_fileWrapper;

@end

@interface IDESourceControlConflictResolutionController : NSObject <DVTInvalidation>
{
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
    DVTFilePath *_mergeDataPath;
    BOOL _shouldDisableMergeSaving;
}

+ (void)copyItemAtFilePath:(id)arg1 toFilePath:(id)arg2;
+ (void)moveItemAtFilePath:(id)arg1 toFilePath:(id)arg2;
+ (int)binaryConflictMergeDirection:(id)arg1;
+ (BOOL)isBinaryConflictResolutionMergeData:(id)arg1;
+ (id)mergeDataDictionary:(id)arg1;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property BOOL shouldDisableMergeSaving; // @synthesize shouldDisableMergeSaving=_shouldDisableMergeSaving;
@property(readonly, getter=isValid) BOOL valid;
- (void)invalidate;
- (void)completeConflictResolution;
- (void)removeMergeDataForTreeItem:(id)arg1;
- (id)mergeDataForTreeItem:(id)arg1;
- (void)setMergeData:(id)arg1 forTreeItem:(id)arg2;
- (void)_validateMergeData:(id)arg1;
- (id)pathToFileWrapper:(id)arg1 inMergeData:(id)arg2;
@property(readonly) DVTFilePath *mergeDataPath;

@end

@interface IDEOpenQuicklyMatchProvider : NSObject
{
    IDEOpenQuicklySearchContext *_context;
    NSMutableArray *_matches;
}

+ (BOOL)enabled;
@property(copy) NSArray *matches; // @synthesize matches=_matches;
@property IDEOpenQuicklySearchContext *context; // @synthesize context=_context;
@property(readonly, getter=isIdle) BOOL idle;
- (void)finishCalculatingMatches;
- (void)contextDidChange;
- (void)startCalculatingMatches;
- (void)addMaches:(id)arg1;
@property(readonly) IDEOpenQuicklyPattern *pattern;
@property(readonly) IDEWorkspace *workspace;
- (id)initWithSearchContext:(id)arg1;

@end

@interface IDEOpenQuicklyEditorMatchProvider : IDEOpenQuicklyMatchProvider
{
}

- (void)contextDidChange;

@end

@interface IDEOpenQuicklyProjectMatchProvider : IDEOpenQuicklyMatchProvider
{
    NSArray *_candidates;
}

- (void)contextDidChange;
- (void)finishCalculatingMatches;
- (void)startCalculatingMatches;
- (id)recomputeMatchCandidates;
- (void)populateMatchCandidates:(id)arg1 containerItem:(id)arg2 displayPath:(id)arg3 visitedContainers:(id)arg4;
- (id)matchForFileReference:(id)arg1 displayPath:(id)arg2;
- (struct _NSRange)appendPathComponent:(id)arg1 toDisplayPath:(id)arg2;

@end

@interface IDEOpenQuicklySystemHeaderMatchProvider : IDEOpenQuicklyMatchProvider
{
    id <DVTObservingToken> _dataSourceMatchObserver;
    NSArray *_searchPaths;
    IDEOpenQuicklyPattern *_previousPattern;
    IDEOpenQuicklyDataSource *_dataSource;
}

+ (id)keyPathsForValuesAffectingIdle;
@property IDEOpenQuicklyDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property IDEOpenQuicklyPattern *previousPattern; // @synthesize previousPattern=_previousPattern;
- (void)contextDidChange;
- (void)finishCalculatingMatches;
- (void)startCalculatingMatches;
- (BOOL)isIdle;
- (id)initWithSearchContext:(id)arg1;

@end

@interface IDEOpenQuicklySymbolMatchProvider : IDEOpenQuicklyMatchProvider
{
    IDEOpenQuicklyPattern *_previousPattern;
    IDEOpenQuicklyPattern *_originalPattern;
    NSArray *_originalMatches;
    unsigned int _currentGeneration;
    BOOL _idle;
}

@property(getter=isIdle) BOOL idle; // @synthesize idle=_idle;
@property IDEOpenQuicklyPattern *originalPattern; // @synthesize originalPattern=_originalPattern;
@property IDEOpenQuicklyPattern *previousPattern; // @synthesize previousPattern=_previousPattern;
@property(copy) NSArray *originalMatches; // @synthesize originalMatches=_originalMatches;
- (void)finishCalculatingMatches;
- (void)startCalculatingMatches;
- (void)contextDidChange;
- (void)restartQuery;
- (id)initWithSearchContext:(id)arg1;

@end

@interface IDEOpenQuicklySimplePathMatchProvider : IDEOpenQuicklyMatchProvider
{
    NSArray *_searchPaths;
    id <DVTObservingToken> _dataSourceMatchObserver;
    IDEOpenQuicklyPattern *_previousPattern;
    IDEOpenQuicklyDataSource *_dataSource;
}

+ (id)keyPathsForValuesAffectingIdle;
@property IDEOpenQuicklyDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property IDEOpenQuicklyPattern *previousPattern; // @synthesize previousPattern=_previousPattern;
- (void)contextDidChange;
- (void)finishCalculatingMatches;
- (void)startCalculatingMatches;
- (BOOL)isIdle;
- (id)initWithSearchContext:(id)arg1;

@end

@interface IDEOpenQuicklyPattern : NSObject
{
    NSString *_pattern;
}

+ (id)patternWithInput:(id)arg1;
@property(readonly) NSString *pattern; // @synthesize pattern=_pattern;
- (BOOL)matchesEverythingMatchedBy:(id)arg1;
- (id)matchedRanges:(id)arg1;
- (double)scoreCandidate:(id)arg1;
- (BOOL)matchesCandidate:(id)arg1;
- (BOOL)rejectsEverything;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToPattern:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPattern:(id)arg1;

@end

@interface IDEOpenQuicklyMultipleCharacterPattern : IDEOpenQuicklyPattern
{
    char *_charactersInPattern;
    unsigned short *_patternCharacters;
    unsigned short *_lowerCasePatternCharacters;
    unsigned long long _patternLength;
}

- (id)matchedRanges:(id)arg1;
- (double)scoreCandidate:(id)arg1;
- (double)scoreCandidate:(id)arg1 matchedRanges:(id *)arg2;
- (BOOL)matchesCandidate:(id)arg1;
- (id)initWithPattern:(id)arg1;

@end

@interface IDEOpenQuicklySingleCharacterPattern : IDEOpenQuicklyPattern
{
    NSCharacterSet *eitherCaseSet;
    NSCharacterSet *exactCaseSet;
    unsigned short lowercasePattern;
}

- (id)matchedRanges:(id)arg1;
- (double)scoreCandidate:(id)arg1;
- (BOOL)matchesCandidate:(id)arg1;
- (id)initWithPattern:(id)arg1;

@end

@interface IDEOpenQuicklyPathStringMatch : IDEOpenQuicklyMatch
{
    NSString *_path;
    NSString *_displayPath;
    DVTDocumentLocation *_linelessDocumentLocation;
}

- (int)matchTypeGivenMatchContext:(id)arg1;
- (id)locationGivenMatchContext:(id)arg1;
- (id)displayPathGivenMatchContext:(id)arg1;
- (BOOL)isEqualToOpenQuicklyMatch:(id)arg1;
- (BOOL)isEqualToOpenQuicklyPathStringMatch:(id)arg1;
- (id)initWithMatchedCandidate:(id)arg1 path:(id)arg2 displayPath:(id)arg3;

@end

@interface IDEOpenQuicklyIndexSymbolMatch : IDEOpenQuicklyMatch
{
    IDEIndexSymbol *_indexSymbol;
}

- (id)image;
- (double)scoreGivenMatchContext:(id)arg1;
- (double)symbolTypeScoreCoefficient;
- (int)matchTypeGivenMatchContext:(id)arg1;
- (id)locationGivenMatchContext:(id)arg1;
- (BOOL)isEqualToOpenQuicklyMatch:(id)arg1;
- (BOOL)isEqualToOpenQuicklySymbolMatch:(id)arg1;
- (id)initWithIndexSymbol:(id)arg1;

@end

@interface IDEOpenQuicklyDataSourceMonitor : NSObject
{
    NSCountedSet *activeScans;
}

+ (id)sharedInstance;
- (void)dataSourceFinishedScanning:(id)arg1;
- (void)dataSourceStartedScanning:(id)arg1;
- (void)invokeBlockWhilePostingKVOChanges:(id)arg1;
@property(readonly) BOOL anyDataSourceIsScanning;
@property(readonly) BOOL scanningIsComplete;
- (id)init;

@end

@interface IDENavigableItemArchivableRepresentation : NSObject <NSCopying, NSCoding, NSPasteboardWriting, NSPasteboardReading>
{
    NSString *_domainIdentifier;
    NSArray *_identifierPath;
    unsigned long long _indexOfDocumentIdentifier;
    DVTDocumentLocation *_documentLocation;
    DVTFileDataType *_contextualDocumentType;
    NSString *_geniusCategoryIdentifier;
}

+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
@property(copy) NSString *geniusCategoryIdentifier; // @synthesize geniusCategoryIdentifier=_geniusCategoryIdentifier;
@property(readonly) DVTDocumentLocation *documentLocation; // @synthesize documentLocation=_documentLocation;
@property(readonly) DVTFileDataType *contextualDocumentType; // @synthesize contextualDocumentType=_contextualDocumentType;
@property(readonly) unsigned long long indexOfDocumentIdentifier; // @synthesize indexOfDocumentIdentifier=_indexOfDocumentIdentifier;
@property(readonly) NSArray *identifierPath; // @synthesize identifierPath=_identifierPath;
@property(readonly) id domainIdentifier; // @synthesize domainIdentifier=_domainIdentifier;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqualToArchivableRepresentation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithNavigableItem:(id)arg1;

@end

@interface IDEArchivableStringIndexPair : NSObject <NSCopying, NSCoding>
{
    NSString *_identifier;
    unsigned long long _index;
}

@property(readonly) unsigned long long index; // @synthesize index=_index;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 index:(unsigned long long)arg2;

@end

@interface IDEExplorationContext : NSObject
{
}


// Remaining properties
@property(readonly) int explorationType; // @dynamic explorationType;
@end

@interface IDEDiagnosticExplorationContext : IDEExplorationContext
{
    IDEDiagnosticItem *_diagnostic;
    BOOL _fixIt;
}

@property BOOL shouldFixIt; // @synthesize shouldFixIt=_fixIt;
@property(readonly) IDEDiagnosticItem *diagnostic; // @synthesize diagnostic=_diagnostic;
- (int)explorationType;
- (id)initWithDiagnostic:(id)arg1 shouldFixIt:(BOOL)arg2;

@end

@interface IDEAnalyzerResultExplorationContext : IDEExplorationContext
{
    IDEActivityLogAnalyzerResultMessage *_message;
    IDEIssue *_step;
}

@property(readonly) IDEIssue *step; // @synthesize step=_step;
@property(readonly) IDEActivityLogAnalyzerResultMessage *message; // @synthesize message=_message;
- (int)explorationType;
- (id)initWithAnalyzerResultMessage:(id)arg1 stepIssue:(id)arg2;

@end

@interface IDENoteExplorationContext : IDEExplorationContext
{
    id <IDENoteAnnotationExplorableItem> _note;
}

@property(readonly) id <IDENoteAnnotationExplorableItem> note; // @synthesize note=_note;
- (int)explorationType;
- (id)initWithNote:(id)arg1;

@end

@interface IDEActionExplorationContext : IDEExplorationContext
{
    NSString *_actionIdentifier;
}

@property(readonly) NSString *actionIdentifier; // @synthesize actionIdentifier=_actionIdentifier;
- (int)explorationType;
- (id)initWithAction:(id)arg1;

@end

@interface IDEOpenQuicklyExactPathMatchProvider : IDEOpenQuicklyMatchProvider
{
}

- (void)contextDidChange;

@end

@interface IDEFileIdentityAndTypeMultipleValuesMenuItem : NSMenuItem
{
}

+ (id)multipleValuesItem;
- (void)setEnabled:(BOOL)arg1;

@end

@interface IDEFileIdentityAndTypePopupController : IDEInspectorProperty
{
    NSPopUpButton *_popup;
}

+ (id)keyPathsForValuesAffectingFileTypeValue;
- (id)bindAndConfigure;
- (void)_updateSelection;
- (void)_selectFileTypeMenuItem:(id)arg1;
- (void)setFileTypeValue:(id)arg1;
- (id)fileTypeValue;
- (void)_restorePopup;
- (void)_populatePopup;
- (BOOL)_canSelectFileTypeFile;
- (BOOL)_canSelectFileTypeDirectory;
- (void)_updateMenuforMultipleValuesItem;
- (void)_updateDefaultItemTitle;
- (id)_multipleValuesValue;
- (id)_nullValue;
- (id)nibBundle;
@property(retain) IDEInspectorViewController *inspectorController;
- (id)initWithPropertyDefinition:(id)arg1 andController:(id)arg2;

@end

@interface IDERefactoringIssue : NSObject
{
    NSString *_message;
    int _issueType;
    DVTTextDocumentLocation *_location;
}

@property DVTTextDocumentLocation *location; // @synthesize location=_location;
@property int issueType; // @synthesize issueType=_issueType;
@property(copy) NSString *message; // @synthesize message=_message;
- (long long)compareIssue:(id)arg1;
- (BOOL)isEqualToIssue:(id)arg1;
- (id)description;
- (id)initWithMessage:(id)arg1 issueType:(int)arg2 location:(id)arg3;

@end

@interface IDERefactoringIssueNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (id)contentDocumentLocation;
- (BOOL)isLeaf;
- (id)image;
- (id)name;

@end

@interface IDERefactoringNewFile : NSObject
{
    id <IDERefactoringResult> _result;
    NSImage *_image;
    DVTFileDataType *_documentType;
    DVTDocumentLocation *_contentDocumentLocation;
    DVTFilePath *_filePath;
    NSString *_name;
}

@property(readonly) DVTFileDataType *navigableItem_documentType; // @synthesize navigableItem_documentType=_documentType;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation; // @synthesize navigableItem_contentDocumentLocation=_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image; // @synthesize navigableItem_image=_image;
@property(readonly) NSString *navigableItem_name; // @synthesize navigableItem_name=_name;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) id <IDERefactoringResult> result; // @synthesize result=_result;
- (id)description;
- (id)initWithRefactoringResult:(id)arg1;

@end

@interface IDERefactoringNewFileNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (BOOL)isLeaf;
- (id)subtitle;

@end

@interface IDERefactoringRenamedFile : IDERefactoringNewFile
{
}

- (id)initWithRefactoringResult:(id)arg1;

@end

@interface IDERefactoringRenamedFileNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (BOOL)isLeaf;
- (id)subtitle;

@end

@interface IDEContainerItemSnapshot : NSObject
{
    NSString *_name;
    NSImage *_image;
    DVTDocumentLocation *_contentDocumentLocation;
    DVTFileDataType *_documentType;
    id _originalObject;
    NSArray *_subitems;
    BOOL _leaf;
    BOOL _isMajorGroup;
    DVTFilePath *_filePath;
    IDENavigableItem *_primaryChildItem;
    BOOL _showSubitems;
}

@property(getter=isLeaf) BOOL leaf; // @synthesize leaf=_leaf;
@property(readonly) BOOL showSubitems; // @synthesize showSubitems=_showSubitems;
@property NSArray *subitems; // @synthesize subitems=_subitems;
@property(readonly) IDENavigableItem *primaryChildItem; // @synthesize primaryChildItem=_primaryChildItem;
@property(readonly) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(readonly) id originalObject; // @synthesize originalObject=_originalObject;
@property(readonly) BOOL isMajorGroup; // @synthesize isMajorGroup=_isMajorGroup;
@property(readonly) DVTFileDataType *navigableItem_documentType; // @synthesize navigableItem_documentType=_documentType;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation; // @synthesize navigableItem_contentDocumentLocation=_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image; // @synthesize navigableItem_image=_image;
- (id)description;
@property(readonly) NSString *navigableItem_name;
- (id)initWithNavigableItem:(id)arg1;

@end

@interface IDEContainerItemSnapshotNavigableItem : IDEKeyDrivenNavigableItem <IDENavigableItemFileReferenceProxy>
{
}

- (BOOL)showSubitems;
@property(readonly) IDENavigableItem *primaryChildItem;
- (BOOL)isLeaf;
- (BOOL)isMajorGroup;

@end

@interface IDESourceControlNonEmptyTextField : NSTextField
{
    BOOL _containsNonEmptyMessage;
}

@property(readonly) BOOL containsNonEmptyMessage; // @synthesize containsNonEmptyMessage=_containsNonEmptyMessage;
- (void)textDidChange:(id)arg1;
- (BOOL)_computeContainsNonEmptyMessage;

@end

@interface IDEInspectorCapsule : NSObject
{
    unsigned long long matchType;
    NSXMLElement *inspectorXMLElement;
    id matchValue;
}

@property(readonly) id matchValue; // @synthesize matchValue;
@property(readonly) NSXMLElement *inspectorXMLElement; // @synthesize inspectorXMLElement;
@property(readonly) unsigned long long matchType; // @synthesize matchType;
- (id)initWithXMLElement:(id)arg1 matchType:(unsigned long long)arg2 matchValue:(id)arg3;

@end

@interface IDEInspectorCapsuleListView : DVTStackView
{
    NSObject<IDEBindableDeclarativeInspectorController> *inspectorController;
    NSMapTable *capsuleControllersByRepresentedObject;
    NSDictionary *capsuleVariantByMatchValueMap;
    NSMapTable *capsulesByRepresentedObject;
    IDEInspectorCapsule *defaultCapsule;
    NSString *capsuleVariantKeyPath;
    NSString *capsuleTitleKeyPath;
    NSString *capsuleVariantType;
    NSString *newCapsuleTitle;
    id selectedPrimitiveValue;
    SEL deleteCapsuleAction;
    SEL newCapsuleAction;
    NSArray *capsules;
}

+ (id)capsuleListForXMLElement:(id)arg1 boundTo:(id)arg2;
+ (void)initialize;
- (BOOL)isFlipped;
- (void)updateBoundValue;
- (id)addButtonLozenge;
- (id)capsuleViewForStatusLabel:(id)arg1;
- (id)capsuleViewForRepresentedObject:(id)arg1 boundTo:(id)arg2;
- (id)capsuleForRepresentedObject:(id)arg1;
- (id)dvtExtraBindings;
- (id)initWithCapsules:(id)arg1 capsuleTitleKeyPath:(id)arg2 newCapsuleTitle:(id)arg3 newCapsuleAction:(SEL)arg4 deleteCapsuleAction:(SEL)arg5 inspectorController:(id)arg6 capsuleVariantKeyPath:(id)arg7 capsuleVariantType:(id)arg8;

@end

@interface IDEInspectorCapsuleRoundedRectView : NSView
{
    NSBezierPath *cachedPath;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)cachedPath;

@end

@interface IDEInspectorCapsuleView : DVTAutoLayoutView
{
    IDEInspectorCapsuleRoundedRectView *roundedRectView;
    NSView *view;
}

@property(readonly) NSView *view; // @synthesize view;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (id)initWithView:(id)arg1;

@end

@interface IDEInspectorCapsuleController : NSObject <IDEBindableDeclarativeInspectorController>
{
    NSObject<IDEBindableDeclarativeInspectorController> *parentInspectorController;
    id representedObject;
}

@property(readonly) id representedObject; // @synthesize representedObject;
@property(readonly) NSObject<IDEBindableDeclarativeInspectorController> *parentInspectorController; // @synthesize parentInspectorController;
- (void)reloadInspectorFromFileWhenKeyPathChanges:(id)arg1;
@property(readonly) id inspectedObject;
@property(readonly) NSArray *inspectedObjects;
@property(readonly) NSBundle *bundle;
- (id)initWithRepresentedObject:(id)arg1 parentInspectorController:(id)arg2;

@end

@interface IDEInspectorCapsuleTextLozenge : NSViewController
{
    NSString *_stringValue;
}

@property(readonly) NSString *stringValue; // @synthesize stringValue=_stringValue;
- (id)initWithStringValue:(id)arg1;

@end

@interface IDEInspectorCapsuleAddLozengeButton : NSView
{
    NSAttributedString *_cachedAttributedTitle;
    NSBezierPath *_cachedBackgroundPath;
    NSBezierPath *_cachedPlusPath;
    id _clickHandler;
    NSString *_title;
    BOOL _pressed;
}

@property(copy) NSString *title; // @synthesize title=_title;
@property(getter=isPressed) BOOL pressed; // @synthesize pressed=_pressed;
@property(copy) id clickHandler; // @synthesize clickHandler=_clickHandler;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)pressedInnerShadow;
- (id)titleShadow;
- (id)cachedAttributedTitle;
- (id)titleAttributes;
- (id)cachedBackgroundPath;
- (id)pressedGradient;
- (id)unpressedGradient;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface IDEInstallActionSheetController : IDEViewController <IDEFilePickerViewDelegate>
{
    IDEScheme *_runContext;
    IDEWorkspace *_workspace;
    IDEInstallSchemeAction *_runPhase;
    id customInstallNameObservingToken;
    NSTextField *_installNameTextField;
}

+ (void)initialize;
@property NSTextField *installNameTextField; // @synthesize installNameTextField=_installNameTextField;
@property IDEInstallSchemeAction *runPhase; // @synthesize runPhase=_runPhase;
@property IDEScheme *runContext; // @synthesize runContext=_runContext;
- (void)setCustomInstallName:(id)arg1;
- (id)customInstallName;
@property IDEWorkspace *workspace;
- (void)loadView;
- (void)updateBoundContent;
- (void)updateBoundIDEWorkspaceBinding;
- (void)updateBoundIDERunContextBinding;
- (id)dvtExtraBindings;

@end

@interface IDEProductMenuDelegate : NSObject <NSMenuDelegate>
{
}

- (void)menuWillOpen:(id)arg1;

@end

@interface IDEEntitlementsFile : NSObject
{
    DVTFilePath *_filePath;
    id _keyValuePairProxy;
}

- (void)noteValuesDidChange;
- (id)allKeys;
- (id)keyValuePairProxy;
- (id)initWithFilePath:(id)arg1;

@end

@interface _IDEEntitlementsKeyValuePairProxy : NSObject
{
    NSMutableDictionary *_keysAndValues;
    IDEEntitlementsFile *_owner;
}

- (id)plistRepresentation;
- (id)allKeys;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)allTagKeys;
- (id)identifierForKey:(id)arg1;
- (id)initWithDictionary:(id)arg1 owner:(id)arg2;

@end

@interface IDEIndexGeniusResult : NSObject
{
    IDEIndexSymbol *_indexSymbol;
}

- (id)ideModelObjectTypeIdentifier;
- (id)navigableItem_documentType;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithIndexSymbol:(id)arg1;

@end

@interface IDEIndexGeniusResultNavigableItem : IDEFileNavigableItem
{
}

- (id)fileURL;
- (id)contentDocumentLocation;
- (id)name;
- (id)documentType;
- (id)image;
- (id)_geniusResult;

@end

@interface IDEIncludesGeniusResultsFinder : IDEIndexGeniusResultsFinder
{
}

+ (id)_documentLocationFromCharacterRange:(struct _NSRange)arg1 textStorage:(id)arg2 fileURL:(id)arg3;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(id *)arg1 phaseTwoBlock:(void)arg2 phaseThreeBlock:(id *)arg3;

@end

@interface IDEDebugArea : IDEViewController
{
}

+ (id)debuggerUIExtensionForLaunchSession:(id)arg1;
- (void)activateConsole;
- (BOOL)canActivateConsole;
- (void)clearConsole;
- (BOOL)canClearConsole;

@end

@interface IDEUpgradeTaskGroup : NSObject
{
    NSString *_name;
}

@property(readonly) NSString *name; // @synthesize name=_name;
- (id)navigableItem_name;
- (id)initWithName:(id)arg1;

@end

@interface IDEUpgradeTaskWindowController : NSWindowController <NSTableViewDataSource, NSTableViewDelegate>
{
    DVTTableView *_upgradeTable;
    NSButton *_closeButton;
    NSButton *_upgradeButton;
    NSButton *_skipButton;
    IDENavigatorDataCell *_groupCell;
    NSImageCell *_imageCell;
    IDENavigatorDataCell *_itemCell;
    NSMutableArray *_items;
    IDEWorkspace *_workspace;
    IDEContainer *_container;
    id <IDEBlueprintProvider> _blueprintProvider;
    BOOL _displayingResults;
    NSImage *_successImage;
    NSImage *_errorImage;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    id _completionBlock;
}

+ (id)_nilUpgradeTask;
+ (id)_containerContextForExtension:(id)arg1 container:(id)arg2;
+ (id)_blueprintContextForExtension:(id)arg1 blueprint:(id)arg2;
+ (id)_upgradeTasksProviderExtensionForContainer:(id)arg1;
@property(readonly) BOOL displayingResults; // @synthesize displayingResults=_displayingResults;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)_canSelectTaskForRow:(long long)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)skipChanges:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)performChanges:(id)arg1;
- (void)_endSheetWithReturnCode:(id)arg1;
- (void)windowDidLoad;
- (BOOL)_loadAllUpgradeTasks;
- (id)_navigableItemForNilUpgradeTask;
- (void)_sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginSheetForWindow:(id)arg1 completionBlock:(id)arg2;
- (id)initWithWorkspace:(id)arg1 container:(id)arg2 blueprintProvider:(id)arg3;

@end

@interface IDEDebugNavigator : IDENavigator <NSMenuDelegate>
{
    DVTScopeBarView *_scopeBarView;
    IDENavigatorOutlineView *_outlineView;
    NSButton *_threadModeButton;
    NSButton *_queueModeButton;
    NSButton *_showOnlyInterestingContentButton;
    NSButton *_autoCompressMinButton;
    NSSlider *_autoCompressSlider;
    NSButton *_autoCompressMaxButton;
    IDENavigatorDataCell *_regularCell;
    IDENavigatorDataCell *_processHeaderCell;
    NSMenu *_contextualMenu;
    NSMapTable *_contentDelegateForIdentifierTable;
    NSMutableArray *_selectedRepresentedObjects;
    unsigned long long _compressionValue;
    unsigned long long _maxCompressionValue;
    int _threadOrQueueMode;
    id <DVTObservingToken> _allFinishedObservingToken;
    BOOL _isInUserDirectSelection;
    BOOL _showOnlyInterestingContent;
    BOOL _isInOutlineViewProcessPendingChanges;
    BOOL _viewWasInstalled;
}

+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)keyPathsForValuesAffectingProcessNavigableItem;
+ (id)keyPathsForValuesAffectingNavigableDebugItems;
+ (void)_removeTransientStateForKey:(id)arg1;
+ (id)_transientStateForKey:(id)arg1;
+ (void)initialize;
@property(readonly) BOOL isInUserDirectSelection; // @synthesize isInUserDirectSelection=_isInUserDirectSelection;
@property BOOL showOnlyInterestingContent; // @synthesize showOnlyInterestingContent=_showOnlyInterestingContent;
@property(readonly) int threadOrQueueMode; // @synthesize threadOrQueueMode=_threadOrQueueMode;
@property(readonly) IDENavigatorOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (BOOL)_uiShouldReact;
- (void)_outlineViewProcessPendingChanges;
- (BOOL)_writeRepresentedObjects:(id)arg1 toPasteboard:(id)arg2;
- (void)_updateForNewCompressionValue;
- (void)_updateForNewThreadOrQueueMode;
- (void)_handleLaunchSessionsChanged;
- (id)_indexesOfSelectedRepresentedObjects;
- (void)_openSelectedNavigableItemsWithEventType:(unsigned long long)arg1;
- (void)_recordSelectedRowsIntoRepresentedObjects;
- (void)contentDelegateFinished:(id)arg1;
- (id)transientStates;
- (id)expandedItemTokens;
- (unsigned long long)maxCompressionValue;
- (unsigned long long)compressionValue;
- (void)restoreExpandedAndSelectionStates;
- (void)restoreExpandedStates;
- (void)restoreSelectedStatesAndScrollToSelection:(BOOL)arg1;
- (void)scrollToSelection;
- (void)_scrollToIndexes:(id)arg1;
@property(copy) NSArray *selectedRepresentedObjects; // @dynamic selectedRepresentedObjects;
@property NSNumber *storedThreadOrQueueMode;
@property NSNumber *storedCompressionValue;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (id)_rightClickedItems;
- (id)_contentDelegateForRightClickedItems;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)_shouldExpandItemAsResultOfOptionClick:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)_handleUserDirectDeletion;
- (BOOL)_handleUserDirectMoveUpOrDown:(BOOL)arg1;
- (BOOL)_handleUserDirectShiftKeyMoveUpOrDown:(BOOL)arg1;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)processHeaderCell;
- (id)regularCell;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (id)_expandedItemTokens;
- (id)_tokenForExpandedRepresentedObject:(id)arg1;
@property(readonly) id <IDEDebugSession> debugSession;
@property(readonly) IDENavigableItem *processNavigableItem;
- (id)navigableDebugItems;
- (BOOL)delegateFirstResponder;
- (id)domainIdentifier;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)delete:(id)arg1;
- (void)copy:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)invalidate;
- (void)loadView;
- (void)openDoubleClickedNavigableItemsAction:(id)arg1;
- (void)openClickedNavigableItemAction:(id)arg1;
- (void)openSelectedNavigableItemsKeyAction:(id)arg1;
- (void)revealCurrentItem;
- (void)showQueueMode:(id)arg1;
- (void)showThreadMode:(id)arg1;
- (void)autoCompressStackFrames:(id)arg1;

// Remaining properties
@property(readonly) NSMutableArray *mutableSelectedRepresentedObjects; // @dynamic mutableSelectedRepresentedObjects;

@end

@interface IDEGlassBarView : DVTBorderedView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IDEVariablesViewSingleColumnCell : DVTImageAndTextCell
{
    NSTextStorage *_textStorage;
    NSString *_filterMatchString;
    BOOL _settingUpFieldEditor;
    BOOL _showsType;
    BOOL _showsFormattedSummary;
}

+ (id)keyPathsForValuesAffectingDataValue;
+ (id)keyPathsForValuesAffectingSummaryValue;
@property(copy) NSString *filterMatchString; // @synthesize filterMatchString=_filterMatchString;
@property BOOL showsType; // @synthesize showsType=_showsType;
@property BOOL showsFormattedSummary; // @synthesize showsFormattedSummary=_showsFormattedSummary;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGRect)_rectForValueInFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)attributedStringValue;
- (id)calculateFullAttributedString;
- (void)_recalculateAttributedStringValue;
- (void)_highlightMatchOfString:(id)arg1 onAttributedString:(id)arg2;
- (id)calculateSummaryAttributedString;
- (id)valueString;
- (id)typeString;
- (id)calculateNameString;
- (id)_attributedString:(id)arg1 withFont:(id)arg2 color:(id)arg3 changed:(BOOL)arg4 partName:(id)arg5;
- (id)summaryTextColor;
- (id)changedAttributes;
- (id)textColor;
- (BOOL)_controlViewHasFocusOrIsSourceList;
@property(readonly) id <IDEDataValue> dataValue;
- (void)setRepresentedObject:(id)arg1;
- (void)_setupCells;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)init;

@end

@interface IDEVariablesViewStateManager : NSObject
{
    IDEWorkspace *_workspace;
    NSMutableDictionary *_contextNamesToContextStates;
    BOOL _hasUnhandledArchiveData;
}

+ (id)_dataSpecifier;
- (void)_writeStateToDisk;
- (void)_readStateFromDisk;
- (void)addContextStates:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)removePersistentString:(id)arg1 fromContextName:(id)arg2;
- (id)persistentStringsForContextName:(id)arg1;
- (void)addPersistentString:(id)arg1 forContextName:(id)arg2;
- (BOOL)shouldNodeBeExpanded:(id)arg1 forContextName:(id)arg2;
- (void)nodeExpandedStateChanged:(id)arg1 forContextName:(id)arg2;
- (id)_contextStateForContextNameCreatingIfNecessary:(id)arg1;
- (id)_contextStateForContextName:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

@end

@interface IDEVariablesViewContextState : NSObject <DVTXMLUnarchiving>
{
    NSString *_contextName;
    NSMutableSet *_expandedNodePaths;
    NSMutableSet *_persistentStrings;
}

@property(readonly) NSMutableSet *persistentStrings; // @synthesize persistentStrings=_persistentStrings;
@property(readonly) NSString *contextName; // @synthesize contextName=_contextName;
- (void)addPersistentStrings:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
@property(readonly) BOOL isEmpty;
- (BOOL)isNodeExpanded:(id)arg1;
- (void)nodeExpandedStateChanged:(id)arg1;
- (void)_variablesViewContextStateCommonInit;
- (id)initWithContextName:(id)arg1;

@end

@interface IDEStringWrapper : NSObject
{
    NSString *_value;
}

@property(copy) NSString *value; // @synthesize value=_value;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
- (id)initWithString:(id)arg1;

@end

@interface IDESnapshotItemCell : NSTextFieldCell
{
    IDESnapshotItem *_snapshotItem;
}

+ (id)manualSnapshotImage;
+ (id)automaticSnapshotImage;
@property IDESnapshotItem *snapshotItem; // @synthesize snapshotItem=_snapshotItem;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)_descriptionRectForBounds:(struct CGRect)arg1 afterRect:(struct CGRect)arg2;
- (struct CGRect)_titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_dateRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_imageRectForBounds:(struct CGRect)arg1;
- (id)attributedDescription;
- (id)attributedDate;
- (id)attributedTitle;
- (BOOL)_shouldInvertColor;
- (id)snapshotImage;

@end

@interface IDESnapshotPreviewController : IDEViewController <IDEReviewFilesViewControllerDelegate>
{
    IDESnapshotItem *_selectedSnapshot;
    IDESnapshotItem *_previousSnapshot;
    DVTFilePath *_repositoryLocation;
    NSWindow *_previewSheet;
    DVTBorderedView *_borderedView;
    NSButton *_actionButton;
    NSButton *_cancelButton;
    IDEReviewFilesViewController *_reviewFilesViewController;
    IDENavigableItemCoordinator *_coordinator;
    IDESnapshotPreviewNavigatorDataSource *_navigatorDataSource;
    NSArray *_modifiedFiles;
    id <DVTObservingToken> _comparisonEditorObservingToken;
    id _previewRestoreCompletionBlock;
    BOOL _showProgress;
}

+ (id)defaultViewNibName;
+ (void)runPreviewSheetForWindow:(id)arg1 comparingSnapshot:(id)arg2 againstSnapshot:(id)arg3 snapshotsLocation:(id)arg4;
@property BOOL showProgress; // @synthesize showProgress=_showProgress;
@property(copy) NSArray *modifiedFiles; // @synthesize modifiedFiles=_modifiedFiles;
@property DVTFilePath *repositoryLocation; // @synthesize repositoryLocation=_repositoryLocation;
@property IDESnapshotItem *previousSnapshot; // @synthesize previousSnapshot=_previousSnapshot;
@property IDESnapshotItem *selectedSnapshot; // @synthesize selectedSnapshot=_selectedSnapshot;
- (void)invalidate;
- (void)previewSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)cancelAction:(id)arg1;
- (void)exportConfirmationAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_runOpenSavePanelForWindow:(id)arg1;
- (void)exportAction:(id)arg1;
- (void)previewSheetForRestoreDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)cancelRestoreAction:(id)arg1;
- (void)restoreAction:(id)arg1;
- (id)_checkedFilePaths;
- (void)willOpenDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)_configureDataSources;
- (void)_runPreviewSheetForWindow:(id)arg1;
- (void)runPreviewSheetToRestoreFiles:(id)arg1 comparePath:(id)arg2 restoreRootPath:(id)arg3 forWindow:(id)arg4 sheetDelegate:(id)arg5 completionBlock:(id)arg6;
- (void)setInitialSelectionForNavigatorOutlineView:(id)arg1;
- (void)_changeActionAndCancelButtonEnabledStateTo:(BOOL)arg1;
- (void)setWindowSizeWithHostWindow:(id)arg1;

@end

@interface IDESnapshotPreviewNavigatorDataSource : NSObject <IDEReviewFilesDataSource>
{
    IDENavigatorDataCell *_cachedFileReferenceCell;
    NSArray *_navigableItems;
}

@property NSArray *navigableItems; // @synthesize navigableItems=_navigableItems;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)issueNavigableItems;
- (id)flatNavigableItems;
- (id)fileSystemNavigableItems;
- (id)workspaceNavigableItems;

@end

@interface IDESnapshotPreviewComparisonEditorDataSource : NSObject <IDEComparisonEditorDataSource, DVTInvalidation>
{
    NSMutableDictionary *_originalFilesToTempDocuments;
    BOOL _isInvalidated;
    DVTStackBacktrace *_invalidationBacktrace;
}

@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
- (void)invalidate;
@property(readonly, getter=isValid) BOOL valid;
- (id)documentForSecondaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)documentForPrimaryDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (void)_cachedDocumentForDocumentLocation:(id)arg1 completionBlock:(id)arg2;
- (id)init;

@end

@interface IDESnapshotsListController : IDEViewController <DVTTableViewDelegate>
{
    BOOL _showUserCreatedSnapshots;
    DVTBorderedView *_scopeBar;
    NSString *_filterString;
    DVTTableView *_tableView;
    NSTableColumn *_nameColumn;
    double _tableColumnWidth;
    NSArrayController *_arrayController;
    DVTBorderedView *_toolbarView;
    BOOL _hideToolbar;
    NSButton *_restoreSnapshotButton;
    NSButton *_deleteSnapshotButton;
    id <DVTObservingToken> _selectionObserverToken;
    id <DVTObservingToken> _snapshotPathObserverToken;
    id <DVTObservingToken> _hideToolbarToken;
    id _notificationToken;
    DVTFilePath *_snapshotsLocation;
    NSArray *_allSnapshots;
    BOOL _isRestoring;
    IDESnapshotRestoreController *_restoreController;
}

+ (id)keyPathsForValuesAffectingFilterPredicate;
+ (id)defaultViewNibName;
@property BOOL showUserCreatedSnapshots; // @synthesize showUserCreatedSnapshots=_showUserCreatedSnapshots;
@property(copy) NSString *filterString; // @synthesize filterString=_filterString;
@property IDESnapshotRestoreController *restoreController; // @synthesize restoreController=_restoreController;
@property BOOL isRestoring; // @synthesize isRestoring=_isRestoring;
@property BOOL hideToolbar; // @synthesize hideToolbar=_hideToolbar;
@property NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(copy) NSArray *allSnapshots; // @synthesize allSnapshots=_allSnapshots;
@property(copy) DVTFilePath *snapshotsLocation; // @synthesize snapshotsLocation=_snapshotsLocation;
- (void)exportSnapshot:(id)arg1;
- (id)selectedSnapshot;
- (id)excludedSnapshotsForRepositoryAtPath:(id)arg1;
- (void)deleteSnapshotAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)deleteAction:(id)arg1;
@property(readonly) NSPredicate *filterPredicate;
- (void)loadAllCommits;
- (BOOL)tableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)invalidate;
- (void)viewDidInstall;
- (void)loadView;
- (id)dvtExtraBindings;

@end

@interface IDESnapshotRestoreController : IDEViewController
{
    DVTReplacementView *_replacementView;
    DVTBorderedView *_borderedView;
    NSWindow *_listSheet;
    NSButton *_restoreButton;
    NSButton *_cancelButton;
    IDESnapshotsListController *_listController;
    IDEWorkspace *_workspace;
    NSWindow *_workspaceWindow;
    IDENavigableItemCoordinator *_coordinator;
    NSDictionary *_localizedStrings;
    BOOL _showProgress;
}

+ (id)defaultViewNibName;
+ (void)runRestoreSheetForWorkspace:(id)arg1 window:(id)arg2;
@property BOOL showProgress; // @synthesize showProgress=_showProgress;
@property NSWindow *workspaceWindow; // @synthesize workspaceWindow=_workspaceWindow;
@property IDESnapshotsListController *listController; // @synthesize listController=_listController;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void)invalidate;
- (void)snapshotsListSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)cancelRestore:(id)arg1;
- (void)nothingToRestoreSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)restoreAction:(id)arg1;
- (void)_changeRestoreAndCancelButtonStateTo:(BOOL)arg1;
- (void)listControllerAction:(id)arg1;
- (id)_pathToRestorePath;
- (void)loadView;
- (void)runRestoreSheetForWorkspace:(id)arg1 window:(id)arg2;
- (void)_generateLocalizedStrings;
- (id)initUsingDefaultNib;

@end

@interface IDESnapshotRestorePreviewNavigatorDataSource : IDESnapshotPreviewComparisonEditorDataSource <IDEReviewFilesDataSource>
{
    IDENavigatorDataCell *_cachedFileReferenceCell;
    NSArray *_navigableItems;
    DVTFilePath *_restoreRootPath;
    DVTFilePath *_extractedSnapshotPath;
}

@property DVTFilePath *extractedSnapshotPath; // @synthesize extractedSnapshotPath=_extractedSnapshotPath;
@property DVTFilePath *restoreRootPath; // @synthesize restoreRootPath=_restoreRootPath;
@property NSArray *navigableItems; // @synthesize navigableItems=_navigableItems;
- (id)contentStringForSecondaryEmptyEditorWithDocumentLocation:(id)arg1;
- (id)contentStringForPrimaryEmptyEditorWithDocumentLocation:(id)arg1;
- (BOOL)shouldShowEmptyEditorForSecondaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (BOOL)shouldShowEmptyEditorForPrimaryDocumentLocation:(id)arg1 submodeType:(int)arg2;
- (id)reviewFilesNavigator:(id)arg1 documentLocationForNavigableItem:(id)arg2;
- (id)reviewFilesNavigator:(id)arg1 outlineView:(id)arg2 dataCellForNavigableItem:(id)arg3;
- (id)issueNavigableItems;
- (id)flatNavigableItems;
- (id)fileSystemNavigableItems;
- (id)workspaceNavigableItems;

@end

@interface IDEPOPrettyPathNameTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface IDEPOPrettyDateTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface IDESnapshotProjectItem : NSObject
{
    DVTFilePath *_projectLocation;
    int _projectStatus;
    NSDate *_lastOpenedDate;
    NSString *_projectTypeString;
    BOOL _isCurrentlyOpen;
    DVTFilePath *_workspaceArenaLocation;
    DVTFilePath *_snapshotsLocation;
}

+ (id)keyPathsForValueAffectingLastOpenedDate;
+ (id)keyPathsForValueAffectingProjectStatus;
+ (id)keyPathsForValueAffectingDetailedStatusString;
+ (id)keyPathsForValueAffectingStatusString;
@property BOOL isCurrentlyOpen; // @synthesize isCurrentlyOpen=_isCurrentlyOpen;
@property DVTFilePath *snapshotsLocation; // @synthesize snapshotsLocation=_snapshotsLocation;
@property DVTFilePath *workspaceArenaLocation; // @synthesize workspaceArenaLocation=_workspaceArenaLocation;
@property int projectStatus; // @synthesize projectStatus=_projectStatus;
@property DVTFilePath *projectLocation; // @synthesize projectLocation=_projectLocation;
@property(readonly) NSString *projectTypeString; // @synthesize projectTypeString=_projectTypeString;
@property(readonly) NSDate *lastOpenedDate; // @synthesize lastOpenedDate=_lastOpenedDate;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)detailedStatusString;
- (id)statusString;
- (id)navigableItem_image;
- (id)navigableItem_name;

@end

@interface IDESchemeNavigable : IDENavigableItem
{
}

+ (id)keyPathsForValuesAffectingName;
- (id)childRepresentedObjects;
- (BOOL)isLeaf;
- (id)image;
- (id)name;
- (void)dispose;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDERunDestinationNavigable : IDENavigableItem
{
}

+ (id)keyPathsForValuesAffectingName;
- (id)childRepresentedObjects;
- (BOOL)isLeaf;
- (id)image;
- (id)name;

@end

@interface IDESchemeManagerNavigable : IDENavigableItem
{
}

- (id)childRepresentedObjects;
- (BOOL)isLeaf;
- (id)image;
- (id)name;
- (void)dispose;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface IDESchemeManagerNavigableDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDESchemeToolbarController : DVTToolbarViewController <NSPathControlDelegate, IDEPathCellDelegate>
{
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    IDENavigableItem *_rootNavigable;
    IDEPathControl *_pathControl;
}

+ (id)keyPathsForValuesAffectingSelectedNavigable;
+ (id)keyPathsForValuesAffectingPathControlIsEnabled;
@property(readonly) IDENavigableItem *rootNavigable; // @synthesize rootNavigable=_rootNavigable;
- (void)_newContextAction:(id)arg1;
- (void)_manageContextsAction:(id)arg1;
- (void)_editActiveContextAction:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)pathCell:(id)arg1 accessibilityDescriptionForPathComponentCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)pathCellNoSelectionTitle;
- (void)pathCell:(id)arg1 didUpdateMenu:(id)arg2;
- (void)didUpdateRunDestinationMenu:(id)arg1;
- (void)didUpdateSchemeMenu:(id)arg1;
@property IDENavigableItem *selectedNavigable;
- (struct CGSize)maxSize;
- (struct CGSize)minSize;
- (void)_windowWillClose:(id)arg1;
- (BOOL)pathControlIsEnabled;
- (void)loadView;
- (id)initWithToolbarItemIdentifier:(id)arg1 window:(id)arg2;
- (id)_workspaceTabController;
- (id)_workspace;

@end

@interface IDESchemeToolbarBorderView : NSView
{
}

@property(readonly) struct CGRect contentRect;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDERefactoringCommands : NSObject <IDECommandHandlerVendor, IDECommandHandler>
{
    Class _selectionValidationClass;
    NSMutableDictionary *_transformationClasses;
    NSMutableDictionary *_viewControllerClasses;
    NSMutableDictionary *_inputValidatorClasses;
    id <IDESelectionSource> _selectionSource;
}

+ (id)_refactoringForMainWindow;
+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (void)initialize;
@property id <IDESelectionSource> selectionSource; // @synthesize selectionSource=_selectionSource;
- (void)genericAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)contextMenu_refactorEncapsulate:(id)arg1;
- (void)contextMenu_refactorMoveDown:(id)arg1;
- (void)contextMenu_refactorMoveUp:(id)arg1;
- (void)contextMenu_refactorCreateSuperclass:(id)arg1;
- (void)contextMenu_refactorExtract:(id)arg1;
- (void)contextMenu_refactorRename:(id)arg1;
- (void)refactorEncapsulate:(id)arg1;
- (void)refactorMoveDown:(id)arg1;
- (void)refactorMoveUp:(id)arg1;
- (void)refactorCreateSuperclass:(id)arg1;
- (void)refactorExtract:(id)arg1;
- (void)refactorRename:(id)arg1;
- (void)refactor:(id)arg1 contextMenu:(BOOL)arg2;
- (BOOL)_validateTransformation:(id)arg1 contextMenu:(BOOL)arg2 error:(id *)arg3;
- (id)init;

@end

@interface IDEDeclarativeInspectorDynamicVisibilityManager : NSObject
{
    NSObject<IDEBindableDeclarativeInspectorController> *_owner;
    NSMutableArray *_orderedIdentifiers;
    NSMutableSet *_visibleIdentifiers;
    NSMapTable *_visibleIdentifiersToSubIdentifiersMap;
    NSMapTable *_visibleIdentifierToSectionBorderedViewMap;
}

@property(readonly) NSArray *orderedIdentifiers; // @synthesize orderedIdentifiers=_orderedIdentifiers;
- (void)registerIdentifier:(id)arg1 forKeyPath:(id)arg2 withInstallBlock:(id)arg3 andUninstallBlock:(void)arg4;
- (void)uninstallIdentifier:(id)arg1 usingBlock:(id)arg2;
- (void)installIdentifier:(id)arg1 forReason:(unsigned long long)arg2 usingBlock:(id)arg3;
- (BOOL)identifierIsVisible:(id)arg1;
- (BOOL)keyPathShouldBeConsideredVisible:(id)arg1;
- (id)initWithOwner:(id)arg1;

@end

@interface IDEDeclarativeInspectorViewBasedDynamicVisibilityManager : IDEDeclarativeInspectorDynamicVisibilityManager
{
    NSMapTable *_identifierToBorderedViewsMap;
    BOOL _alternateBorderedViews;
    NSView *_view;
}

- (void)registerIdentifier:(id)arg1 forKeyPath:(id)arg2 withInstallBlock:(id)arg3 andUninstallBlock:(void)arg4;
- (void)reflowBorderedViews;
- (id)initWithView:(id)arg1 alternateSubViewBorderedViews:(BOOL)arg2 owner:(id)arg3;

@end

@interface IDEActivityReportFileIOCoordinator : NSObject
{
    NSMutableArray *_activityReports;
    NSMutableSet *_runningThrottleableActivityReports;
    NSMutableSet *_runningUnthrottleableActivityReports;
    BOOL _isAddingReports;
}

+ (id)sharedActivityReportFileIOCoordinator;
+ (void)initialize;
@property(readonly) NSSet *runningUnthrottleableActivityReports; // @synthesize runningUnthrottleableActivityReports=_runningUnthrottleableActivityReports;
@property(readonly) NSSet *runningThrottleableActivityReports; // @synthesize runningThrottleableActivityReports=_runningThrottleableActivityReports;
@property(readonly) NSArray *activityReports; // @synthesize activityReports=_activityReports;
- (void)updateWithAddedActivityReports:(id)arg1 deletedActivityReports:(id)arg2;
- (void)_stopObservingReport:(id)arg1;
- (void)_startObservingReport:(id)arg1;
- (void)_updateRunningActivityReports;
- (void)_throttleActivityReport:(id)arg1 throttleFactor:(double)arg2;
- (BOOL)_removeSortedActivityReport:(id)arg1;
- (void)_insertSortedActivityReport:(id)arg1;
- (id)_activityReportPriorityComparator;
- (unsigned long long)_allowedConcurrentActivities;
- (id)_init;
- (id)init;

@end

@interface IDEBuildFolderLocationPrefsSheetController : NSWindowController
{
    int _buildFolderLocationStyle;
    int _buildSubfolderStyle;
    NSString *_customBuildSubfolderName;
    NSTextField *_customBuildSubfolderNameField;
    NSMatrix *_buildSubfolderStyleMatrix;
    id <IDEBuildFolderLocationPrefsSheetControllerDelegate> _delegate;
}

+ (id)keyPathsForValuesAffectingEnableCustomBuildSubfolderName;
+ (id)keyPathsForValuesAffectingEnableBuildSubfolder;
@property id <IDEBuildFolderLocationPrefsSheetControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSString *customBuildSubfolderName; // @synthesize customBuildSubfolderName=_customBuildSubfolderName;
@property int buildSubfolderStyle; // @synthesize buildSubfolderStyle=_buildSubfolderStyle;
@property int buildFolderLocationStyle; // @synthesize buildFolderLocationStyle=_buildFolderLocationStyle;
- (BOOL)validateCustomBuildSubfolderName:(id *)arg1 error:(id *)arg2;
@property(readonly) BOOL enableCustomBuildSubfolderName;
@property(readonly) BOOL enableBuildSubfolder;
- (void)didEndSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)closeSheet:(id)arg1;
- (void)showSheetInWindow:(id)arg1;
- (void)windowDidLoad;
- (id)initWithWindow:(id)arg1;

@end

@interface IDEWorkspaceUserSettingsBuildFolderLocationSheetController : NSWindowController <DVTFilePathFieldCellDelegate>
{
    IDEWorkspace *_workspace;
    int _derivedDataLocationStyle;
    NSString *_derivedDataCustomLocation;
    int _buildLocationStyle;
    int _buildSubfolderNameStyle;
    NSString *_buildSubfolderCustomName;
    id <IDEWorkspaceUserSettingsBuildFolderLocationSheetControllerDelegate> _delegate;
    NSMatrix *_buildSubfolderStyleMatrix;
    DVTFilePathField *_buildFolderFilePathLabel;
    NSTextField *_buildSubfolderNameField;
}

+ (id)keyPathsForValuesAffectingBuildFolderAbsolutePath;
+ (id)keyPathsForValuesAffectingBuildFolderDefaultName;
+ (id)keyPathsForValuesAffectingUseCustomName;
+ (id)keyPathsForValuesAffectingUseBuildFolder;
@property id <IDEWorkspaceUserSettingsBuildFolderLocationSheetControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSString *buildSubfolderCustomName; // @synthesize buildSubfolderCustomName=_buildSubfolderCustomName;
@property int buildSubfolderNameStyle; // @synthesize buildSubfolderNameStyle=_buildSubfolderNameStyle;
@property int buildLocationStyle; // @synthesize buildLocationStyle=_buildLocationStyle;
@property(copy) NSString *derivedDataCustomLocation; // @synthesize derivedDataCustomLocation=_derivedDataCustomLocation;
@property int derivedDataLocationStyle; // @synthesize derivedDataLocationStyle=_derivedDataLocationStyle;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (id)DVTFilePathFieldCell:(id)arg1 resolvedPathForPath:(id)arg2;
- (BOOL)validateBuildSubfolderCustomName:(id *)arg1 error:(id *)arg2;
@property(readonly) int defaultBuildSubfolderNameStyle;
@property(readonly) NSString *defaultCustomSubfolderName;
@property(readonly) NSString *buildFolderAbsolutePath;
@property(readonly) NSString *buildFolderDefaultName;
@property(readonly) NSString *buildFolderDefaultLocation;
@property(readonly) BOOL useCustomName;
@property(readonly) BOOL useBuildFolder;
- (void)_updateControlsForCurrentLocationStyle;
- (void)didEndSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)closeSheet:(id)arg1;
- (void)showSheetInWindow:(id)arg1;
- (void)windowDidLoad;
- (id)initWithWindow:(id)arg1;

@end

@interface IDESourceControlReviewFilesWindowController : NSWindowController <IDENavigableItemCoordinatorDelegate, NSMenuDelegate>
{
    IDEReviewFilesViewController *_reviewFilesViewController;
    IDEWorkspace *_workspace;
    NSArray *_workingTrees;
    NSArray *_files;
    NSMutableArray *_workingTreeItems;
    IDESourceControlRequest *_currentRequest;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    NSWindow *_parentWindow;
    BOOL _showIgnoredFiles;
}

+ (id)sourceControlReviewFilesWindowControllerLogAspect;
@property BOOL showIgnoredFiles; // @synthesize showIgnoredFiles=_showIgnoredFiles;
@property(copy) NSArray *files; // @synthesize files=_files;
@property IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(copy) NSArray *workingTreeItems; // @synthesize workingTreeItems=_workingTreeItems;
@property(copy) NSArray *workingTrees; // @synthesize workingTrees=_workingTrees;
@property IDESourceControlRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
@property(readonly) IDEReviewFilesViewController *reviewFilesViewController; // @synthesize reviewFilesViewController=_reviewFilesViewController;
- (void)uncheckAll:(id)arg1;
- (void)checkAll:(id)arg1;
- (void)toggleIgnoredFiles:(id)arg1;
- (void)unignoreFile:(id)arg1;
- (void)ignoreFile:(id)arg1;
- (void)revertChangesAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)revertChanges:(id)arg1;
- (id)filesPathsOfContextualMenuSelectedItems;
- (id)selectedNavigableItemsofContextualMenu;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setupContextMenu;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2;
- (void)endSheetWithReturnCode:(long long)arg1;
- (void)endSheet;
- (id)defaultDisabledFilePaths;
- (id)defaultCheckedFilePaths;
- (id)workingTreeItemFilterPredicate;
- (id)workspaceItemFilterPredicate;
- (void)reloadNavigableItemsIfNecessary;
- (void)setInitialSelectionForNavigatorOutlineView:(id)arg1;
- (void)setupNavigableItemsForFlatDataSource;
- (void)setupNavigableItemsForFileSystemDataSource;
- (void)setupNavigableItemsForWorkspaceDataSource;
- (id)flatNavigableItems;
- (id)workingTreeNavigableItems;
- (id)workspaceNavigableItems;
@property(readonly) IDENavigableItemCoordinator *navigableItemCoordinator;
- (id)itemsForWorkingTree:(id)arg1;
- (id)flatDataSource;
- (id)fileSystemDataSource;
- (id)workspaceDataSource;
- (void)initDataSources;
- (void)displayError:(id)arg1;
- (void)beginReviewFiles;
- (void)beginSheetForWindow:(id)arg1;
- (void)setWindowSize;
- (id)windowNibName;
- (id)initWithWindow:(id)arg1;

@end

@interface IDEAlertEvent (Compatibility)
- (id)keyBinding;
@end

@interface IDEAlert (IDEAlertUI)
+ (id)keyPathsForValuesAffectingTextColor;
- (id)textColor;
- (id)targettedWorkspaceTabControllerForWorkspace:(id)arg1 withContext:(id)arg2;
- (id)targettedWorkspaceTabControllerForWorkspace:(id)arg1;
@end

@interface IDEWorkspace (IDEKitAdditions)
+ (id)keyPathsForValuesAffectingValueForDisplayImage;
@property(readonly) NSImage *displayImage;
@end

@interface NSObject (IDEModelObjectConformanceString)
@property(readonly) NSString *navigableItem_conformanceString;
@end

@interface NSView (IBViewAdditions)
- (struct CGRect)IDE_IB_convertRectToScreen:(struct CGRect)arg1;
@end

@interface NSWindow (IBResizingAdditions)
- (void)IDE_IB_setContentViewSizePinningTopLeft:(struct CGSize)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (struct CGRect)IDE_IB_contentRectForContentSizePinningToTopLeft:(struct CGSize)arg1;
@end

@interface NSDictionary (IBDictionaryAdditions)
+ (id)IDE_IB_strictDictionaryWithKeysAndObjects:(id)arg1;
@end

@interface NSBundle (IBAppKitBundleAdditions)
- (void)IDE_IB_loadNibNamed:(id)arg1 owner:(id)arg2;
@end

@interface DVTExtension (_IDEActionTypeExtensionDisplay)
- (id)ide_actionTypeDisplayTitle;
@end

@interface IDEWorkspace (IDEWorkspaceToolbarItemProviderAdditions)
+ (id)keyPathsForValuesAffectingToolbarObserving_isIdle;
- (BOOL)toolbarObserving_isIdle;
@end

@interface DVTViewControllerToolbarItem (IDERunPauseContinueToolbarItem)
- (void)validate;
@end

@interface NSShadow (IDEEditorStepperView_Additions)
+ (id)IDEEditorStepperView_dropShadow;
@end

@interface IDEIndexSymbol (IDEKitExtensions)
- (BOOL)notRecommended;
- (void)setPriority:(long long)arg1;
- (long long)priority;
- (id)icon;
- (id)descriptionText;
- (id)displayType;
- (id)completionText;
- (id)displayText;
@end

@interface NSFileManager (IDEOpenQuicklyAdditions)
- (BOOL)_IDEOpenQuicklyAdditions_regularFileExistsAtPath:(id)arg1;
@end

@interface IDEIndexCompletionItem (IDEKitExtensions)
- (id)icon;
@end

@interface DVTDevice (IDEDeviceActivityReporterAdditions)
@property(readonly) NSImage *activityImage;
@property(readonly) NSString *activityTitle;
@property(readonly) long long activityProgress;
@end

@interface IDEFileReference (IDEKitFileReferencePropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_contentDocumentLocation;
+ (id)keyPathsForValuesAffectingNavigableItem_documentType;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_conformanceString;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
- (void)navigableItem_noteDocumentEditedStateChanged;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDEGroup (IDEKitGroupPropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface DVTSourceLandmarkItem (IDEKitSourceLandmarkItemPropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_contentDocumentLocationInDocumentURL:(id)arg1;
@property(readonly) NSString *navigableItem_conformanceString;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface NSURL (NSURL_IDEModelObjectTypeIdentifierAdditions)
- (id)ideModelObjectTypeIdentifier;
@end

@interface NSURL (IDEKitURLPropertyAdditions) <IDENavigableItemRepresentation>
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) NSString *navigableItem_name;
@property(readonly) NSImage *navigableItem_image;

// Remaining properties
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isMajorGroup;
@end

@interface IDEActivityLogRecord (IDEKitActivityLogRecordPropertyAdditions) <IDENavigableItemRepresentation>
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isMajorGroup;
@end

@interface NSURL (IDEKitClassAdditions)
@property(readonly) NSImage *fileIcon;
- (BOOL)ide_isSameDocumentAsURL:(id)arg1;
@end

@interface IDEContainerItem (IDEKit_StructureEditing) <IDEStructureEditingTarget>
- (id)structureEditingRemoveSubitemsTargetForParentNavigableItem:(id)arg1;
- (id)structureEditingGroupingTargetForProposedNavigableItem:(id)arg1 proposedChildIndex:(long long)arg2 actualNavigableItem:(id *)arg3 actualChildIndex:(long long *)arg4;
- (id)structureEditingTargetForProposedNavigableItem:(id)arg1 proposedChildIndex:(long long)arg2 actualNavigableItem:(id *)arg3 actualChildIndex:(long long *)arg4;
- (id)structureEditingDraggingSource;
@end

@interface IDEWorkspace (IDEKitWorkspacePropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface DVTDocumentLocation (DVTDocumentLocation_ModelObjectTypeIdentifierAdditions)
- (id)ideModelObjectTypeIdentifier;
@end

@interface DVTDocumentLocation (DVTDocumentLocation_NavigableItemPropertyAdditions)
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) NSString *navigableItem_name;
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEIssue (IDEKitAdditions)
+ (BOOL)isCandidateAnnotationRepresentedObject:(id)arg1;
+ (id)defaultImageForSeverity:(unsigned long long)arg1 size:(int)arg2;
+ (id)_largeImageMapTable;
- (id)title;
- (id)locations;
- (BOOL)isNoteSeverity;
- (id)childExplorableItems;
- (id)parentExplorableItem;
- (id)navigableItem_documentType;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_image;
- (id)navigableItem_subtitle;
- (id)navigableItem_name;
@property(readonly) id exploreAnnotationRepresentedObject;
@property(readonly) id annotationRepresentedObject;
@property(readonly) NSImage *fixItImage;
@property(readonly) NSImage *image;
@end

@interface IDEIssueGroup (IDEKitAdditions) <IDENavigableItemRepresentation>
+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
- (id)maxSeverityImage;
- (id)keyPathsAffectingValueForMaxSeverityImage;
@property(readonly) NSImage *image;
@property(readonly) NSString *displayName;

// Remaining properties
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) BOOL navigableItem_isMajorGroup;
@end

@interface IDEIssueFileGroup (IDEKitAdditions)
+ (void)editorDocumentDirtyStatusDidChange:(id)arg1;
+ (void)initialize;
- (id)navigableItem_documentType;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (void)_noteDocumentEditedStateChanged;
- (id)textColor;
@property(readonly) NSImage *image;
- (void)_observeFilePathIfNecessary;
@property(readonly) NSString *displayName;
@end

@interface IDEIssueTypeGroup (IDEKitAdditions)
+ (id)keyPathsForValuesAffectingImage;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)textColor;
@property(readonly) NSImage *image;
@property(readonly) NSString *displayName;
@end

@interface IDEContainerItem (IDEKit_ContainerItemSerialization)
+ (id)SE_PREFIX_containerItemsForContainerRelativeIdentifiers:(id)arg1;
+ (id)_SE_PREFIX_containerItemForContainer:(id)arg1 withContainerItemPathComponents:(id)arg2;
- (id)SE_PREFIX_containerRelativeIdentifier;
- (id)SE_PREFIX_itemIdentifier;
@end

@interface IDEGroup (IDEKit_ContainerItemSerialization)
- (id)SE_PREFIX_itemIdentifier;
@end

@interface IDEFileReference (IDEKit_ContainerItemSerialization)
- (id)SE_PREFIX_itemIdentifier;
@end

@interface IDEIssueProvider (IDEKitAdditions)
- (id)activityLogRecordForIssue:(id)arg1;
- (id)alternateDocumentTypeForIssue:(id)arg1;
- (id)alternateDocumentLocationForIssue:(id)arg1;
@end

@interface IDEBuildIssueProvider (IDEKitAdditions)
- (id)alternateDocumentTypeForIssue:(id)arg1;
- (id)alternateDocumentLocationForIssue:(id)arg1;
@end

@interface NSDictionary (NSDictionaryScripting)
- (id)scriptingRecordDescriptor;
@end

@interface NSDocument (NSDocumentScripting)
- (void)setSdefSupport_path:(id)arg1;
- (id)sdefSupport_path;
@end

@interface NSApplication (NSApplicationScripting)
- (id)orderedDocumentsOfClass:(Class)arg1;
@end

@interface IDESourceControlTree (IDESourceControlTreePropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_lastModifiedDate;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) NSString *navigableItem_lastModifiedDate;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlRepository (IDESourceControlRepositoryNavigablePropertyAdditions)
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingNavigableItem_reachableImage;
+ (id)keyPathsForValuesAffectingNavigableItem_URLString;
- (id)progress;
- (id)navigableItem_reachableImage;
- (id)navigableItem_URLString;
@end

@interface IDESourceControlWorkingTree (IDESourceControlWorkingTreePropertyAdditions)
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) NSNumber *progress;
@property(readonly) NSString *navigableItem_lastModifiedDate;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlTreeItem (IDESourceControlTreeItemPropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatus;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatus;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_sourceControlServerStatus;
- (id)navigableItem_sourceControlLocalStatus;
@property(readonly) NSNumber *progress;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlTreeGroup (IDESourceControlTreeGroupPropertyAdditions)
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) NSNumber *progress;
- (BOOL)navigableItem_isMajorGroup;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlWorkingTreeItem (IDESourceControlTreeItemPropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatus;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatus;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) unsigned long long navigableItem_conflictStateForUpdateOrMerge;
@property(readonly) NSString *navigableItem_sourceControlServerStatus;
@property(readonly) NSString *navigableItem_sourceControlLocalStatus;
@property(readonly) NSNumber *progress;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlWorkingTreeGroup (IDESourceControlTreeGroupPropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatus;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatus;
+ (id)keyPathsForValuesAffectingProgress;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) unsigned long long navigableItem_conflictStateForUpdateOrMerge;
@property(readonly) NSString *navigableItem_sourceControlServerStatus;
@property(readonly) NSString *navigableItem_sourceControlLocalStatus;
@property(readonly) NSNumber *progress;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlBranch (IDESourceControlBranchPropertySupport)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDESourceControlRevision (IDESourceControlRevisionPropertySupport)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDEContainerItem (IDEKitContainerItemPropertyAdditions)
@property(readonly) unsigned long long navigableItem_conflictStateForUpdateOrMerge;
@property(readonly) NSString *navigableItem_sourceControlServerStatus;
@property(readonly) NSString *navigableItem_sourceControlLocalStatus;
@end

@interface IDEFileReference (IDEKitFileReferenceSourceControlPropertyAdditions) <IDEInspectorMatching>
+ (id)keyPathsForValuesAffectingNavigableItem_versionAndServerStatus;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlCurrentRevision;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatusFlag;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatus;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatusFlag;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatusString;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatus;
@property(readonly) unsigned long long navigableItem_conflictStateForUpdateOrMerge;
- (id)applicableInspectorsForCategory:(id)arg1 suggestion:(id)arg2;
- (id)sourceControlInspectorRepositoryURLString;
@property(readonly) NSString *navigableItem_versionAndServerStatus;
@property(readonly) NSString *navigableItem_sourceControlCurrentRevision;
- (int)navigableItem_sourceControlServerStatusFlag;
@property(readonly) NSString *navigableItem_sourceControlServerStatus;
- (int)navigableItem_sourceControlLocalStatusFlag;
@property(readonly) NSString *navigableItem_sourceControlLocalStatusString;
@property(readonly) NSString *navigableItem_sourceControlLocalStatus;
@end

@interface IDEGroup (IDEKitGroupSourceControlPropertyAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatusFlag;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlServerStatus;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatusFlag;
+ (id)keyPathsForValuesAffectingNavigableItem_sourceControlLocalStatus;
@property(readonly) unsigned long long navigableItem_conflictStateForUpdateOrMerge;
- (int)navigableItem_sourceControlServerStatusFlag;
@property(readonly) NSString *navigableItem_sourceControlServerStatus;
- (int)navigableItem_sourceControlLocalStatusFlag;
@property(readonly) NSString *navigableItem_sourceControlLocalStatus;
@end

@interface DVTFilePath (DVTFilePathPropertyAdditions)
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDERefactoring (IDERefactoringKitAdditions)
+ (id)currentExpressionSource;
- (id)symbolFromSourceExpression:(id)arg1;
- (id)mainFileForSelectionFilePath:(id)arg1 transformation:(id)arg2 buildSettings:(id *)arg3;
- (id)sessionWithTransformation:(id)arg1 sourceExpression:(id)arg2;
- (BOOL)isRefactoringAllowedForSelectionValidationClass:(Class)arg1 sourceExpression:(id)arg2 error:(id *)arg3;
- (BOOL)isRefactoringAllowedPerIndexing:(id *)arg1;
@end

@interface DVTDocumentLocation (IDESourceControlDocumentLocationAdditionsInternals)
+ (id)quicklookDataTypes;
@end

@interface DVTDocumentLocation (IDESourceControlDocumentLocationAdditions)
+ (id)fileDataTypeForFileDataType:(id)arg1;
- (id)exportDocumentUsingTemplateDocument:(id)arg1 completionBlock:(id)arg2 primaryBehavior:(void)arg3;
@end

@interface IDESourceControlWorkingTreeItem (IDESourceControlDocumentLocationAdditions)
- (id)exportPrivateTemporaryDocumentForBranchName:(id)arg1 revisionName:(id)arg2 usingTemplateDocument:(id)arg3 completionBlock:(id)arg4;
- (void)_doExportFileFromOriginalDocument:(id)arg1 tmpFilePath:(id)arg2 completionBlock:(id)arg3;
@end

@interface IDESourceControlWorkingTreeGroup (IDESourceControlDocumentLocationAdditions)
- (id)exportPrivateTemporaryDocumentForBranchName:(id)arg1 revisionName:(id)arg2 usingTemplateDocument:(id)arg3 completionBlock:(id)arg4;
- (void)_doExportFolderFromOriginalDocument:(id)arg1 tmpFolderPath:(id)arg2 completionBlock:(id)arg3;
@end

@interface IDESourceControlDocumentLocation (IDESourceControlDocumentLocationAdditions)
- (id)exportDocumentUsingTemplateDocument:(id)arg1 completionBlock:(id)arg2 primaryBehavior:(void)arg3;
- (id)_exportTmpVersionFromOriginalDocument:(id)arg1 completionBlock:(id)arg2;
@end

@interface IDEFramework (IDEKitFrameworkPropertyAdditions)
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEExecutionEnvironment (IDEKitExecutionEnvironmentNavigableAdditions)
@property(readonly) NSArray *navigableDebugSessions;
@end

@interface IDESharedLibraryEntry (NSPasteboardSupport) <NSPasteboardWriting>
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
@end

@interface DVTSourceModelItem (IBDVTFoundationAdditions)
- (id)containingObjCClassItem;
- (id)objCCategoryItemNameInSourceModel:(id)arg1;
- (id)objCClassItemNameInSourceModel:(id)arg1;
- (BOOL)isFoldedInTextStorage:(id)arg1;
- (id)firstDescendantItemConformingToSpecification:(id)arg1;
- (id)firstItemInLineageOfType:(id)arg1;
- (id)nameInSourceModel:(id)arg1;
- (id)specificationIdentifier;
- (id)specification;
- (unsigned long long)ancestorContextMask;
- (unsigned long long)contextMask;
- (unsigned long long)contextMaskUsingContextArray:(id)arg1;
- (BOOL)isKeyword;
- (BOOL)isTypeIdentifier;
- (BOOL)isObjCAtProtectedKeywordInSourceModel:(id)arg1;
- (BOOL)isObjCAtPublicKeywordInSourceModel:(id)arg1;
- (BOOL)isObjCAtPrivateKeywordInSourceModel:(id)arg1;
- (BOOL)isObjCSuperKeywordInSourceModel:(id)arg1;
- (BOOL)isObjCAtEndKeywordInSourceModel:(id)arg1;
- (BOOL)isClassIdentifier;
- (BOOL)isOutletCollectionKeywordInSourceModel:(id)arg1;
- (BOOL)isOutletKeywordInSourceModel:(id)arg1;
- (BOOL)isKeyword:(id)arg1 inSourceModel:(id)arg2;
- (BOOL)isObjCGenericClassMethodItem;
- (BOOL)isObjCGenericInstanceMethodItem;
- (BOOL)isObjCGenericMethodItem;
- (BOOL)isObjCClassExtensionItem;
- (BOOL)isObjCNamedCategoryImplementationDeclaratorItem;
- (BOOL)isObjCNamedCategoryInterfaceDeclaratorItem;
- (BOOL)isObjCCategoryImplementationItem;
- (BOOL)isObjCCategoryInterfaceItem;
- (BOOL)isObjCCategoryOpenParenItem;
- (BOOL)isObjCBracketExpressionItem;
- (BOOL)isObjCClassMethodImplementationItem;
- (BOOL)isObjCClassMethodDeclarationItem;
- (BOOL)isObjCInstanceMethodImplementationItem;
- (BOOL)isObjCInstanceMethodDeclarationItem;
- (BOOL)isObjCPropertyDeclarationItem;
- (BOOL)isObjCIdentifierItem;
- (BOOL)isObjCBlockItem;
- (BOOL)isObjCImplementationDeclaratorItem;
- (BOOL)isObjCInterfaceDeclaratorItem;
- (BOOL)isObjCStrictImplementationItem;
- (BOOL)isObjCStrictInterfaceItem;
- (BOOL)isObjCImplementationItem;
- (BOOL)isObjCInterfaceItem;
@end

@interface DVTLanguageSpecification (IBDVTFoundationAdditions)
+ (id)objCCategoryNameSpecification;
+ (id)objCClassNameSpecification;
+ (id)objCCategoryClauseSpecification;
+ (id)objCCategoryOpenParenSpecification;
+ (id)objCAtDynamicSpecification;
+ (id)objCAtSynthesizeSpecification;
+ (id)objCBracketExpressionSpecification;
+ (id)objCParenthesisExpressionSpecification;
+ (id)objCClassMethodImplementationSpecification;
+ (id)objCClassMethodDeclarationSpecification;
+ (id)objCInstanceMethodImplementationSpecification;
+ (id)objCInstanceMethodDeclarationSpecification;
+ (id)objCPropertyDeclarationSpecification;
+ (id)objCIdentifierSpecification;
+ (id)objCBlockSpecification;
+ (id)objCImplementationDeclaratorSpecification;
+ (id)objCImplementationSpecification;
+ (id)objCInterfaceDeclaratorSpecification;
+ (id)objCInterfaceSpecification;
- (id)specificationLineage;
- (BOOL)isObjCGenericClassMethodSpecification;
- (BOOL)isObjCGenericInstanceMethodSpecification;
- (BOOL)isObjCGenericMethodSpecification;
- (BOOL)conformsToAnySpecificationInSet:(id)arg1;
- (BOOL)conformsToSpecificationForIdentifier:(id)arg1;
- (BOOL)conformsToSpecification:(id)arg1;
@end

@interface IDEReadOnlyItemsManager (IDEKitAdditions)
- (void)_warnAboutEditingAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_confirmShouldUnlockAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_tryToUnlockItems:(id)arg1 itemName:(id)arg2 inWorkspace:(id)arg3 completionBlock:(id)arg4;
- (void)startUnlockOperationForItems:(id)arg1 name:(id)arg2 inWorkspace:(id)arg3 window:(id)arg4 completionBlock:(id)arg5;
- (void)warnAboutEditingLockedItems:(id)arg1 name:(id)arg2 forChangedObject:(id)arg3 inWorkspace:(id)arg4 window:(id)arg5 timeout:(unsigned long long)arg6 completionBlock:(id)arg7;
- (BOOL)_shouldSkipWarningAboutUnlocking;
@end

@interface NSImage (IDENSImageAdditions)
+ (id)ide_sourceControlRemotesFolderImage;
+ (id)ide_sourceControlTagsFolderImage;
+ (id)ide_sourceControlTrunkFolderImage;
+ (id)ide_sourceControlBranchFolderImage;
+ (id)ide_sourceControlRevision;
+ (id)ide_sourceControlRepository16;
+ (id)ide_sourceControlRepository32;
+ (id)ide_assistantBackgroundImage;
@end

@interface CALayer (IDECALayerAdditions)
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)convertRectToScreen:(struct CGRect)arg1;
- (struct CGRect)convertRectFromScreen:(struct CGRect)arg1;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
- (struct CGPoint)convertPointToScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
@property(readonly) NSArray *sublayersExcludingHiddenLayers;
@property(readonly) NSView *view;
@property(readonly) NSWindow *window;
@property(readonly) CALayer *rootLayer;
@end

@interface CATextLayer (IDECALayerAdditions)
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
@end

@interface IDESourceControlTreeGroup (UILevelActions)
- (void)checkoutAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)checkoutToURL:(id)arg1 attachingToWindow:(id)arg2;
@end

@interface IDESourceControlBranch (UILevelActions)
+ (id)image;
@end

@interface IDESourceControlRepository (UILevelActions)
+ (id)keyPathsForValuesAffectingReachableImage;
- (BOOL)trackRemoteBranch:(id)arg1 withLocalBranchName:(id)arg2 autoSwitchToBranch:(BOOL)arg3 attachingToWindow:(id)arg4;
- (void)removeRemoteWithName:(id)arg1 attachingToWindow:(id)arg2;
- (void)newRemoteWithName:(id)arg1 location:(id)arg2 attachingToWindow:(id)arg3 withCompletionBlock:(id)arg4;
- (void)newBranchWithName:(id)arg1 source:(id)arg2 message:(id)arg3 autoSwitchToBranch:(BOOL)arg4 attachingToWindow:(id)arg5;
- (id)reachableImage;
@end

@interface IDEArchivePackager (InterfaceExtensions)
- (id)identityMenuForBundleIdentifiers:(id)arg1 withSelectedIdentity:(id)arg2;
@end

@interface IDEMacAppStoreArchivePackager (InterfaceExtensions)
+ (id)_createHeaderItemWithTitle:(id)arg1;
+ (id)_createItemWithTitle:(id)arg1 subtitle:(id)arg2 andRepresentedObject:(id)arg3;
- (id)identityMenuForBundleIdentifiers:(id)arg1 withSelectedIdentity:(id)arg2;
@end

@interface IDECommandLineArgumentEntry (NSPasteboardSupport) <NSPasteboardReading, NSPasteboardWriting>
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
@end

@interface IDEEnvironmentVariableEntry (NSPasteboardSupport) <NSPasteboardReading, NSPasteboardWriting>
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
+ (id)readableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
@end

@interface IDESourceControlWorkingTreeGroup (IDEBinaryConflictResolution)
- (id)exportTemporaryItemPreservingSCMInformationWithBranchName:(id)arg1 revisionIdentifier:(id)arg2 completionBlock:(id)arg3;
@end

@interface IDESourceControlWorkingTreeItem (IDEBinaryConflictResolution)
- (id)exportTemporaryItemPreservingSCMInformationWithBranchName:(id)arg1 revisionIdentifier:(id)arg2 completionBlock:(id)arg3;
@end

@interface IDEDiagnosticItem (KitAdditions)
- (id)title;
- (BOOL)isNoteSeverity;
- (id)childExplorableItems;
- (id)parentExplorableItem;
@end

@interface IDEIssueLogRecordsGroup (IDEIssueLogRecordsGroup_KitAdditions)
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
@end

@interface NSString (DVTXMLArchiving)
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1;
@end

@interface IDEIssueManager (IDEKitAdditions)
@property BOOL showChildrenByType;
@property BOOL isFilteringEnabled;
@end

